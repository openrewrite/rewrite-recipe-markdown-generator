rewrite-ai-search:
  artifactId: "rewrite-ai-search"
  version: "0.25.1"
  markdownRecipeDescriptors:
    io.moderne.ai.FindCommentsLanguage:
      name: "io.moderne.ai.FindCommentsLanguage"
      description: "Finds all comments and uses AI to predict which language the comment\
        \ is in."
      docLink: "https://docs.openrewrite.org/recipes/ai/findcommentslanguage"
      options: []
      isImperative: true
      artifactId: "rewrite-ai-search"
    io.moderne.ai.FixMisencodedCommentsInFrench:
      name: "io.moderne.ai.FixMisencodedCommentsInFrench"
      description: "Fixes mis-encoded French comments in your code, javadocs and in\
        \ your pom.xml files. Mis-encoded comments contain a ? or � character."
      docLink: "https://docs.openrewrite.org/recipes/ai/fixmisencodedcommentsinfrench"
      options: []
      isImperative: false
      artifactId: "rewrite-ai-search"
    io.moderne.ai.ListAllMethodsUsed:
      name: "io.moderne.ai.ListAllMethodsUsed"
      description: "List all methods used in any Java source file."
      docLink: "https://docs.openrewrite.org/recipes/ai/listallmethodsused"
      options: []
      isImperative: true
      artifactId: "rewrite-ai-search"
    io.moderne.ai.SpellCheckCommentsInFrench:
      name: "io.moderne.ai.SpellCheckCommentsInFrench"
      description: "Use spellchecker to fix mis-encoded French comments in comments,\
        \ JavaDocs, properties or XML files. Mis-encoded comments will contain either\
        \ '?' or '�'."
      docLink: "https://docs.openrewrite.org/recipes/ai/spellcheckcommentsinfrench"
      options: []
      isImperative: true
      artifactId: "rewrite-ai-search"
    io.moderne.ai.research.FindCodeThatResembles:
      name: "io.moderne.ai.research.FindCodeThatResembles"
      description: "This recipe uses two phase AI approach to find a method invocation\
        \ that resembles a search string."
      docLink: "https://docs.openrewrite.org/recipes/ai/research/findcodethatresembles"
      options:
      - name: "k"
        type: "int"
        required: true
      - name: "resembles"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-ai-search"
    io.moderne.ai.research.GetCodeEmbedding:
      name: "io.moderne.ai.research.GetCodeEmbedding"
      description: "This recipe calls an AI model to get an embedding for either classes\
        \ or methods which can then be used for downstream tasks."
      docLink: "https://docs.openrewrite.org/recipes/ai/research/getcodeembedding"
      options:
      - name: "codeSnippetType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-ai-search"
    io.moderne.ai.research.GetRecommendations:
      name: "io.moderne.ai.research.GetRecommendations"
      description: "This recipe calls an AI model to get recommendations for modernizing\
        \ the code base by looking at a sample of method declarations."
      docLink: "https://docs.openrewrite.org/recipes/ai/research/getrecommendations"
      options:
      - name: "numberOfCenters"
        type: "int"
        required: false
      - name: "randomSampling"
        type: "Boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-ai-search"
    io.moderne.transposeCapitalization.SpongeBobCase:
      name: "io.moderne.transposeCapitalization.SpongeBobCase"
      description: "Change all your comments to be SpongeBob-case."
      docLink: "https://docs.openrewrite.org/recipes/transposecapitalization/spongebobcase"
      options: []
      isImperative: true
      artifactId: "rewrite-ai-search"
rewrite-all:
  artifactId: "rewrite-all"
  version: "1.13.0"
  markdownRecipeDescriptors:
    org.openrewrite.FindCallGraph:
      name: "org.openrewrite.FindCallGraph"
      description: "Produces a data table where each row represents a method call."
      docLink: "https://docs.openrewrite.org/recipes/core/findcallgraph"
      options:
      - name: "includeStdLib"
        type: "boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-all"
    org.openrewrite.FindDuplicateSourceFiles:
      name: "org.openrewrite.FindDuplicateSourceFiles"
      description: "Record the presence of LSTs with duplicate paths, indicating that\
        \ the same file was parsed more than once."
      docLink: "https://docs.openrewrite.org/recipes/core/findduplicatesourcefiles"
      options: []
      isImperative: true
      artifactId: "rewrite-all"
    org.openrewrite.LanguageComposition:
      name: "org.openrewrite.LanguageComposition"
      description: "Counts the number of lines of the various kinds of source code\
        \ and data formats parsed by OpenRewrite. Comments are not included in line\
        \ counts. This recipe emits its results as two data tables, making no changes\
        \ to any source file. One data table is per-file, the other is per-repository."
      docLink: "https://docs.openrewrite.org/recipes/core/languagecomposition"
      options: []
      isImperative: true
      artifactId: "rewrite-all"
rewrite-analysis:
  artifactId: "rewrite-analysis"
  version: "2.19.0"
  markdownRecipeDescriptors:
    org.openrewrite.analysis.controlflow.ControlFlowVisualization:
      name: "org.openrewrite.analysis.controlflow.ControlFlowVisualization"
      description: "Visualize the control flow of a Java program."
      docLink: "https://docs.openrewrite.org/recipes/analysis/controlflow/controlflowvisualization"
      options:
      - name: "includeDotfile"
        type: "boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-analysis"
    org.openrewrite.analysis.search.FindFlowBetweenMethods:
      name: "org.openrewrite.analysis.search.FindFlowBetweenMethods"
      description: "Takes two patterns for the start/end methods to find flow between."
      docLink: "https://docs.openrewrite.org/recipes/analysis/search/findflowbetweenmethods"
      options:
      - name: "endMatchOverrides"
        type: "Boolean"
        required: false
      - name: "endMethodPattern"
        type: "String"
        required: true
      - name: "flow"
        type: "String"
        required: true
      - name: "startMatchOverrides"
        type: "Boolean"
        required: false
      - name: "startMethodPattern"
        type: "String"
        required: true
      - name: "target"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-analysis"
    org.openrewrite.analysis.search.FindMethods:
      name: "org.openrewrite.analysis.search.FindMethods"
      description: "Find method usages by pattern."
      docLink: "https://docs.openrewrite.org/recipes/analysis/search/findmethods"
      options:
      - name: "flow"
        type: "String"
        required: false
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-analysis"
    org.openrewrite.analysis.search.UriCreatedWithHttpScheme:
      name: "org.openrewrite.analysis.search.UriCreatedWithHttpScheme"
      description: "This is a sample recipe demonstrating a simple application of\
        \ local data flow analysis."
      docLink: "https://docs.openrewrite.org/recipes/analysis/search/uricreatedwithhttpscheme"
      options: []
      isImperative: true
      artifactId: "rewrite-analysis"
rewrite-android:
  artifactId: "rewrite-android"
  version: "0.7.4"
  markdownRecipeDescriptors:
    org.openrewrite.android.ChangeAndroidSdkVersion:
      name: "org.openrewrite.android.ChangeAndroidSdkVersion"
      description: "Change `compileSdk`, `compileSdkVersion`, `targetSdk` and `targetSdkVersion`\
        \ in an Android Gradle build file to the argument version."
      docLink: "https://docs.openrewrite.org/recipes/android/changeandroidsdkversion"
      options:
      - name: "version"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_7_2:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_7_2"
      description: "Recipes to migrate to Android Gradle Plugin version 7.2."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_7_2"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_7_3:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_7_3"
      description: "Recipes to migrate to Android Gradle Plugin version 7.3."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_7_3"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_7_4:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_7_4"
      description: "Recipes to migrate to Android Gradle Plugin version 7.4."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_7_4"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_8_0:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_8_0"
      description: "Recipes to migrate to Android Gradle Plugin version 8.0."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_8_0"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_8_1:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_8_1"
      description: "Recipes to migrate to Android Gradle Plugin version 8.1."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_8_1"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_8_2:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_8_2"
      description: "Recipes to migrate to Android Gradle Plugin version 8.2."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_8_2"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_8_3:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_8_3"
      description: "Recipes to migrate to Android Gradle Plugin version 8.3."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_8_3"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_8_4:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_8_4"
      description: "Recipes to migrate to Android Gradle Plugin version 8.4."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_8_4"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_8_5:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_8_5"
      description: "Recipes to migrate to Android Gradle Plugin version 8.5."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_8_5"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_8_6:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_8_6"
      description: "Recipes to migrate to Android Gradle Plugin version 8.6."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_8_6"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.MigrateToAndroidGradlePlugin_8_7:
      name: "org.openrewrite.android.MigrateToAndroidGradlePlugin_8_7"
      description: "Recipes to migrate to Android Gradle Plugin version 8.7."
      docLink: "https://docs.openrewrite.org/recipes/android/migratetoandroidgradleplugin_8_7"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.UpgradeAndroidGradlePluginVersion:
      name: "org.openrewrite.android.UpgradeAndroidGradlePluginVersion"
      description: "Upgrade Android Gradle Plugin (AGP) version and update the Gradle\
        \ Wrapper version. Compatible versions are published in the [AGP release notes](https://developer.android.com/build/releases/gradle-plugin)."
      docLink: "https://docs.openrewrite.org/recipes/android/upgradeandroidgradlepluginversion"
      options:
      - name: "agpVersion"
        type: "String"
        required: true
      - name: "gradleWrapperVersion"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-android"
    org.openrewrite.android.UpgradeToAndroidSDK33:
      name: "org.openrewrite.android.UpgradeToAndroidSDK33"
      description: "Recipes to upgrade to Android SDK version 33."
      docLink: "https://docs.openrewrite.org/recipes/android/upgradetoandroidsdk33"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.UpgradeToAndroidSDK34:
      name: "org.openrewrite.android.UpgradeToAndroidSDK34"
      description: "Recipes to upgrade to Android SDK version 34."
      docLink: "https://docs.openrewrite.org/recipes/android/upgradetoandroidsdk34"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
    org.openrewrite.android.UpgradeToAndroidSDK35:
      name: "org.openrewrite.android.UpgradeToAndroidSDK35"
      description: "Recipes to upgrade to Android SDK version 35."
      docLink: "https://docs.openrewrite.org/recipes/android/upgradetoandroidsdk35"
      options: []
      isImperative: false
      artifactId: "rewrite-android"
rewrite-apache:
  artifactId: "rewrite-apache"
  version: "2.4.0"
  markdownRecipeDescriptors:
    org.openrewrite.apache.commons.codec.ApacheBase64ToJavaBase64:
      name: "org.openrewrite.apache.commons.codec.ApacheBase64ToJavaBase64"
      description: "Prefer the Java standard library's `java.util.Base64` over third-party\
        \ usage of apache's `apache.commons.codec.binary.Base64`."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/codec/apachebase64tojavabase64"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.collections.UpgradeApacheCommonsCollections_3_4:
      name: "org.openrewrite.apache.commons.collections.UpgradeApacheCommonsCollections_3_4"
      description: "Migrate applications to the latest Apache Commons Collections\
        \ 4.x release. This recipe modifies application's build files, make changes\
        \ to deprecated/preferred APIs, and migrates configuration settings that have\
        \ changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/collections/upgradeapachecommonscollections_3_4"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.io.ApacheCommonsFileUtilsRecipes:
      name: "org.openrewrite.apache.commons.io.ApacheCommonsFileUtilsRecipes"
      description: "Refaster template recipes for `org.openrewrite.apache.commons.io.ApacheCommonsFileUtils`."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/io/apachecommonsfileutilsrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.io.ApacheCommonsFileUtilsRecipes$GetFileRecipe:
      name: "org.openrewrite.apache.commons.io.ApacheCommonsFileUtilsRecipes$GetFileRecipe"
      description: "Replace Apache Commons `FileUtils.getFile(String... name)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/io/apachecommonsfileutilsrecipesusdgetfilerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.io.ApacheCommonsFileUtilsRecipes$WriteStringToFileRecipe:
      name: "org.openrewrite.apache.commons.io.ApacheCommonsFileUtilsRecipes$WriteStringToFileRecipe"
      description: "Replace Apache Commons `FileUtils.writeStringToFile(File file,\
        \ String data)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/io/apachecommonsfileutilsrecipesusdwritestringtofilerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.io.ApacheFileUtilsToJavaFiles:
      name: "org.openrewrite.apache.commons.io.ApacheFileUtilsToJavaFiles"
      description: "Prefer the Java standard library's `java.nio.file.Files` over\
        \ third-party usage of apache's `apache.commons.io.FileUtils`."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/io/apachefileutilstojavafiles"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.io.ApacheIOUtilsUseExplicitCharset:
      name: "org.openrewrite.apache.commons.io.ApacheIOUtilsUseExplicitCharset"
      description: "Use `IOUtils` method invocations that include the charset encoding\
        \ instead of using the deprecated versions that do not include a charset encoding.\
        \ (e.g. converts `IOUtils.readLines(inputStream)` to `IOUtils.readLines(inputStream,\
        \ StandardCharsets.UTF_8)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/io/apacheioutilsuseexplicitcharset"
      options:
      - name: "encoding"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.io.RelocateApacheCommonsIo:
      name: "org.openrewrite.apache.commons.io.RelocateApacheCommonsIo"
      description: "The deployment of `org.apache.commons:commons-io` [was a publishing\
        \ mistake around 2012](https://issues.sonatype.org/browse/MVNCENTRAL-244)\
        \ which was corrected by changing the deployment GAV to be located under `commons-io:commons-io`."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/io/relocateapachecommonsio"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.io.UseStandardCharsets:
      name: "org.openrewrite.apache.commons.io.UseStandardCharsets"
      description: "Prefer the Java standard library's `java.nio.charset.StandardCharsets`\
        \ over third-party usage of apache's `org.apache.commons.io.Charsets`."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/io/usestandardcharsets"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.io.UseSystemLineSeparator:
      name: "org.openrewrite.apache.commons.io.UseSystemLineSeparator"
      description: "Prefer the Java standard library's `System.lineSeparator()` over\
        \ third-party usage of apache's `IOUtils.LINE_SEPARATOR`."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/io/usesystemlineseparator"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes"
      description: "Refaster template recipes for `org.openrewrite.apache.commons.lang.ApacheCommonsStringUtils`."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$AbbreviateRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$AbbreviateRecipe"
      description: "Replace Apache Commons `StringUtils.abbreviate(String str, int\
        \ maxWidth)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdabbreviaterecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$CapitalizeRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$CapitalizeRecipe"
      description: "Replace Apache Commons `StringUtils.capitalize(String str)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdcapitalizerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$DefaultStringFallbackRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$DefaultStringFallbackRecipe"
      description: "Replace Apache Commons `StringUtils.defaultString(String str,\
        \ String nullDefault)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusddefaultstringfallbackrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$DefaultStringRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$DefaultStringRecipe"
      description: "Replace Apache Commons `StringUtils.defaultString(String str)`\
        \ with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusddefaultstringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$DeleteWhitespaceRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$DeleteWhitespaceRecipe"
      description: "Replace Apache Commons `StringUtils.deleteWhitespace(String str)`\
        \ with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusddeletewhitespacerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$EqualsIgnoreCaseRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$EqualsIgnoreCaseRecipe"
      description: "Replace Apache Commons `StringUtils.equalsIgnoreCase(CharSequence\
        \ cs1, CharSequence cs2)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdequalsignorecaserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$EqualsRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$EqualsRecipe"
      description: "Replace Apache Commons `StringUtils.equals(CharSequence cs1, CharSequence\
        \ cs2)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdequalsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$LowercaseRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$LowercaseRecipe"
      description: "Replace Apache Commons `StringUtils.lowerCase(String str)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdlowercaserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$RemoveEndRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$RemoveEndRecipe"
      description: "Replace Apache Commons `StringUtils.removeEnd(String str, String\
        \ remove)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdremoveendrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$ReplaceRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$ReplaceRecipe"
      description: "Replace Apache Commons `StringUtils.replace(String text, String\
        \ searchString, String replacement)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdreplacerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$ReverseRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$ReverseRecipe"
      description: "Replace Apache Commons `StringUtils.reverse(String str)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdreverserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$SplitRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$SplitRecipe"
      description: "Replace Apache Commons `StringUtils.split(String str)` with JDK\
        \ provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdsplitrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$StripRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$StripRecipe"
      description: "Replace Apache Commons `StringUtils.strip(String str)` with JDK\
        \ provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdstriprecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$TrimRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$TrimRecipe"
      description: "Replace Apache Commons `StringUtils.trim(String str)` with JDK\
        \ provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdtrimrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$TrimToEmptyRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$TrimToEmptyRecipe"
      description: "Replace Apache Commons `StringUtils.trimToEmpty(String str)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdtrimtoemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$TrimToNullRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$TrimToNullRecipe"
      description: "Replace Apache Commons `StringUtils.trimToNull(String str)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusdtrimtonullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$UppercaseRecipe:
      name: "org.openrewrite.apache.commons.lang.ApacheCommonsStringUtilsRecipes$UppercaseRecipe"
      description: "Replace Apache Commons `StringUtils.upperCase(String str)` with\
        \ JDK internals."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/apachecommonsstringutilsrecipesusduppercaserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.IsNotEmptyToJdk:
      name: "org.openrewrite.apache.commons.lang.IsNotEmptyToJdk"
      description: "Replace any `StringUtils#isEmpty(String)` and `#isNotEmpty(String)`\
        \ with `s == null || s.isEmpty()` and `s != null && !s.isEmpty()`."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/isnotemptytojdk"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.lang.UpgradeApacheCommonsLang_2_3:
      name: "org.openrewrite.apache.commons.lang.UpgradeApacheCommonsLang_2_3"
      description: "Migrate applications to the latest Apache Commons Lang 3.x release.\
        \ This recipe modifies application's build files, and changes the package\
        \ as per [the migration release notes](https://commons.apache.org/proper/commons-lang/article3_0.html)."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/lang/upgradeapachecommonslang_2_3"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.commons.math.UpgradeApacheCommonsMath_2_3:
      name: "org.openrewrite.apache.commons.math.UpgradeApacheCommonsMath_2_3"
      description: "Migrate applications to the latest Apache Commons Math 3.x release.\
        \ This recipe modifies  application's build files, make changes to deprecated/preferred\
        \ APIs, and migrates configuration settings that have changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/apache/commons/math/upgradeapachecommonsmath_2_3"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient4.MappingDeprecatedClasses:
      name: "org.openrewrite.apache.httpclient4.MappingDeprecatedClasses"
      description: "Uses new classes/methods instead of the deprecated ones"
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient4/mappingdeprecatedclasses"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient4.MigrateDefaultHttpClient:
      name: "org.openrewrite.apache.httpclient4.MigrateDefaultHttpClient"
      description: "Since `DefaultHttpClient` is deprecated, we need to change it\
        \ to the `CloseableHttpClient`. It only covers the default scenario with no\
        \ custom `HttpParams` or `ConnectionManager`.\n\nOf note: the `DefaultHttpClient`\
        \ [does not support TLS 1.2](https://find-sec-bugs.github.io/bugs.htm#DEFAULT_HTTP_CLIENT).\n\
        \nReferences:\n - [Find Sec Bugs](https://find-sec-bugs.github.io/bugs.htm#DEFAULT_HTTP_CLIENT)\
        \ - [IBM Support Pages](https://www.ibm.com/support/pages/im-using-apache-httpclient-make-outbound-call-my-web-application-running-websphere-application-server-traditional-and-im-getting-ssl-handshake-error-how-can-i-debug)"
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient4/migratedefaulthttpclient"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient4.UpgradeApacheHttpClient_4_5:
      name: "org.openrewrite.apache.httpclient4.UpgradeApacheHttpClient_4_5"
      description: "Migrate applications to the latest Apache HttpClient 4.5.x release.\
        \ This recipe modifies  application's build files, make changes to deprecated/preferred\
        \ APIs, and migrates configuration settings that have changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient4/upgradeapachehttpclient_4_5"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient5.AddTimeUnitArgument:
      name: "org.openrewrite.apache.httpclient5.AddTimeUnitArgument"
      description: "In Apache Http Client 5.x migration, an extra TimeUnit argument\
        \ is required in the timeout and duration methods. Previously in 4.x, all\
        \ these methods were implicitly having the timeout or duration expressed in\
        \ milliseconds, but in 5.x the unit of the timeout or duration is required.\
        \ So, by default this recipe adds `TimeUnit.MILLISECONDS`, it is possible\
        \ to specify this as a parameter. Since all affected methods of the Apache\
        \ Http Client 5.x migration only have one integer/long argument, the recipe\
        \ applies with matched method invocations of exactly one parameter."
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient5/addtimeunitargument"
      options:
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "timeUnit"
        type: "TimeUnit"
        required: false
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient5.MigrateAuthScope:
      name: "org.openrewrite.apache.httpclient5.MigrateAuthScope"
      description: "Replace removed constant `org.apache.http.auth.AuthScope.AuthScope.ANY`\
        \ with `new org.apache.hc.client5.http.auth.AuthScope(null, -1)`"
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient5/migrateauthscope"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient5.MigrateRequestConfig:
      name: "org.openrewrite.apache.httpclient5.MigrateRequestConfig"
      description: "Migrate `RequestConfig` to httpclient5."
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient5/migraterequestconfig"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient5.NewStatusLine:
      name: "org.openrewrite.apache.httpclient5.NewStatusLine"
      description: "`HttpResponse::getStatusLine()` was deprecated in 4.x, so we replace\
        \ it for `new StatusLine(HttpResponse)`. Ideally we will try to simplify method\
        \ chains for `getStatusCode`, `getProtocolVersion` and `getReasonPhrase`,\
        \ but there are some scenarios where the `StatusLine` object is assigned or\
        \ used directly, and we need to instantiate the object."
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient5/newstatusline"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient5.StatusLine:
      name: "org.openrewrite.apache.httpclient5.StatusLine"
      description: "Migrates deprecated methods to their equivalent ones in 5.x"
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient5/statusline"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient5.UpgradeApacheHttpClient_5:
      name: "org.openrewrite.apache.httpclient5.UpgradeApacheHttpClient_5"
      description: "Migrate applications to the latest Apache HttpClient 5.x release.\
        \ This recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient5/upgradeapachehttpclient_5"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient5.UpgradeApacheHttpClient_5_ClassMapping:
      name: "org.openrewrite.apache.httpclient5.UpgradeApacheHttpClient_5_ClassMapping"
      description: "Mapping of all the compatible classes of ApacheHttpClient 5.x\
        \ from 4.x."
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient5/upgradeapachehttpclient_5_classmapping"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient5.UpgradeApacheHttpClient_5_DeprecatedMethods:
      name: "org.openrewrite.apache.httpclient5.UpgradeApacheHttpClient_5_DeprecatedMethods"
      description: "Migrates deprecated methods to their equivalent ones in 5.x"
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient5/upgradeapachehttpclient_5_deprecatedmethods"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient5.UpgradeApacheHttpClient_5_TimeUnit:
      name: "org.openrewrite.apache.httpclient5.UpgradeApacheHttpClient_5_TimeUnit"
      description: "Apache HttpClient 5.x Timeout and duration methods need an extra\
        \ the TimeUnit argument. This recipe uses milliseconds as a default unit."
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient5/upgradeapachehttpclient_5_timeunit"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.apache.httpclient5.UsernamePasswordCredentials:
      name: "org.openrewrite.apache.httpclient5.UsernamePasswordCredentials"
      description: "Change the password argument going into `UsernamePasswordCredentials`\
        \ to be a `char[]`."
      docLink: "https://docs.openrewrite.org/recipes/apache/httpclient5/usernamepasswordcredentials"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes"
      description: "Refaster template recipes for `org.openrewrite.apache.maven.shared.MavenSharedStringUtils`."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$AbbreviateRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$AbbreviateRecipe"
      description: "Replace Maven Shared `StringUtils.abbreviate(String str, int maxWidth)`\
        \ with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusdabbreviaterecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$CapitaliseRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$CapitaliseRecipe"
      description: "Replace Maven Shared `StringUtils.capitalise(String str)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusdcapitaliserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$DefaultStringFallbackRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$DefaultStringFallbackRecipe"
      description: "Replace Maven Shared `StringUtils.defaultString(Object obj, String\
        \ nullDefault)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusddefaultstringfallbackrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$DefaultStringRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$DefaultStringRecipe"
      description: "Replace Maven Shared `StringUtils.defaultString(Object obj)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusddefaultstringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$DeleteWhitespaceRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$DeleteWhitespaceRecipe"
      description: "Replace Maven Shared `StringUtils.deleteWhitespace(String str)`\
        \ with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusddeletewhitespacerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$EqualsIgnoreCaseRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$EqualsIgnoreCaseRecipe"
      description: "Replace Maven Shared `StringUtils.equalsIgnoreCase(String str1,\
        \ String str2)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusdequalsignorecaserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$EqualsRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$EqualsRecipe"
      description: "Replace Maven Shared `StringUtils.equals(String str1, String str2)`\
        \ with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusdequalsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$LowercaseRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$LowercaseRecipe"
      description: "Replace Maven Shared `StringUtils.lowerCase(String str)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusdlowercaserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$ReplaceRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$ReplaceRecipe"
      description: "Replace Maven Shared `StringUtils.replace(String text, String\
        \ searchString, String replacement)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusdreplacerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$ReverseRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$ReverseRecipe"
      description: "Replace Maven Shared `StringUtils.reverse(String str)` with JDK\
        \ provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusdreverserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$SplitRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$SplitRecipe"
      description: "Replace Maven Shared `StringUtils.split(String str)` with JDK\
        \ provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusdsplitrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$StripRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$StripRecipe"
      description: "Replace Maven Shared `StringUtils.strip(String str)` with JDK\
        \ provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusdstriprecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$TrimRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$TrimRecipe"
      description: "Replace Maven Shared `StringUtils.trim(String str)` with JDK provided\
        \ API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusdtrimrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$UppercaseRecipe:
      name: "org.openrewrite.apache.maven.shared.MavenSharedStringUtilsRecipes$UppercaseRecipe"
      description: "Replace Maven Shared `StringUtils.upperCase(String str)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/apache/maven/shared/mavensharedstringutilsrecipesusduppercaserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.ReplaceSetBoldweightWithSetBoldRecipes:
      name: "org.openrewrite.apache.poi.ReplaceSetBoldweightWithSetBoldRecipes"
      description: "Replace `Font.setBoldweight(short)` or equivalent with `Font.setBold(boolean)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/replacesetboldweightwithsetboldrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.ReplaceSetBoldweightWithSetBoldRecipes$ReplaceSetBoldweightBoldWithSetBoldTrueRecipe:
      name: "org.openrewrite.apache.poi.ReplaceSetBoldweightWithSetBoldRecipes$ReplaceSetBoldweightBoldWithSetBoldTrueRecipe"
      description: "Replace `Font.setBoldweight(Font.BOLDWEIGHT_BOLD)` or equivalent\
        \ with `Font.setBold(true)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/replacesetboldweightwithsetboldrecipesusdreplacesetboldweightboldwithsetboldtruerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.ReplaceSetBoldweightWithSetBoldRecipes$ReplaceSetBoldweightNormalWithSetBoldFalseRecipe:
      name: "org.openrewrite.apache.poi.ReplaceSetBoldweightWithSetBoldRecipes$ReplaceSetBoldweightNormalWithSetBoldFalseRecipe"
      description: "Replace `Font.setBoldweight(Font.BOLDWEIGHT_NORMAL)` or equivalent\
        \ with `Font.setBold(false)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/replacesetboldweightwithsetboldrecipesusdreplacesetboldweightnormalwithsetboldfalserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes:
      name: "org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes"
      description: "Replace `Cell.setCellType(int)` with equivalent `Cell.setCellType(CellType)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/replacesetcelltyperecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeBlankRecipe:
      name: "org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeBlankRecipe"
      description: "Replace `Cell.setCellType(Cell.CELL_TYPE_BLANK)` with `Cell.setCellType(CellType.BLANK)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/replacesetcelltyperecipesusdreplacesetcelltypeblankrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeBooleanRecipe:
      name: "org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeBooleanRecipe"
      description: "Replace `Cell.setCellType(Cell.CELL_TYPE_BOOLEAN)` with `Cell.setCellType(CellType.BOOLEAN)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/replacesetcelltyperecipesusdreplacesetcelltypebooleanrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeErrorRecipe:
      name: "org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeErrorRecipe"
      description: "Replace `Cell.setCellType(Cell.CELL_TYPE_ERROR)` with `Cell.setCellType(CellType.ERROR)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/replacesetcelltyperecipesusdreplacesetcelltypeerrorrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeFormulaRecipe:
      name: "org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeFormulaRecipe"
      description: "Replace `Cell.setCellType(Cell.CELL_TYPE_FORMULA)` with `Cell.setCellType(CellType.FORMULA)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/replacesetcelltyperecipesusdreplacesetcelltypeformularecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeNumericRecipe:
      name: "org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeNumericRecipe"
      description: "Replace `Cell.setCellType(Cell.CELL_TYPE_NUMERIC)` with `Cell.setCellType(CellType.NUMERIC)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/replacesetcelltyperecipesusdreplacesetcelltypenumericrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeStringRecipe:
      name: "org.openrewrite.apache.poi.ReplaceSetCellTypeRecipes$ReplaceSetCellTypeStringRecipe"
      description: "Replace `Cell.setCellType(Cell.CELL_TYPE_STRING)` with `Cell.setCellType(CellType.STRING)`."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/replacesetcelltyperecipesusdreplacesetcelltypestringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.apache.poi.UpgradeApachePoi_3_17:
      name: "org.openrewrite.apache.poi.UpgradeApachePoi_3_17"
      description: "Migrates to the last Apache POI 3.x release. This recipe modifies\
        \ build files and makes changes to deprecated/preferred APIs that have changed\
        \ between versions."
      docLink: "https://docs.openrewrite.org/recipes/apache/poi/upgradeapachepoi_3_17"
      options: []
      isImperative: false
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.AbstractLogEnabledToSlf4j:
      name: "org.openrewrite.codehaus.plexus.AbstractLogEnabledToSlf4j"
      description: "Introduce a SLF4J `Logger` field and replace calls to `getLogger()`\
        \ with calls to the field."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/abstractlogenabledtoslf4j"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusFileUtilsRecipes:
      name: "org.openrewrite.codehaus.plexus.PlexusFileUtilsRecipes"
      description: "Refaster template recipes for `org.openrewrite.codehaus.plexus.PlexusFileUtils`."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusfileutilsrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusFileUtilsRecipes$DeleteDirectoryFileRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusFileUtilsRecipes$DeleteDirectoryFileRecipe"
      description: "Replace Plexus `FileUtils.deleteDirectory(File directory)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusfileutilsrecipesusddeletedirectoryfilerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusFileUtilsRecipes$DeleteDirectoryStringRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusFileUtilsRecipes$DeleteDirectoryStringRecipe"
      description: "Replace Plexus `FileUtils.deleteDirectory(String directory)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusfileutilsrecipesusddeletedirectorystringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusFileUtilsRecipes$FileExistsStringRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusFileUtilsRecipes$FileExistsStringRecipe"
      description: "Replace Plexus `FileUtils.fileExists(String fileName)` with JDK\
        \ provided API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusfileutilsrecipesusdfileexistsstringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusFileUtilsRecipes$GetFileRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusFileUtilsRecipes$GetFileRecipe"
      description: "Replace Plexus `FileUtils.getFile(String fileName)` with JDK provided\
        \ API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusfileutilsrecipesusdgetfilerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes"
      description: "Refaster template recipes for `org.openrewrite.codehaus.plexus.PlexusStringUtils`."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$AbbreviateRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$AbbreviateRecipe"
      description: "Replace Plexus `StringUtils.abbreviate(String str, int maxWidth)`\
        \ with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusdabbreviaterecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$CapitaliseRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$CapitaliseRecipe"
      description: "Replace Plexus `StringUtils.capitalise(String str)` with JDK provided\
        \ API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusdcapitaliserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$DefaultStringFallbackRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$DefaultStringFallbackRecipe"
      description: "Replace Plexus `StringUtils.defaultString(Object obj, String nullDefault)`\
        \ with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusddefaultstringfallbackrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$DefaultStringRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$DefaultStringRecipe"
      description: "Replace Plexus `StringUtils.defaultString(Object obj)` with JDK\
        \ provided API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusddefaultstringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$DeleteWhitespaceRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$DeleteWhitespaceRecipe"
      description: "Replace Plexus `StringUtils.deleteWhitespace(String str)` with\
        \ JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusddeletewhitespacerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$EqualsIgnoreCaseRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$EqualsIgnoreCaseRecipe"
      description: "Replace Plexus `StringUtils.equalsIgnoreCase(String str1, String\
        \ str2)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusdequalsignorecaserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$EqualsRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$EqualsRecipe"
      description: "Replace Plexus `StringUtils.equals(String str1, String str2)`\
        \ with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusdequalsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$LowercaseRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$LowercaseRecipe"
      description: "Replace Plexus `StringUtils.lowerCase(String str)` with JDK provided\
        \ API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusdlowercaserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$ReplaceRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$ReplaceRecipe"
      description: "Replace Plexus `StringUtils.replace(String text, String searchString,\
        \ String replacement)` with JDK provided API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusdreplacerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$ReverseRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$ReverseRecipe"
      description: "Replace Plexus `StringUtils.reverse(String str)` with JDK provided\
        \ API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusdreverserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$SplitRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$SplitRecipe"
      description: "Replace Plexus `StringUtils.split(String str)` with JDK provided\
        \ API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusdsplitrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$StripRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$StripRecipe"
      description: "Replace Plexus `StringUtils.strip(String str)` with JDK provided\
        \ API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusdstriprecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$TrimRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$TrimRecipe"
      description: "Replace Plexus `StringUtils.trim(String str)` with JDK provided\
        \ API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusdtrimrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
    org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$UppercaseRecipe:
      name: "org.openrewrite.codehaus.plexus.PlexusStringUtilsRecipes$UppercaseRecipe"
      description: "Replace Plexus `StringUtils.upperCase(String str)` with JDK provided\
        \ API."
      docLink: "https://docs.openrewrite.org/recipes/codehaus/plexus/plexusstringutilsrecipesusduppercaserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-apache"
rewrite-circleci:
  artifactId: "rewrite-circleci"
  version: "3.3.1"
  markdownRecipeDescriptors:
    org.openrewrite.circleci.InstallOrb:
      name: "org.openrewrite.circleci.InstallOrb"
      description: "Install a CircleCI [orb](https://circleci.com/docs/2.0/orb-intro/)\
        \ if it is not already installed."
      docLink: "https://docs.openrewrite.org/recipes/circleci/installorb"
      options:
      - name: "orbKey"
        type: "String"
        required: true
      - name: "slug"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-circleci"
    org.openrewrite.circleci.UpdateImage:
      name: "org.openrewrite.circleci.UpdateImage"
      description: "See the list of [pre-built CircleCI images](https://circleci.com/docs/2.0/circleci-images/)."
      docLink: "https://docs.openrewrite.org/recipes/circleci/updateimage"
      options:
      - name: "image"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-circleci"
rewrite-codemods:
  artifactId: "rewrite-codemods"
  version: "0.10.0"
  markdownRecipeDescriptors:
    org.openrewrite.codemods.ApplyCodemod:
      name: "org.openrewrite.codemods.ApplyCodemod"
      description: "Applies a codemod represented by an NPM package to all source\
        \ files."
      docLink: "https://docs.openrewrite.org/recipes/codemods/applycodemod"
      options:
      - name: "codemodArgs"
        type: "List"
        required: false
      - name: "executable"
        type: "String"
        required: false
      - name: "fileFilter"
        type: "String"
        required: true
      - name: "transform"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.Biome:
      name: "org.openrewrite.codemods.Biome"
      description: "Run [Biome](https://biomejs.dev/) recommended settings on your\
        \ projects."
      docLink: "https://docs.openrewrite.org/recipes/codemods/biome"
      options: []
      isImperative: true
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.ESLint:
      name: "org.openrewrite.codemods.ESLint"
      description: "Run [ESLint](https://eslint.org/) across the code to fix common\
        \ static analysis issues in the code.\n\nThis requires the code to have an\
        \ existing ESLint configuration."
      docLink: "https://docs.openrewrite.org/recipes/codemods/eslint"
      options:
      - name: "allowInlineConfig"
        type: "Boolean"
        required: false
      - name: "configFile"
        type: "String"
        required: false
      - name: "envs"
        type: "List"
        required: false
      - name: "extend"
        type: "List"
        required: false
      - name: "fix"
        type: "Boolean"
        required: false
      - name: "globals"
        type: "List"
        required: false
      - name: "parser"
        type: "String"
        required: false
      - name: "parserOptions"
        type: "List"
        required: false
      - name: "patterns"
        type: "List"
        required: false
      - name: "plugins"
        type: "List"
        required: false
      - name: "rules"
        type: "List"
        required: false
      isImperative: true
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.Putout:
      name: "org.openrewrite.codemods.Putout"
      description: "Run [Putout](https://github.com/coderaiser/putout) on your projects."
      docLink: "https://docs.openrewrite.org/recipes/codemods/putout"
      options:
      - name: "printer"
        type: "String"
        required: false
      - name: "rules"
        type: "Set"
        required: false
      isImperative: true
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.UI5:
      name: "org.openrewrite.codemods.UI5"
      description: "Runs the [UI5 Linter](https://github.com/SAP/ui5-linter), a static\
        \ code analysis tool for UI5 projects. It checks JavaScript, TypeScript, XML,\
        \ JSON, and other files in your project and reports findings."
      docLink: "https://docs.openrewrite.org/recipes/codemods/ui5"
      options: []
      isImperative: true
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.ArrowBodyStyle:
      name: "org.openrewrite.codemods.cleanup.javascript.ArrowBodyStyle"
      description: "Require braces around arrow function bodies\nSee [rule details](https://eslint.org/docs/latest/rules/arrow-body-style)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/arrowbodystyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.BetterRegex:
      name: "org.openrewrite.codemods.cleanup.javascript.BetterRegex"
      description: "Improve regexes by making them shorter, consistent, and safer.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/better-regex.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/betterregex"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.CapitalizedComments:
      name: "org.openrewrite.codemods.cleanup.javascript.CapitalizedComments"
      description: "Enforce or disallow capitalization of the first letter of a comment\
        \ \nSee [rule details](https://eslint.org/docs/latest/rules/capitalized-comments)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/capitalizedcomments"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.CatchErrorName:
      name: "org.openrewrite.codemods.cleanup.javascript.CatchErrorName"
      description: "Enforce a specific parameter name in catch clauses.\nSee [rule\
        \ details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/catch-error-name.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/catcherrorname"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.ConsistentDestructuring:
      name: "org.openrewrite.codemods.cleanup.javascript.ConsistentDestructuring"
      description: "Use destructured variables over properties.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/consistent-destructuring.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/consistentdestructuring"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.ConsistentTypeSpecifierStyle:
      name: "org.openrewrite.codemods.cleanup.javascript.ConsistentTypeSpecifierStyle"
      description: "Enforce or ban the use of inline type-only markers for named imports\n\
        See rule details for [import/consistent-type-specifier-style](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/consistent-type-specifier-style.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/consistenttypespecifierstyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.Curly:
      name: "org.openrewrite.codemods.cleanup.javascript.Curly"
      description: "Enforce consistent brace style for all control statements \nSee\
        \ [rule details](https://eslint.org/docs/latest/rules/curly)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/curly"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.CustomErrorDefinition:
      name: "org.openrewrite.codemods.cleanup.javascript.CustomErrorDefinition"
      description: "Enforce correct `Error` subclassing.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/custom-error-definition.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/customerrordefinition"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.DotNotation:
      name: "org.openrewrite.codemods.cleanup.javascript.DotNotation"
      description: "Enforce dot notation whenever possible \nSee [rule details](https://eslint.org/docs/latest/rules/dot-notation)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/dotnotation"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.EmptyBraceSpaces:
      name: "org.openrewrite.codemods.cleanup.javascript.EmptyBraceSpaces"
      description: "Enforce no spaces between braces.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/empty-brace-spaces.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/emptybracespaces"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.Eqeqeq:
      name: "org.openrewrite.codemods.cleanup.javascript.Eqeqeq"
      description: "Require the use of `===` and `!==` \nSee [rule details](https://eslint.org/docs/latest/rules/eqeqeq)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/eqeqeq"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.EscapeCase:
      name: "org.openrewrite.codemods.cleanup.javascript.EscapeCase"
      description: "Require escape sequences to use uppercase values.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/escape-case.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/escapecase"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.ExplicitLengthCheck:
      name: "org.openrewrite.codemods.cleanup.javascript.ExplicitLengthCheck"
      description: "Enforce explicitly comparing the length or size property of a\
        \ value.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/explicit-length-check.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/explicitlengthcheck"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.First:
      name: "org.openrewrite.codemods.cleanup.javascript.First"
      description: "Ensure all imports appear before other statements\nSee rule details\
        \ for [import/first](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/first.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/first"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.LogicalAssignmentOperators:
      name: "org.openrewrite.codemods.cleanup.javascript.LogicalAssignmentOperators"
      description: "Require or disallow logical assignment operator shorthand \nSee\
        \ [rule details](https://eslint.org/docs/latest/rules/logical-assignment-operators)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/logicalassignmentoperators"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.MultilineCommentStyle:
      name: "org.openrewrite.codemods.cleanup.javascript.MultilineCommentStyle"
      description: "Enforce a particular style for multiline comments \nSee [rule\
        \ details](https://eslint.org/docs/latest/rules/multiline-comment-style)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/multilinecommentstyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NewForBuiltins:
      name: "org.openrewrite.codemods.cleanup.javascript.NewForBuiltins"
      description: "Enforce the use of `new` for all builtins, except `String`, `Number`,\
        \ `Boolean`, `Symbol`, and `BigInt`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/new-for-builtins.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/newforbuiltins"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NewlineAfterImport:
      name: "org.openrewrite.codemods.cleanup.javascript.NewlineAfterImport"
      description: "Enforce a newline after import statements\nSee rule details for\
        \ [import/newline-after-import](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/newline-after-import.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/newlineafterimport"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoAbsolutePath:
      name: "org.openrewrite.codemods.cleanup.javascript.NoAbsolutePath"
      description: "Forbid import of modules using absolute paths\nSee rule details\
        \ for [import/no-absolute-path](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-absolute-path.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noabsolutepath"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoArrayForEach:
      name: "org.openrewrite.codemods.cleanup.javascript.NoArrayForEach"
      description: "Prefer `for…of` over the `forEach` method.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-for-each.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noarrayforeach"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoArrayMethodThisArgument:
      name: "org.openrewrite.codemods.cleanup.javascript.NoArrayMethodThisArgument"
      description: "Disallow using the `this` argument in array methods.\nSee [rule\
        \ details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-method-this-argument.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noarraymethodthisargument"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoArrayPushPush:
      name: "org.openrewrite.codemods.cleanup.javascript.NoArrayPushPush"
      description: "Enforce combining multiple `Array#push()` into one call.\nSee\
        \ [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-array-push-push.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noarraypushpush"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoAwaitExpressionMember:
      name: "org.openrewrite.codemods.cleanup.javascript.NoAwaitExpressionMember"
      description: "Disallow member access from `await` expression.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-await-expression-member.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noawaitexpressionmember"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoConsoleSpaces:
      name: "org.openrewrite.codemods.cleanup.javascript.NoConsoleSpaces"
      description: "Do not use leading/trailing space between `console.log` parameters.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-console-spaces.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noconsolespaces"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoDivRegex:
      name: "org.openrewrite.codemods.cleanup.javascript.NoDivRegex"
      description: "Disallow equal signs explicitly at the beginning of regular expressions\
        \ \nSee [rule details](https://eslint.org/docs/latest/rules/no-div-regex)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nodivregex"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoDuplicates:
      name: "org.openrewrite.codemods.cleanup.javascript.NoDuplicates"
      description: "Forbid repeated import of the same module in multiple places\n\
        See rule details for [import/no-duplicates](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-duplicates.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noduplicates"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoElseReturn:
      name: "org.openrewrite.codemods.cleanup.javascript.NoElseReturn"
      description: "Disallow else blocks after return statements in if statements\
        \ \nSee [rule details](https://eslint.org/docs/latest/rules/no-else-return)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noelsereturn"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoEmptyNamedBlocks:
      name: "org.openrewrite.codemods.cleanup.javascript.NoEmptyNamedBlocks"
      description: "Forbid empty named import\nSee rule details for [import/no-empty-named-blocks](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-empty-named-blocks.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noemptynamedblocks"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoExtraBind:
      name: "org.openrewrite.codemods.cleanup.javascript.NoExtraBind"
      description: "Disallow unnecessary calls to `.bind()` \nSee [rule details](https://eslint.org/docs/latest/rules/no-extra-bind)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noextrabind"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoExtraLabel:
      name: "org.openrewrite.codemods.cleanup.javascript.NoExtraLabel"
      description: "Disallow unnecessary labels \nSee [rule details](https://eslint.org/docs/latest/rules/no-extra-label)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noextralabel"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoForLoop:
      name: "org.openrewrite.codemods.cleanup.javascript.NoForLoop"
      description: "Do not use a `for` loop that can be replaced with a `for-of` loop.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-for-loop.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noforloop"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoHexEscape:
      name: "org.openrewrite.codemods.cleanup.javascript.NoHexEscape"
      description: "Enforce the use of Unicode escapes instead of hexadecimal escapes.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-hex-escape.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nohexescape"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoImplicitCoercion:
      name: "org.openrewrite.codemods.cleanup.javascript.NoImplicitCoercion"
      description: "Disallow shorthand type conversions \nSee [rule details](https://eslint.org/docs/latest/rules/no-implicit-coercion)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noimplicitcoercion"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoImportModuleExports:
      name: "org.openrewrite.codemods.cleanup.javascript.NoImportModuleExports"
      description: "Forbid import statements with CommonJS module.exports\nSee rule\
        \ details for [import/no-import-module-exports](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-import-module-exports.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noimportmoduleexports"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoInstanceofArray:
      name: "org.openrewrite.codemods.cleanup.javascript.NoInstanceofArray"
      description: "Require `Array.isArray()` instead of `instanceof Array`.\nSee\
        \ [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-instanceof-array.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noinstanceofarray"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoLonelyIf:
      name: "org.openrewrite.codemods.cleanup.javascript.NoLonelyIf"
      description: "Disallow if statements as the only statement in else blocks \n\
        See [rule details](https://eslint.org/docs/latest/rules/no-lonely-if)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nolonelyif"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoNamespace:
      name: "org.openrewrite.codemods.cleanup.javascript.NoNamespace"
      description: "Forbid namespace (a.k.a. \"wildcard\" `*`) imports.\nSee rule\
        \ details for [import/no-namespace](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-namespace.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nonamespace"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoNegatedCondition:
      name: "org.openrewrite.codemods.cleanup.javascript.NoNegatedCondition"
      description: "Disallow negated conditions.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-negated-condition.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nonegatedcondition"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoNestedTernary:
      name: "org.openrewrite.codemods.cleanup.javascript.NoNestedTernary"
      description: "Disallow nested ternary expressions.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-nested-ternary.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nonestedternary"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoNewArray:
      name: "org.openrewrite.codemods.cleanup.javascript.NoNewArray"
      description: "Disallow `new Array()`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-new-array.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nonewarray"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoNewBuffer:
      name: "org.openrewrite.codemods.cleanup.javascript.NoNewBuffer"
      description: "Enforce the use of `Buffer.from()` and `Buffer.alloc()` instead\
        \ of the deprecated `new Buffer()`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-new-buffer.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nonewbuffer"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoNull:
      name: "org.openrewrite.codemods.cleanup.javascript.NoNull"
      description: "Disallow the use of the `null` literal.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-null.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nonull"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoRelativePackages:
      name: "org.openrewrite.codemods.cleanup.javascript.NoRelativePackages"
      description: "Forbid importing packages through relative paths\nSee rule details\
        \ for [import/no-relative-packages](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-relative-packages.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/norelativepackages"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoStaticOnlyClass:
      name: "org.openrewrite.codemods.cleanup.javascript.NoStaticOnlyClass"
      description: "Disallow classes that only have static members.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-static-only-class.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nostaticonlyclass"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoTypeofUndefined:
      name: "org.openrewrite.codemods.cleanup.javascript.NoTypeofUndefined"
      description: "Disallow comparing `undefined` using `typeof`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-typeof-undefined.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/notypeofundefined"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUndefInit:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUndefInit"
      description: "Disallow initializing variables to undefined \nSee [rule details](https://eslint.org/docs/latest/rules/no-undef-init)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/noundefinit"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUnnecessaryAwait:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUnnecessaryAwait"
      description: "Disallow awaiting non-promise values.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unnecessary-await.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nounnecessaryawait"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUnneededTernary:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUnneededTernary"
      description: "Disallow ternary operators when simpler alternatives exist \n\
        See [rule details](https://eslint.org/docs/latest/rules/no-unneeded-ternary)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nounneededternary"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUnreadableArrayDestructuring:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUnreadableArrayDestructuring"
      description: "Disallow unreadable array destructuring.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-unreadable-array-destructuring.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nounreadablearraydestructuring"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUselessComputedKey:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUselessComputedKey"
      description: "Disallow unnecessary computed property keys in objects and classes\
        \ \nSee [rule details](https://eslint.org/docs/latest/rules/no-useless-computed-key)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nouselesscomputedkey"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUselessFallbackInSpread:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUselessFallbackInSpread"
      description: "Disallow useless fallback when spreading in object literals.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-fallback-in-spread.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nouselessfallbackinspread"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUselessLengthCheck:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUselessLengthCheck"
      description: "Disallow useless array `length` check.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-length-check.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nouselesslengthcheck"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUselessPathSegments:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUselessPathSegments"
      description: "Forbid unnecessary path segments in import and require statements\n\
        See rule details for [import/no-useless-path-segments](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/no-useless-path-segments.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nouselesspathsegments"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUselessPromiseResolveReject:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUselessPromiseResolveReject"
      description: "Disallow returning/yielding `Promise.resolve()`/`reject()` in\
        \ `async` functions or promise callbacks.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-promise-resolve-reject.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nouselesspromiseresolvereject"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUselessRename:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUselessRename"
      description: "Disallow renaming import, export, and destructured assignments\
        \ to the same name\nSee [rule details](https://eslint.org/docs/latest/rules/no-useless-rename)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nouselessrename"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUselessReturn:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUselessReturn"
      description: "Disallow redundant return statements \nSee [rule details](https://eslint.org/docs/latest/rules/no-useless-return)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nouselessreturn"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUselessSpread:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUselessSpread"
      description: "Disallow unnecessary spread.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-spread.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nouselessspread"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoUselessUndefined:
      name: "org.openrewrite.codemods.cleanup.javascript.NoUselessUndefined"
      description: "Disallow useless `undefined`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-useless-undefined.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nouselessundefined"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoVar:
      name: "org.openrewrite.codemods.cleanup.javascript.NoVar"
      description: "Require `let` or `const` instead of `var` \nSee [rule details](https://eslint.org/docs/latest/rules/no-var)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/novar"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NoZeroFractions:
      name: "org.openrewrite.codemods.cleanup.javascript.NoZeroFractions"
      description: "Disallow number literals with zero fractions or dangling dots.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/no-zero-fractions.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/nozerofractions"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NumberLiteralCase:
      name: "org.openrewrite.codemods.cleanup.javascript.NumberLiteralCase"
      description: "Enforce proper case for numeric literals.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/number-literal-case.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/numberliteralcase"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.NumericSeparatorsStyle:
      name: "org.openrewrite.codemods.cleanup.javascript.NumericSeparatorsStyle"
      description: "Enforce the style of numeric separators by correctly grouping\
        \ digits.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/numeric-separators-style.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/numericseparatorsstyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.ObjectShorthand:
      name: "org.openrewrite.codemods.cleanup.javascript.ObjectShorthand"
      description: "Require or disallow method and property shorthand syntax for object\
        \ literals \nSee [rule details](https://eslint.org/docs/latest/rules/object-shorthand)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/objectshorthand"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.OneVar:
      name: "org.openrewrite.codemods.cleanup.javascript.OneVar"
      description: "Enforce variables to be declared either together or separately\
        \ in functions \nSee [rule details](https://eslint.org/docs/latest/rules/one-var)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/onevar"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.OperatorAssignment:
      name: "org.openrewrite.codemods.cleanup.javascript.OperatorAssignment"
      description: "Require or disallow assignment operator shorthand where possible\
        \ \nSee [rule details](https://eslint.org/docs/latest/rules/operator-assignment)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/operatorassignment"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.Order:
      name: "org.openrewrite.codemods.cleanup.javascript.Order"
      description: "Enforce a convention in module import order\nSee rule details\
        \ for [import/order](https://github.com/import-js/eslint-plugin-import/blob/HEAD/docs/rules/order.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/order"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferAddEventListener:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferAddEventListener"
      description: "Prefer `.addEventListener()` and `.removeEventListener()` over\
        \ on-functions.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-add-event-listener.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferaddeventlistener"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferArrayFind:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferArrayFind"
      description: "Prefer `.find()` and `.findLast()` over the first or last element\
        \ from `.filter()`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-array-find.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferarrayfind"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferArrayFlat:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferArrayFlat"
      description: "Prefer `Array#flat()` over legacy techniques to flatten arrays.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-array-flat.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferarrayflat"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferArrayFlatMap:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferArrayFlatMap"
      description: "Prefer `.flatMap()` over `.map().flat()`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-array-flat-map.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferarrayflatmap"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferArrayIndexOf:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferArrayIndexOf"
      description: "Prefer `Array#{indexOf,lastIndexOf}()` over `Array#{findIndex,findLastIndex}()`\
        \ when looking for the index of an item.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-array-index-of.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferarrayindexof"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferArraySome:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferArraySome"
      description: "Prefer `.some()` over `.filter().length` check and `.{find,findLast}()`.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-array-some.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferarraysome"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferArrowCallback:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferArrowCallback"
      description: "Require using arrow functions for callbacks \nSee [rule details](https://eslint.org/docs/latest/rules/prefer-arrow-callback)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferarrowcallback"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferAt:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferAt"
      description: "Prefer `.at()` method for index access and `String#charAt()`.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-at.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferat"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferConst:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferConst"
      description: "Require const declarations for variables that are never reassigned\
        \ after declared \nSee [rule details](https://eslint.org/docs/latest/rules/prefer-const)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferconst"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferDateNow:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferDateNow"
      description: "Prefer `Date.now()` to get the number of milliseconds since the\
        \ Unix Epoch.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-date-now.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferdatenow"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferDefaultParameters:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferDefaultParameters"
      description: "Prefer default parameters over reassignment.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-default-parameters.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferdefaultparameters"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferDestructuring:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferDestructuring"
      description: "Require destructuring from arrays and/or objects \nSee [rule details](https://eslint.org/docs/latest/rules/prefer-destructuring)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferdestructuring"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferDomNodeAppend:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferDomNodeAppend"
      description: "Prefer `Node#append()` over `Node#appendChild()`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-dom-node-append.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferdomnodeappend"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferDomNodeDataset:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferDomNodeDataset"
      description: "Prefer using `.dataset` on DOM elements over calling attribute\
        \ methods.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-dom-node-dataset.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferdomnodedataset"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferDomNodeRemove:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferDomNodeRemove"
      description: "Prefer `childNode.remove()` over `parentNode.removeChild(childNode)`.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-dom-node-remove.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferdomnoderemove"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferExponentiationOperator:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferExponentiationOperator"
      description: "Disallow the use of `Math.pow` in favor of the ** operator \n\
        See [rule details](https://eslint.org/docs/latest/rules/prefer-exponentiation-operator)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferexponentiationoperator"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferExportFrom:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferExportFrom"
      description: "Prefer `export…from` when re-exporting.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-export-from.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferexportfrom"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferIncludes:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferIncludes"
      description: "Prefer `.includes()` over `.indexOf()` and `Array#some()` when\
        \ checking for existence or non-existence.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-includes.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferincludes"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferJsonParseBuffer:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferJsonParseBuffer"
      description: "Prefer reading a JSON file as a buffer.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-json-parse-buffer.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferjsonparsebuffer"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferKeyboardEventKey:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferKeyboardEventKey"
      description: "Prefer `KeyboardEvent#key` over `KeyboardEvent#keyCode`.\nSee\
        \ [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-keyboard-event-key.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferkeyboardeventkey"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferMathTrunc:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferMathTrunc"
      description: "Enforce the use of `Math.trunc()` instead of bitwise operators.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-math-trunc.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefermathtrunc"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferModernDomApis:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferModernDomApis"
      description: "Prefer `.before()` over `.insertBefore()`, `.replaceWith()` over\
        \ `.replaceChild()`, prefer one of `.before()`, `.after()`, `.append()` or\
        \ `.prepend()` over `insertAdjacentText()` and `insertAdjacentElement()`.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-modern-dom-apis.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefermoderndomapis"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferModernMathApis:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferModernMathApis"
      description: "Prefer modern Math APIs over legacy patterns.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-modern-math-apis.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefermodernmathapis"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferModule:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferModule"
      description: "Prefer JavaScript modules (ESM) over CommonJS.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-module.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefermodule"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferNativeCoercionFunctions:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferNativeCoercionFunctions"
      description: "Prefer using `String`, `Number`, `BigInt`, `Boolean`, and `Symbol`\
        \ directly.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-native-coercion-functions.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefernativecoercionfunctions"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferNegativeIndex:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferNegativeIndex"
      description: "Prefer negative index over `.length - index` when possible.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-negative-index.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefernegativeindex"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferNodeProtocol:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferNodeProtocol"
      description: "Prefer using the `node:` protocol when importing Node.js builtin\
        \ modules.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-node-protocol.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefernodeprotocol"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferNumberProperties:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferNumberProperties"
      description: "Prefer `Number` static properties over global ones.\nSee [rule\
        \ details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-number-properties.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefernumberproperties"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferNumericLiterals:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferNumericLiterals"
      description: "Disallow `parseInt()` and `Number.parseInt()` in favor of binary,\
        \ octal, and hexadecimal literals \nSee [rule details](https://eslint.org/docs/latest/rules/prefer-numeric-literals)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefernumericliterals"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferObjectFromEntries:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferObjectFromEntries"
      description: "Prefer using `Object.fromEntries()` to transform a list of key-value\
        \ pairs into an object.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-object-from-entries.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferobjectfromentries"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferObjectHasOwn:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferObjectHasOwn"
      description: "Disallow use of `Object.prototype.hasOwnProperty.call()` and prefer\
        \ use of `Object.hasOwn(`) \nSee [rule details](https://eslint.org/docs/latest/rules/prefer-object-has-own)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferobjecthasown"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferObjectSpread:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferObjectSpread"
      description: "Disallow using `Object.assign` with an object literal as the first\
        \ argument and prefer the use of object spread instead \nSee [rule details](https://eslint.org/docs/latest/rules/prefer-object-spread)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferobjectspread"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferOptionalCatchBinding:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferOptionalCatchBinding"
      description: "Prefer omitting the catch binding parameter.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-optional-catch-binding.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferoptionalcatchbinding"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferPrototypeMethods:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferPrototypeMethods"
      description: "Prefer borrowing methods from the prototype instead of the instance.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-prototype-methods.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferprototypemethods"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferQuerySelector:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferQuerySelector"
      description: "Prefer `.querySelector()` over `.getElementById()`, `.querySelectorAll()`\
        \ over `.getElementsByClassName()` and `.getElementsByTagName()`.\nSee [rule\
        \ details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-query-selector.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferqueryselector"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferReflectApply:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferReflectApply"
      description: "Prefer `Reflect.apply()` over `Function#apply()`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-reflect-apply.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferreflectapply"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferRegexpTest:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferRegexpTest"
      description: "Prefer `RegExp#test()` over `String#match()` and `RegExp#exec()`.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-regexp-test.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferregexptest"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferSetHas:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferSetHas"
      description: "Prefer `Set#has()` over `Array#includes()` when checking for existence\
        \ or non-existence.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-set-has.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefersethas"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferSetSize:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferSetSize"
      description: "Prefer using `Set#size` instead of `Array#length`.\nSee [rule\
        \ details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-set-size.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefersetsize"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferSpread:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferSpread"
      description: "Prefer the spread operator over `Array.from()`, `Array#concat()`,\
        \ `Array#{slice,toSpliced}()` and `String#split('')`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-spread.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferspread"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferStringReplaceAll:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferStringReplaceAll"
      description: "Prefer `String#replaceAll()` over regex searches with the global\
        \ flag.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-string-replace-all.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferstringreplaceall"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferStringSlice:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferStringSlice"
      description: "Prefer `String#slice()` over `String#substr()` and `String#substring()`.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-string-slice.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferstringslice"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferStringStartsEndsWith:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferStringStartsEndsWith"
      description: "Prefer `String#startsWith()` & `String#endsWith()` over `RegExp#test()`.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-string-starts-ends-with.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferstringstartsendswith"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferStringTrimStartEnd:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferStringTrimStartEnd"
      description: "Prefer `String#trimStart()` / `String#trimEnd()` over `String#trimLeft()`\
        \ / `String#trimRight()`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-string-trim-start-end.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferstringtrimstartend"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferSwitch:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferSwitch"
      description: "Prefer `switch` over multiple `else-if`.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-switch.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferswitch"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferTemplate:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferTemplate"
      description: "Require template literals instead of string concatenation \nSee\
        \ [rule details](https://eslint.org/docs/latest/rules/prefer-template)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefertemplate"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferTernary:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferTernary"
      description: "Prefer ternary expressions over simple `if-else` statements.\n\
        See [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-ternary.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preferternary"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreferTypeError:
      name: "org.openrewrite.codemods.cleanup.javascript.PreferTypeError"
      description: "Enforce throwing `TypeError` in type checking conditions.\nSee\
        \ [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prefer-type-error.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/prefertypeerror"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.PreventAbbreviations:
      name: "org.openrewrite.codemods.cleanup.javascript.PreventAbbreviations"
      description: "Prevent abbreviations.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/prevent-abbreviations.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/preventabbreviations"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.RelativeUrlStyle:
      name: "org.openrewrite.codemods.cleanup.javascript.RelativeUrlStyle"
      description: "Enforce consistent relative URL style.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/relative-url-style.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/relativeurlstyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.RequireArrayJoinSeparator:
      name: "org.openrewrite.codemods.cleanup.javascript.RequireArrayJoinSeparator"
      description: "Enforce using the separator argument with `Array#join()`.\nSee\
        \ [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/require-array-join-separator.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/requirearrayjoinseparator"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.RequireNumberToFixedDigitsArgument:
      name: "org.openrewrite.codemods.cleanup.javascript.RequireNumberToFixedDigitsArgument"
      description: "Enforce using the digits argument with `Number#toFixed()`.\nSee\
        \ [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/require-number-to-fixed-digits-argument.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/requirenumbertofixeddigitsargument"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.SortImports:
      name: "org.openrewrite.codemods.cleanup.javascript.SortImports"
      description: "Enforce sorted import declarations within modules \nSee [rule\
        \ details](https://eslint.org/docs/latest/rules/sort-imports)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/sortimports"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.SortVars:
      name: "org.openrewrite.codemods.cleanup.javascript.SortVars"
      description: "Require variables within the same declaration block to be sorted\
        \ \nSee [rule details](https://eslint.org/docs/latest/rules/sort-vars)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/sortvars"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.Strict:
      name: "org.openrewrite.codemods.cleanup.javascript.Strict"
      description: "Require or disallow strict mode directives \nSee [rule details](https://eslint.org/docs/latest/rules/strict)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/strict"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.StringContent:
      name: "org.openrewrite.codemods.cleanup.javascript.StringContent"
      description: "Enforce better string content.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/string-content.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/stringcontent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.SwitchCaseBraces:
      name: "org.openrewrite.codemods.cleanup.javascript.SwitchCaseBraces"
      description: "Enforce consistent brace style for case clauses.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/switch-case-braces.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/switchcasebraces"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.TemplateIndent:
      name: "org.openrewrite.codemods.cleanup.javascript.TemplateIndent"
      description: "Fix whitespace-insensitive template indentation.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/template-indent.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/templateindent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.TextEncodingIdentifierCase:
      name: "org.openrewrite.codemods.cleanup.javascript.TextEncodingIdentifierCase"
      description: "Enforce consistent case for text encoding identifiers.\nSee [rule\
        \ details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/text-encoding-identifier-case.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/textencodingidentifiercase"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.ThrowNewError:
      name: "org.openrewrite.codemods.cleanup.javascript.ThrowNewError"
      description: "Require `new` when throwing an error.\nSee [rule details](https://github.com/sindresorhus/eslint-plugin-unicorn/blob/main/docs/rules/throw-new-error.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/thrownewerror"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.UnicodeBom:
      name: "org.openrewrite.codemods.cleanup.javascript.UnicodeBom"
      description: "Require or disallow Unicode byte order mark (BOM) \nSee [rule\
        \ details](https://eslint.org/docs/latest/rules/unicode-bom)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/unicodebom"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.javascript.Yoda:
      name: "org.openrewrite.codemods.cleanup.javascript.Yoda"
      description: "Require or disallow \"Yoda\" conditions\nSee [rule details](https://eslint.org/docs/latest/rules/yoda)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/javascript/yoda"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.ConsistentTestIt:
      name: "org.openrewrite.codemods.cleanup.jest.ConsistentTestIt"
      description: "Enforce test and it usage conventions\nSee rule details for [jest/consistent-test-it](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/consistent-test-it.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/consistenttestit"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.NoAliasMethods:
      name: "org.openrewrite.codemods.cleanup.jest.NoAliasMethods"
      description: "Disallow alias methods\nSee rule details for [jest/no-alias-methods](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/no-alias-methods.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/noaliasmethods"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.NoDeprecatedFunctions27:
      name: "org.openrewrite.codemods.cleanup.jest.NoDeprecatedFunctions27"
      description: "Disallow use of deprecated functions from before version 27\n\
        See rule details for [jest/no-deprecated-functions](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/no-deprecated-functions.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/nodeprecatedfunctions27"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.NoJasmineGlobals:
      name: "org.openrewrite.codemods.cleanup.jest.NoJasmineGlobals"
      description: "Disallow Jasmine globals\nSee rule details for [jest/no-jasmine-globals](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/no-jasmine-globals.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/nojasmineglobals"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.NoTestPrefixes:
      name: "org.openrewrite.codemods.cleanup.jest.NoTestPrefixes"
      description: "Require using .only and .skip over f and x\nSee rule details for\
        \ [jest/no-test-prefixes](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/no-test-prefixes.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/notestprefixes"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.NoUntypedMockFactory:
      name: "org.openrewrite.codemods.cleanup.jest.NoUntypedMockFactory"
      description: "Disallow using jest.mock() factories without an explicit type\
        \ parameter\nSee rule details for [jest/no-untyped-mock-factory](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/no-untyped-mock-factory.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/nountypedmockfactory"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.PreferComparisonMatcher:
      name: "org.openrewrite.codemods.cleanup.jest.PreferComparisonMatcher"
      description: "Suggest using the built-in comparison matchers\nSee rule details\
        \ for [jest/prefer-comparison-matcher](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/prefer-comparison-matcher.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/prefercomparisonmatcher"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.PreferExpectResolves:
      name: "org.openrewrite.codemods.cleanup.jest.PreferExpectResolves"
      description: "Prefer await expect(...).resolves over expect(await ...) syntax\n\
        See rule details for [jest/prefer-expect-resolves](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/prefer-expect-resolves.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/preferexpectresolves"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.PreferLowercaseTitle:
      name: "org.openrewrite.codemods.cleanup.jest.PreferLowercaseTitle"
      description: "Enforce lowercase test names\nSee rule details for [jest/prefer-lowercase-title](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/prefer-lowercase-title.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/preferlowercasetitle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.PreferMockPromiseShorthand:
      name: "org.openrewrite.codemods.cleanup.jest.PreferMockPromiseShorthand"
      description: "Prefer mock resolved/rejected shorthands for promises\nSee rule\
        \ details for [jest/prefer-mock-promise-shorthand](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/prefer-mock-promise-shorthand.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/prefermockpromiseshorthand"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.PreferSpyOn:
      name: "org.openrewrite.codemods.cleanup.jest.PreferSpyOn"
      description: "Suggest using jest.spyOn()\nSee rule details for [jest/prefer-spy-on](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/prefer-spy-on.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/preferspyon"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.PreferToBe:
      name: "org.openrewrite.codemods.cleanup.jest.PreferToBe"
      description: "Suggest using toBe() for primitive literals\nSee rule details\
        \ for [jest/prefer-to-be](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/prefer-to-be.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/prefertobe"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.PreferToContain:
      name: "org.openrewrite.codemods.cleanup.jest.PreferToContain"
      description: "Suggest using toContain()\nSee rule details for [jest/prefer-to-contain](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/prefer-to-contain.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/prefertocontain"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.PreferToHaveLength:
      name: "org.openrewrite.codemods.cleanup.jest.PreferToHaveLength"
      description: "Suggest using toHaveLength()\nSee rule details for [jest/prefer-to-have-length](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/prefer-to-have-length.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/prefertohavelength"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.PreferTodo:
      name: "org.openrewrite.codemods.cleanup.jest.PreferTodo"
      description: "Suggest using test.todo\nSee rule details for [jest/prefer-todo](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/prefer-todo.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/prefertodo"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.RecommendedJestCodeCleanup:
      name: "org.openrewrite.codemods.cleanup.jest.RecommendedJestCodeCleanup"
      description: "Collection of cleanup ESLint rules that are recommended by [eslint-plugin-jest](https://github.com/jest-community/eslint-plugin-jest).\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/recommendedjestcodecleanup"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.jest.ValidTitle:
      name: "org.openrewrite.codemods.cleanup.jest.ValidTitle"
      description: "Enforce valid titles\nSee rule details for [jest/valid-title](https://github.com/jest-community/eslint-plugin-jest/blob/HEAD/docs/rules/valid-title.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/jest/validtitle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.DestructuringAssignment:
      name: "org.openrewrite.codemods.cleanup.react.DestructuringAssignment"
      description: "Enforce consistent usage of destructuring assignment of props,\
        \ state, and context\nSee rule details for [react/destructuring-assignment](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/destructuring-assignment.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/destructuringassignment"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.FunctionComponentDefinition:
      name: "org.openrewrite.codemods.cleanup.react.FunctionComponentDefinition"
      description: "Enforce a specific function type for function components\nSee\
        \ rule details for [react/function-component-definition](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/function-component-definition.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/functioncomponentdefinition"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxBooleanValue:
      name: "org.openrewrite.codemods.cleanup.react.JsxBooleanValue"
      description: "Enforce boolean attributes notation in JSX\nSee rule details for\
        \ [react/jsx-boolean-value](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-boolean-value.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxbooleanvalue"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxClosingBracketLocation:
      name: "org.openrewrite.codemods.cleanup.react.JsxClosingBracketLocation"
      description: "Enforce closing bracket location in JSX\nSee rule details for\
        \ [react/jsx-closing-bracket-location](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-closing-bracket-location.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxclosingbracketlocation"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxClosingTagLocation:
      name: "org.openrewrite.codemods.cleanup.react.JsxClosingTagLocation"
      description: "Enforce closing tag location for multiline JSX\nSee rule details\
        \ for [react/jsx-closing-tag-location](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-closing-tag-location.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxclosingtaglocation"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxCurlyBracePresence:
      name: "org.openrewrite.codemods.cleanup.react.JsxCurlyBracePresence"
      description: "Disallow unnecessary JSX expressions when literals alone are sufficient\
        \ or enforce JSX expressions on literals in JSX children or attributes\nSee\
        \ rule details for [react/jsx-curly-brace-presence](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-curly-brace-presence.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxcurlybracepresence"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxCurlyNewline:
      name: "org.openrewrite.codemods.cleanup.react.JsxCurlyNewline"
      description: "Enforce consistent linebreaks in curly braces in JSX attributes\
        \ and expressions\nSee rule details for [react/jsx-curly-newline](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-curly-newline.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxcurlynewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxCurlySpacing:
      name: "org.openrewrite.codemods.cleanup.react.JsxCurlySpacing"
      description: "Enforce or disallow spaces inside of curly braces in JSX attributes\
        \ and expressions\nSee rule details for [react/jsx-curly-spacing](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-curly-spacing.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxcurlyspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxEqualsSpacing:
      name: "org.openrewrite.codemods.cleanup.react.JsxEqualsSpacing"
      description: "Enforce or disallow spaces around equal signs in JSX attributes\n\
        See rule details for [react/jsx-equals-spacing](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-equals-spacing.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxequalsspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxFirstPropNewLine:
      name: "org.openrewrite.codemods.cleanup.react.JsxFirstPropNewLine"
      description: "Enforce proper position of the first property in JSX\nSee rule\
        \ details for [react/jsx-first-prop-new-line](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-first-prop-new-line.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxfirstpropnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxFragments:
      name: "org.openrewrite.codemods.cleanup.react.JsxFragments"
      description: "Enforce shorthand or standard form for React fragments\nSee rule\
        \ details for [react/jsx-fragments](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-fragments.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxfragments"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxIndent:
      name: "org.openrewrite.codemods.cleanup.react.JsxIndent"
      description: "Enforce JSX indentation\nSee rule details for [react/jsx-indent](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-indent.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxindent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxIndentProps:
      name: "org.openrewrite.codemods.cleanup.react.JsxIndentProps"
      description: "Enforce props indentation in JSX\nSee rule details for [react/jsx-indent-props](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-indent-props.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxindentprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxMaxPropsPerLine:
      name: "org.openrewrite.codemods.cleanup.react.JsxMaxPropsPerLine"
      description: "Enforce maximum of props on a single line in JSX\nSee rule details\
        \ for [react/jsx-max-props-per-line](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-max-props-per-line.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxmaxpropsperline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxNewline:
      name: "org.openrewrite.codemods.cleanup.react.JsxNewline"
      description: "Require or prevent a new line after jsx elements and expressions\n\
        See rule details for [react/jsx-newline](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-newline.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxNoLeakedRender:
      name: "org.openrewrite.codemods.cleanup.react.JsxNoLeakedRender"
      description: "Disallow problematic leaked values from being rendered\nSee rule\
        \ details for [react/jsx-no-leaked-render](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-no-leaked-render.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxnoleakedrender"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxNoTargetBlank:
      name: "org.openrewrite.codemods.cleanup.react.JsxNoTargetBlank"
      description: "Disallow target=\"_blank\" attribute without rel=\"noreferrer\"\
        \nSee rule details for [react/jsx-no-target-blank](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-no-target-blank.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxnotargetblank"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxNoUselessFragment:
      name: "org.openrewrite.codemods.cleanup.react.JsxNoUselessFragment"
      description: "Disallow unnecessary fragments\nSee rule details for [react/jsx-no-useless-fragment](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-no-useless-fragment.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxnouselessfragment"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxOneExpressionPerLine:
      name: "org.openrewrite.codemods.cleanup.react.JsxOneExpressionPerLine"
      description: "Require one JSX element per line\nSee rule details for [react/jsx-one-expression-per-line](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-one-expression-per-line.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxoneexpressionperline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxPropsNoMultiSpaces:
      name: "org.openrewrite.codemods.cleanup.react.JsxPropsNoMultiSpaces"
      description: "Disallow multiple spaces between inline JSX props\nSee rule details\
        \ for [react/jsx-props-no-multi-spaces](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-props-no-multi-spaces.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxpropsnomultispaces"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxSortProps:
      name: "org.openrewrite.codemods.cleanup.react.JsxSortProps"
      description: "Enforce props alphabetical sorting\nSee rule details for [react/jsx-sort-props](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-sort-props.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxsortprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxSpaceBeforeClosing:
      name: "org.openrewrite.codemods.cleanup.react.JsxSpaceBeforeClosing"
      description: "Enforce spacing before closing bracket in JSX\nSee rule details\
        \ for [react/jsx-space-before-closing](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-space-before-closing.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxspacebeforeclosing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxTagSpacing:
      name: "org.openrewrite.codemods.cleanup.react.JsxTagSpacing"
      description: "Enforce whitespace in and around the JSX opening and closing brackets\n\
        See rule details for [react/jsx-tag-spacing](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-tag-spacing.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxtagspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.JsxWrapMultilines:
      name: "org.openrewrite.codemods.cleanup.react.JsxWrapMultilines"
      description: "Disallow missing parentheses around multiline JSX\nSee rule details\
        \ for [react/jsx-wrap-multilines](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/jsx-wrap-multilines.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/jsxwrapmultilines"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.NoArrowFunctionLifecycle:
      name: "org.openrewrite.codemods.cleanup.react.NoArrowFunctionLifecycle"
      description: "Lifecycle methods should be methods on the prototype, not class\
        \ fields\nSee rule details for [react/no-arrow-function-lifecycle](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/no-arrow-function-lifecycle.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/noarrowfunctionlifecycle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.NoUnknownProperty:
      name: "org.openrewrite.codemods.cleanup.react.NoUnknownProperty"
      description: "Disallow usage of unknown DOM property\nSee rule details for [react/no-unknown-property](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/no-unknown-property.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/nounknownproperty"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.PreferReadOnlyProps:
      name: "org.openrewrite.codemods.cleanup.react.PreferReadOnlyProps"
      description: "Enforce that props are read-only\nSee rule details for [react/prefer-read-only-props](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/prefer-read-only-props.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/preferreadonlyprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.SelfClosingComp:
      name: "org.openrewrite.codemods.cleanup.react.SelfClosingComp"
      description: "Disallow extra closing tags for components without children\n\
        See rule details for [react/self-closing-comp](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/self-closing-comp.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/selfclosingcomp"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.react.SortPropTypes:
      name: "org.openrewrite.codemods.cleanup.react.SortPropTypes"
      description: "Enforce propTypes declarations alphabetical sorting\nSee rule\
        \ details for [react/sort-prop-types](https://github.com/jsx-eslint/eslint-plugin-react/blob/HEAD/docs/rules/sort-prop-types.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/react/sortproptypes"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.storybook.AwaitInteractions:
      name: "org.openrewrite.codemods.cleanup.storybook.AwaitInteractions"
      description: "Interactions should be awaited\nSee rule details for [storybook/await-interactions](https://github.com/storybookjs/eslint-plugin-storybook/blob/main/docs/rules/await-interactions.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/storybook/awaitinteractions"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.storybook.DefaultExports:
      name: "org.openrewrite.codemods.cleanup.storybook.DefaultExports"
      description: "Story files should have a default export\nSee rule details for\
        \ [storybook/default-exports](https://github.com/storybookjs/eslint-plugin-storybook/blob/main/docs/rules/default-exports.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/storybook/defaultexports"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.storybook.HierarchySeparator:
      name: "org.openrewrite.codemods.cleanup.storybook.HierarchySeparator"
      description: "Deprecated hierarchy separator in title property\nSee rule details\
        \ for [storybook/hierarchy-separator](https://github.com/storybookjs/eslint-plugin-storybook/blob/main/docs/rules/hierarchy-separator.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/storybook/hierarchyseparator"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.storybook.NoRedundantStoryName:
      name: "org.openrewrite.codemods.cleanup.storybook.NoRedundantStoryName"
      description: "A story should not have a redundant name property\nSee rule details\
        \ for [storybook/no-redundant-story-name](https://github.com/storybookjs/eslint-plugin-storybook/blob/main/docs/rules/no-redundant-story-name.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/storybook/noredundantstoryname"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.storybook.NoTitlePropertyInMeta:
      name: "org.openrewrite.codemods.cleanup.storybook.NoTitlePropertyInMeta"
      description: "Do not define a title in meta\nSee rule details for [storybook/no-title-property-in-meta](https://github.com/storybookjs/eslint-plugin-storybook/blob/main/docs/rules/no-title-property-in-meta.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/storybook/notitlepropertyinmeta"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.storybook.PreferPascalCase:
      name: "org.openrewrite.codemods.cleanup.storybook.PreferPascalCase"
      description: "Stories should use PascalCase\nSee rule details for [storybook/prefer-pascal-case](https://github.com/storybookjs/eslint-plugin-storybook/blob/main/docs/rules/prefer-pascal-case.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/storybook/preferpascalcase"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.storybook.RecommendedStorybookCodeCleanup:
      name: "org.openrewrite.codemods.cleanup.storybook.RecommendedStorybookCodeCleanup"
      description: "Collection of cleanup ESLint rules from [eslint-plugin-storybook](https://github.com/storybookjs/eslint-plugin-storybook#readme).\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/storybook/recommendedstorybookcodecleanup"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.storybook.UseStorybookExpect:
      name: "org.openrewrite.codemods.cleanup.storybook.UseStorybookExpect"
      description: "Use expect from @storybook/jest\nSee rule details for [storybook/use-storybook-expect](https://github.com/storybookjs/eslint-plugin-storybook/blob/main/docs/rules/use-storybook-expect.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/storybook/usestorybookexpect"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.storybook.UseStorybookTestingLibrary:
      name: "org.openrewrite.codemods.cleanup.storybook.UseStorybookTestingLibrary"
      description: "Do not use testing-library directly on stories\nSee rule details\
        \ for [storybook/use-storybook-testing-library](https://github.com/storybookjs/eslint-plugin-storybook/blob/main/docs/rules/use-storybook-testing-library.md)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/storybook/usestorybooktestinglibrary"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.FirstAttributeLinebreak:
      name: "org.openrewrite.codemods.cleanup.svelte.FirstAttributeLinebreak"
      description: "enforce the location of first attribute\nSee rule details for\
        \ [svelte/first-attribute-linebreak](https://sveltejs.github.io/eslint-plugin-svelte/rules/first-attribute-linebreak/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/firstattributelinebreak"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.HtmlClosingBracketSpacing:
      name: "org.openrewrite.codemods.cleanup.svelte.HtmlClosingBracketSpacing"
      description: "require or disallow a space before tag's closing brackets\nSee\
        \ rule details for [svelte/html-closing-bracket-spacing](https://sveltejs.github.io/eslint-plugin-svelte/rules/html-closing-bracket-spacing/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/htmlclosingbracketspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.HtmlQuotes:
      name: "org.openrewrite.codemods.cleanup.svelte.HtmlQuotes"
      description: "enforce quotes style of HTML attributes\nSee rule details for\
        \ [svelte/html-quotes](https://sveltejs.github.io/eslint-plugin-svelte/rules/html-quotes/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/htmlquotes"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.HtmlSelfClosing:
      name: "org.openrewrite.codemods.cleanup.svelte.HtmlSelfClosing"
      description: "enforce self-closing style\nSee rule details for [svelte/html-self-closing](https://sveltejs.github.io/eslint-plugin-svelte/rules/html-self-closing/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/htmlselfclosing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.Indent:
      name: "org.openrewrite.codemods.cleanup.svelte.Indent"
      description: "enforce consistent indentation\nSee rule details for [svelte/indent](https://sveltejs.github.io/eslint-plugin-svelte/rules/indent/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/indent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.MaxAttributesPerLine:
      name: "org.openrewrite.codemods.cleanup.svelte.MaxAttributesPerLine"
      description: "enforce the maximum number of attributes per line\nSee rule details\
        \ for [svelte/max-attributes-per-line](https://sveltejs.github.io/eslint-plugin-svelte/rules/max-attributes-per-line/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/maxattributesperline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.MustacheSpacing:
      name: "org.openrewrite.codemods.cleanup.svelte.MustacheSpacing"
      description: "enforce unified spacing in mustache\nSee rule details for [svelte/mustache-spacing](https://sveltejs.github.io/eslint-plugin-svelte/rules/mustache-spacing/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/mustachespacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.NoDynamicSlotName:
      name: "org.openrewrite.codemods.cleanup.svelte.NoDynamicSlotName"
      description: "disallow dynamic slot name\nSee rule details for [svelte/no-dynamic-slot-name](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-dynamic-slot-name/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/nodynamicslotname"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.NoSpacesAroundEqualSignsInAttribute:
      name: "org.openrewrite.codemods.cleanup.svelte.NoSpacesAroundEqualSignsInAttribute"
      description: "disallow spaces around equal signs in attribute\nSee rule details\
        \ for [svelte/no-spaces-around-equal-signs-in-attribute](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-spaces-around-equal-signs-in-attribute/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/nospacesaroundequalsignsinattribute"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.NoUselessMustaches:
      name: "org.openrewrite.codemods.cleanup.svelte.NoUselessMustaches"
      description: "disallow unnecessary mustache interpolations\nSee rule details\
        \ for [svelte/no-useless-mustaches](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-useless-mustaches/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/nouselessmustaches"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.PreferClassDirective:
      name: "org.openrewrite.codemods.cleanup.svelte.PreferClassDirective"
      description: "require class directives instead of ternary expressions\nSee rule\
        \ details for [svelte/prefer-class-directive](https://sveltejs.github.io/eslint-plugin-svelte/rules/prefer-class-directive/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/preferclassdirective"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.PreferStyleDirective:
      name: "org.openrewrite.codemods.cleanup.svelte.PreferStyleDirective"
      description: "require style directives instead of style attribute\nSee rule\
        \ details for [svelte/prefer-style-directive](https://sveltejs.github.io/eslint-plugin-svelte/rules/prefer-style-directive/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/preferstyledirective"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.RecommendedsvelteCodeCleanup:
      name: "org.openrewrite.codemods.cleanup.svelte.RecommendedsvelteCodeCleanup"
      description: "Collection of cleanup ESLint rules from [eslint-plugin-svelte](https://github.com/sveltejs/eslint-plugin-svelte).\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/recommendedsveltecodecleanup"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.RequireStoreReactiveAccess:
      name: "org.openrewrite.codemods.cleanup.svelte.RequireStoreReactiveAccess"
      description: "disallow to use of the store itself as an operand. Need to use\
        \ $ prefix or get function.\nSee rule details for [svelte/require-store-reactive-access](https://sveltejs.github.io/eslint-plugin-svelte/rules/require-store-reactive-access/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/requirestorereactiveaccess"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.ShorthandAttribute:
      name: "org.openrewrite.codemods.cleanup.svelte.ShorthandAttribute"
      description: "enforce use of shorthand syntax in attribute\nSee rule details\
        \ for [svelte/shorthand-attribute](https://sveltejs.github.io/eslint-plugin-svelte/rules/shorthand-attribute/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/shorthandattribute"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.ShorthandDirective:
      name: "org.openrewrite.codemods.cleanup.svelte.ShorthandDirective"
      description: "enforce use of shorthand syntax in directives\nSee rule details\
        \ for [svelte/shorthand-directive](https://sveltejs.github.io/eslint-plugin-svelte/rules/shorthand-directive/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/shorthanddirective"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.SortAttributes:
      name: "org.openrewrite.codemods.cleanup.svelte.SortAttributes"
      description: "enforce order of attributes\nSee rule details for [svelte/sort-attributes](https://sveltejs.github.io/eslint-plugin-svelte/rules/sort-attributes/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/sortattributes"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.svelte.SpacedHtmlComment:
      name: "org.openrewrite.codemods.cleanup.svelte.SpacedHtmlComment"
      description: "enforce consistent spacing after the <!-- and before the --> in\
        \ a HTML comment\nSee rule details for [svelte/spaced-html-comment](https://sveltejs.github.io/eslint-plugin-svelte/rules/spaced-html-comment/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/svelte/spacedhtmlcomment"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ArrayBracketNewline:
      name: "org.openrewrite.codemods.cleanup.vue.ArrayBracketNewline"
      description: "Enforce linebreaks after opening and before closing array brackets\
        \ in `<template>`\nSee rule details for [vue/array-bracket-newline](https://eslint.vuejs.org/rules/array-bracket-newline.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/arraybracketnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ArrayBracketSpacing:
      name: "org.openrewrite.codemods.cleanup.vue.ArrayBracketSpacing"
      description: "Enforce consistent spacing inside array brackets in `<template>`\n\
        See rule details for [vue/array-bracket-spacing](https://eslint.vuejs.org/rules/array-bracket-spacing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/arraybracketspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ArrayElementNewline:
      name: "org.openrewrite.codemods.cleanup.vue.ArrayElementNewline"
      description: "Enforce line breaks after each array element in `<template>`\n\
        See rule details for [vue/array-element-newline](https://eslint.vuejs.org/rules/array-element-newline.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/arrayelementnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ArrowSpacing:
      name: "org.openrewrite.codemods.cleanup.vue.ArrowSpacing"
      description: "Enforce consistent spacing before and after the arrow in arrow\
        \ functions in `<template>`\nSee rule details for [vue/arrow-spacing](https://eslint.vuejs.org/rules/arrow-spacing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/arrowspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.AttributesOrder:
      name: "org.openrewrite.codemods.cleanup.vue.AttributesOrder"
      description: "Enforce order of attributes\nSee rule details for [vue/attributes-order](https://eslint.vuejs.org/rules/attributes-order.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/attributesorder"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.BlockOrder:
      name: "org.openrewrite.codemods.cleanup.vue.BlockOrder"
      description: "Enforce order of component top-level elements\nSee rule details\
        \ for [vue/block-order](https://eslint.vuejs.org/rules/block-order.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/blockorder"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.BlockSpacing:
      name: "org.openrewrite.codemods.cleanup.vue.BlockSpacing"
      description: "Disallow or enforce spaces inside of blocks after opening block\
        \ and before closing block in `<template>`\nSee rule details for [vue/block-spacing](https://eslint.vuejs.org/rules/block-spacing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/blockspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.BlockTagNewline:
      name: "org.openrewrite.codemods.cleanup.vue.BlockTagNewline"
      description: "Enforce line breaks after opening and before closing block-level\
        \ tags\nSee rule details for [vue/block-tag-newline](https://eslint.vuejs.org/rules/block-tag-newline.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/blocktagnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.BraceStyle:
      name: "org.openrewrite.codemods.cleanup.vue.BraceStyle"
      description: "Enforce consistent brace style for blocks in `<template>`\nSee\
        \ rule details for [vue/brace-style](https://eslint.vuejs.org/rules/brace-style.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/bracestyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.CommaDangle:
      name: "org.openrewrite.codemods.cleanup.vue.CommaDangle"
      description: "Require or disallow trailing commas in `<template>`\nSee rule\
        \ details for [vue/comma-dangle](https://eslint.vuejs.org/rules/comma-dangle.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/commadangle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.CommaSpacing:
      name: "org.openrewrite.codemods.cleanup.vue.CommaSpacing"
      description: "Enforce consistent spacing before and after commas in `<template>`\n\
        See rule details for [vue/comma-spacing](https://eslint.vuejs.org/rules/comma-spacing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/commaspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.CommaStyle:
      name: "org.openrewrite.codemods.cleanup.vue.CommaStyle"
      description: "Enforce consistent comma style in `<template>`\nSee rule details\
        \ for [vue/comma-style](https://eslint.vuejs.org/rules/comma-style.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/commastyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ComponentNameInTemplateCasing:
      name: "org.openrewrite.codemods.cleanup.vue.ComponentNameInTemplateCasing"
      description: "Enforce specific casing for the component naming style in template\n\
        See rule details for [vue/component-name-in-template-casing](https://eslint.vuejs.org/rules/component-name-in-template-casing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/componentnameintemplatecasing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ComponentOptionsNameCasing:
      name: "org.openrewrite.codemods.cleanup.vue.ComponentOptionsNameCasing"
      description: "Enforce the casing of component name in components options\nSee\
        \ rule details for [vue/component-options-name-casing](https://eslint.vuejs.org/rules/component-options-name-casing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/componentoptionsnamecasing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ComponentTagsOrder:
      name: "org.openrewrite.codemods.cleanup.vue.ComponentTagsOrder"
      description: "Enforce order of component top-level elements\nSee rule details\
        \ for [vue/component-tags-order](https://eslint.vuejs.org/rules/component-tags-order.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/componenttagsorder"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.DefineMacrosOrder:
      name: "org.openrewrite.codemods.cleanup.vue.DefineMacrosOrder"
      description: "Enforce order of defineEmits and defineProps compiler macros\n\
        See rule details for [vue/define-macros-order](https://eslint.vuejs.org/rules/define-macros-order.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/definemacrosorder"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.DotLocation:
      name: "org.openrewrite.codemods.cleanup.vue.DotLocation"
      description: "Enforce consistent newlines before and after dots in `<template>`\n\
        See rule details for [vue/dot-location](https://eslint.vuejs.org/rules/dot-location.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/dotlocation"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.DotNotation:
      name: "org.openrewrite.codemods.cleanup.vue.DotNotation"
      description: "Enforce dot notation whenever possible in `<template>`\nSee rule\
        \ details for [vue/dot-notation](https://eslint.vuejs.org/rules/dot-notation.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/dotnotation"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.Eqeqeq:
      name: "org.openrewrite.codemods.cleanup.vue.Eqeqeq"
      description: "Require the use of === and !== in `<template>`\nSee rule details\
        \ for [vue/eqeqeq](https://eslint.vuejs.org/rules/eqeqeq.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/eqeqeq"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.FuncCallSpacing:
      name: "org.openrewrite.codemods.cleanup.vue.FuncCallSpacing"
      description: "Require or disallow spacing between function identifiers and their\
        \ invocations in `<template>`\nSee rule details for [vue/func-call-spacing](https://eslint.vuejs.org/rules/func-call-spacing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/funccallspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.HtmlCommentContentNewline:
      name: "org.openrewrite.codemods.cleanup.vue.HtmlCommentContentNewline"
      description: "Enforce unified line brake in HTML comments\nSee rule details\
        \ for [vue/html-comment-content-newline](https://eslint.vuejs.org/rules/html-comment-content-newline.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/htmlcommentcontentnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.HtmlCommentContentSpacing:
      name: "org.openrewrite.codemods.cleanup.vue.HtmlCommentContentSpacing"
      description: "Enforce unified spacing in HTML comments\nSee rule details for\
        \ [vue/html-comment-content-spacing](https://eslint.vuejs.org/rules/html-comment-content-spacing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/htmlcommentcontentspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.HtmlCommentIndent:
      name: "org.openrewrite.codemods.cleanup.vue.HtmlCommentIndent"
      description: "Enforce consistent indentation in HTML comments\nSee rule details\
        \ for [vue/html-comment-indent](https://eslint.vuejs.org/rules/html-comment-indent.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/htmlcommentindent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.KeySpacing:
      name: "org.openrewrite.codemods.cleanup.vue.KeySpacing"
      description: "Enforce consistent spacing between keys and values in object literal\
        \ properties in `<template>`\nSee rule details for [vue/key-spacing](https://eslint.vuejs.org/rules/key-spacing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/keyspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.KeywordSpacing:
      name: "org.openrewrite.codemods.cleanup.vue.KeywordSpacing"
      description: "Enforce consistent spacing before and after keywords in `<template>`\n\
        See rule details for [vue/keyword-spacing](https://eslint.vuejs.org/rules/keyword-spacing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/keywordspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.MultilineTernary:
      name: "org.openrewrite.codemods.cleanup.vue.MultilineTernary"
      description: "Enforce newlines between operands of ternary expressions in `<template>`\n\
        See rule details for [vue/multiline-ternary](https://eslint.vuejs.org/rules/multiline-ternary.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/multilineternary"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.NewLineBetweenMultiLineProperty:
      name: "org.openrewrite.codemods.cleanup.vue.NewLineBetweenMultiLineProperty"
      description: "Enforce new lines between multi-line properties in Vue components\n\
        See rule details for [vue/new-line-between-multi-line-property](https://eslint.vuejs.org/rules/new-line-between-multi-line-property.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/newlinebetweenmultilineproperty"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.NextTickStyle:
      name: "org.openrewrite.codemods.cleanup.vue.NextTickStyle"
      description: "Enforce Promise or callback style in nextTick\nSee rule details\
        \ for [vue/next-tick-style](https://eslint.vuejs.org/rules/next-tick-style.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/nexttickstyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.NoExtraParens:
      name: "org.openrewrite.codemods.cleanup.vue.NoExtraParens"
      description: "Disallow unnecessary parentheses in `<template>`\nSee rule details\
        \ for [vue/no-extra-parens](https://eslint.vuejs.org/rules/no-extra-parens.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/noextraparens"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.NoRequiredPropWithDefault:
      name: "org.openrewrite.codemods.cleanup.vue.NoRequiredPropWithDefault"
      description: "Enforce props with default values to be optional\nSee rule details\
        \ for [vue/no-required-prop-with-default](https://eslint.vuejs.org/rules/no-required-prop-with-default.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/norequiredpropwithdefault"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.NoUnsupportedFeatures:
      name: "org.openrewrite.codemods.cleanup.vue.NoUnsupportedFeatures"
      description: "Disallow unsupported Vue.js syntax on the specified version\n\
        See rule details for [vue/no-unsupported-features](https://eslint.vuejs.org/rules/no-unsupported-features.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/nounsupportedfeatures"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.NoUselessMustaches:
      name: "org.openrewrite.codemods.cleanup.vue.NoUselessMustaches"
      description: "Disallow unnecessary mustache interpolations\nSee rule details\
        \ for [vue/no-useless-mustaches](https://eslint.vuejs.org/rules/no-useless-mustaches.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/nouselessmustaches"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.NoUselessVBind:
      name: "org.openrewrite.codemods.cleanup.vue.NoUselessVBind"
      description: "Disallow unnecessary v-bind directives\nSee rule details for [vue/no-useless-v-bind](https://eslint.vuejs.org/rules/no-useless-v-bind.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/nouselessvbind"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ObjectCurlyNewline:
      name: "org.openrewrite.codemods.cleanup.vue.ObjectCurlyNewline"
      description: "Enforce consistent line breaks after opening and before closing\
        \ braces in `<template>`\nSee rule details for [vue/object-curly-newline](https://eslint.vuejs.org/rules/object-curly-newline.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/objectcurlynewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ObjectCurlySpacing:
      name: "org.openrewrite.codemods.cleanup.vue.ObjectCurlySpacing"
      description: "Enforce consistent spacing inside braces in `<template>`\nSee\
        \ rule details for [vue/object-curly-spacing](https://eslint.vuejs.org/rules/object-curly-spacing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/objectcurlyspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ObjectPropertyNewline:
      name: "org.openrewrite.codemods.cleanup.vue.ObjectPropertyNewline"
      description: "Enforce placing object properties on separate lines in `<template>`\n\
        See rule details for [vue/object-property-newline](https://eslint.vuejs.org/rules/object-property-newline.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/objectpropertynewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ObjectShorthand:
      name: "org.openrewrite.codemods.cleanup.vue.ObjectShorthand"
      description: "Require or disallow method and property shorthand syntax for object\
        \ literals in `<template>`\nSee rule details for [vue/object-shorthand](https://eslint.vuejs.org/rules/object-shorthand.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/objectshorthand"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.OperatorLinebreak:
      name: "org.openrewrite.codemods.cleanup.vue.OperatorLinebreak"
      description: "Enforce consistent linebreak style for operators in `<template>`\n\
        See rule details for [vue/operator-linebreak](https://eslint.vuejs.org/rules/operator-linebreak.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/operatorlinebreak"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.OrderInComponents:
      name: "org.openrewrite.codemods.cleanup.vue.OrderInComponents"
      description: "Enforce order of properties in components\nSee rule details for\
        \ [vue/order-in-components](https://eslint.vuejs.org/rules/order-in-components.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/orderincomponents"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.PaddingLineBetweenBlocks:
      name: "org.openrewrite.codemods.cleanup.vue.PaddingLineBetweenBlocks"
      description: "Require or disallow padding lines between blocks\nSee rule details\
        \ for [vue/padding-line-between-blocks](https://eslint.vuejs.org/rules/padding-line-between-blocks.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/paddinglinebetweenblocks"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.PaddingLineBetweenTags:
      name: "org.openrewrite.codemods.cleanup.vue.PaddingLineBetweenTags"
      description: "Require or disallow newlines between sibling tags in template\n\
        See rule details for [vue/padding-line-between-tags](https://eslint.vuejs.org/rules/padding-line-between-tags.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/paddinglinebetweentags"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.PaddingLinesInComponentDefinition:
      name: "org.openrewrite.codemods.cleanup.vue.PaddingLinesInComponentDefinition"
      description: "Require or disallow padding lines in component definition\nSee\
        \ rule details for [vue/padding-lines-in-component-definition](https://eslint.vuejs.org/rules/padding-lines-in-component-definition.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/paddinglinesincomponentdefinition"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.PreferDefineOptions:
      name: "org.openrewrite.codemods.cleanup.vue.PreferDefineOptions"
      description: "Enforce use of defineOptions instead of default export.\nSee rule\
        \ details for [vue/prefer-define-options](https://eslint.vuejs.org/rules/prefer-define-options.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/preferdefineoptions"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.PreferSeparateStaticClass:
      name: "org.openrewrite.codemods.cleanup.vue.PreferSeparateStaticClass"
      description: "Require static class names in template to be in a separate class\
        \ attribute\nSee rule details for [vue/prefer-separate-static-class](https://eslint.vuejs.org/rules/prefer-separate-static-class.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/preferseparatestaticclass"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.PreferTemplate:
      name: "org.openrewrite.codemods.cleanup.vue.PreferTemplate"
      description: "Require template literals instead of string concatenation in `<template>`\n\
        See rule details for [vue/prefer-template](https://eslint.vuejs.org/rules/prefer-template.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/prefertemplate"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.QuoteProps:
      name: "org.openrewrite.codemods.cleanup.vue.QuoteProps"
      description: "Require quotes around object literal property names in `<template>`\n\
        See rule details for [vue/quote-props](https://eslint.vuejs.org/rules/quote-props.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/quoteprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.RecommendedVueCodeCleanup:
      name: "org.openrewrite.codemods.cleanup.vue.RecommendedVueCodeCleanup"
      description: "Collection of cleanup ESLint rules from [eslint-plugin-vue](https://eslint.vuejs.org/).\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/recommendedvuecodecleanup"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ScriptIndent:
      name: "org.openrewrite.codemods.cleanup.vue.ScriptIndent"
      description: "Enforce consistent indentation in <script>\nSee rule details for\
        \ [vue/script-indent](https://eslint.vuejs.org/rules/script-indent.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/scriptindent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.SpaceInParens:
      name: "org.openrewrite.codemods.cleanup.vue.SpaceInParens"
      description: "Enforce consistent spacing inside parentheses in `<template>`\n\
        See rule details for [vue/space-in-parens](https://eslint.vuejs.org/rules/space-in-parens.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/spaceinparens"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.SpaceInfixOps:
      name: "org.openrewrite.codemods.cleanup.vue.SpaceInfixOps"
      description: "Require spacing around infix operators in `<template>`\nSee rule\
        \ details for [vue/space-infix-ops](https://eslint.vuejs.org/rules/space-infix-ops.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/spaceinfixops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.SpaceUnaryOps:
      name: "org.openrewrite.codemods.cleanup.vue.SpaceUnaryOps"
      description: "Enforce consistent spacing before or after unary operators in\
        \ `<template>`\nSee rule details for [vue/space-unary-ops](https://eslint.vuejs.org/rules/space-unary-ops.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/spaceunaryops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.StaticClassNamesOrder:
      name: "org.openrewrite.codemods.cleanup.vue.StaticClassNamesOrder"
      description: "Enforce static class names order\nSee rule details for [vue/static-class-names-order](https://eslint.vuejs.org/rules/static-class-names-order.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/staticclassnamesorder"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.TemplateCurlySpacing:
      name: "org.openrewrite.codemods.cleanup.vue.TemplateCurlySpacing"
      description: "Require or disallow spacing around embedded expressions of template\
        \ strings in `<template>`\nSee rule details for [vue/template-curly-spacing](https://eslint.vuejs.org/rules/template-curly-spacing.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/templatecurlyspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.ThisInTemplate:
      name: "org.openrewrite.codemods.cleanup.vue.ThisInTemplate"
      description: "Disallow usage of this in template\nSee rule details for [vue/this-in-template](https://eslint.vuejs.org/rules/this-in-template.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/thisintemplate"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.VForDelimiterStyle:
      name: "org.openrewrite.codemods.cleanup.vue.VForDelimiterStyle"
      description: "Enforce v-for directive's delimiter style\nSee rule details for\
        \ [vue/v-for-delimiter-style](https://eslint.vuejs.org/rules/v-for-delimiter-style.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/vfordelimiterstyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.VIfElseKey:
      name: "org.openrewrite.codemods.cleanup.vue.VIfElseKey"
      description: "Require key attribute for conditionally rendered repeated components\n\
        See rule details for [vue/v-if-else-key](https://eslint.vuejs.org/rules/v-if-else-key.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/vifelsekey"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.cleanup.vue.VOnHandlerStyle:
      name: "org.openrewrite.codemods.cleanup.vue.VOnHandlerStyle"
      description: "Enforce writing style for handlers in v-on directives\nSee rule\
        \ details for [vue/v-on-handler-style](https://eslint.vuejs.org/rules/v-on-handler-style.html)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/cleanup/vue/vonhandlerstyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.ecmascript.5to6.ECMAScript6BestPractices:
      name: "org.openrewrite.codemods.ecmascript.5to6.ECMAScript6BestPractices"
      description: "A collection of common ECMAScript 5 to ECMAScript 6 updates.\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/ecmascript/5to6/ecmascript6bestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.ecmascript.5to6.amdToEsm:
      name: "org.openrewrite.codemods.ecmascript.5to6.amdToEsm"
      description: "Transform AMD style `define()` calls to ES6 `import` statements\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/ecmascript/5to6/amdtoesm"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.ecmascript.5to6.cjsToEsm:
      name: "org.openrewrite.codemods.ecmascript.5to6.cjsToEsm"
      description: "Transform CommonJS style `require()` calls to ES6 `import` statements\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/ecmascript/5to6/cjstoesm"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.ecmascript.5to6.namedExportGeneration:
      name: "org.openrewrite.codemods.ecmascript.5to6.namedExportGeneration"
      description: "Generate named exports from CommonJS modules\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/ecmascript/5to6/namedexportgeneration"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.ecmascript.5to6.noStrict:
      name: "org.openrewrite.codemods.ecmascript.5to6.noStrict"
      description: "Remove \"use strict\" directives\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/ecmascript/5to6/nostrict"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.ecmascript.5to6.simpleArrow:
      name: "org.openrewrite.codemods.ecmascript.5to6.simpleArrow"
      description: "Replace all function expressions with only `return` statement\
        \ with simple arrow function.\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/ecmascript/5to6/simplearrow"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.ecmascript.5to6.varToLet:
      name: "org.openrewrite.codemods.ecmascript.5to6.varToLet"
      description: "Convert `var` to `let`\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/ecmascript/5to6/vartolet"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.ecmascript.ESLintTypeScriptDefaults:
      name: "org.openrewrite.codemods.ecmascript.ESLintTypeScriptDefaults"
      description: "The default config includes the `@typescript-eslint` plugin and\
        \ the corresponding `plugin:@typescript-eslint/recommended` extend.\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/ecmascript/eslinttypescriptdefaults"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.ecmascript.ESLintTypeScriptPrettier:
      name: "org.openrewrite.codemods.ecmascript.ESLintTypeScriptPrettier"
      description: "Formats all TypeScript source code using the ESLint Prettier plugin.\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/ecmascript/eslinttypescriptprettier"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.ArrayBracketNewline:
      name: "org.openrewrite.codemods.format.ArrayBracketNewline"
      description: "Enforce linebreaks after opening and before closing array brackets\n\
        \nSee [rule details](https://eslint.style/rules/default/array-bracket-newline)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/arraybracketnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.ArrayBracketSpacing:
      name: "org.openrewrite.codemods.format.ArrayBracketSpacing"
      description: "Enforce consistent spacing inside array brackets\n\nSee [rule\
        \ details](https://eslint.style/rules/default/array-bracket-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/arraybracketspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.ArrayElementNewline:
      name: "org.openrewrite.codemods.format.ArrayElementNewline"
      description: "Enforce line breaks after each array element\n\nSee [rule details](https://eslint.style/rules/default/array-element-newline)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/arrayelementnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.ArrowParens:
      name: "org.openrewrite.codemods.format.ArrowParens"
      description: "Require parentheses around arrow function arguments\n\nSee [rule\
        \ details](https://eslint.style/rules/default/arrow-parens)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/arrowparens"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.ArrowSpacing:
      name: "org.openrewrite.codemods.format.ArrowSpacing"
      description: "Enforce consistent spacing before and after the arrow in arrow\
        \ functions\n\nSee [rule details](https://eslint.style/rules/default/arrow-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/arrowspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.BlockSpacing:
      name: "org.openrewrite.codemods.format.BlockSpacing"
      description: "Disallow or enforce spaces inside of blocks after opening block\
        \ and before closing block\n\nSee [rule details](https://eslint.style/rules/default/block-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/blockspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.BraceStyle:
      name: "org.openrewrite.codemods.format.BraceStyle"
      description: "Enforce consistent brace style for blocks\n\nSee [rule details](https://eslint.style/rules/default/brace-style)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/bracestyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.CommaDangle:
      name: "org.openrewrite.codemods.format.CommaDangle"
      description: "Require or disallow trailing commas\n\nSee [rule details](https://eslint.style/rules/default/comma-dangle)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/commadangle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.CommaSpacing:
      name: "org.openrewrite.codemods.format.CommaSpacing"
      description: "Enforce consistent spacing before and after commas\n\nSee [rule\
        \ details](https://eslint.style/rules/default/comma-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/commaspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.CommaStyle:
      name: "org.openrewrite.codemods.format.CommaStyle"
      description: "Enforce consistent comma style\n\nSee [rule details](https://eslint.style/rules/default/comma-style)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/commastyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.ComputedPropertySpacing:
      name: "org.openrewrite.codemods.format.ComputedPropertySpacing"
      description: "Enforce consistent spacing inside computed property brackets\n\
        \nSee [rule details](https://eslint.style/rules/default/computed-property-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/computedpropertyspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.DotLocation:
      name: "org.openrewrite.codemods.format.DotLocation"
      description: "Enforce consistent newlines before and after dots\n\nSee [rule\
        \ details](https://eslint.style/rules/default/dot-location)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/dotlocation"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.EolLast:
      name: "org.openrewrite.codemods.format.EolLast"
      description: "Require or disallow newline at the end of files\n\nSee [rule details](https://eslint.style/rules/default/eol-last)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/eollast"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.FuncCallSpacing:
      name: "org.openrewrite.codemods.format.FuncCallSpacing"
      description: "Require or disallow spacing between function identifiers and their\
        \ invocations. Alias of &#x60;function-call-spacing&#x60;.\n\nSee [rule details](https://eslint.style/rules/default/func-call-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/funccallspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.FunctionCallArgumentNewline:
      name: "org.openrewrite.codemods.format.FunctionCallArgumentNewline"
      description: "Enforce line breaks between arguments of a function call\n\nSee\
        \ [rule details](https://eslint.style/rules/default/function-call-argument-newline)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/functioncallargumentnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.FunctionCallSpacing:
      name: "org.openrewrite.codemods.format.FunctionCallSpacing"
      description: "Require or disallow spacing between function identifiers and their\
        \ invocations\n\nSee [rule details](https://eslint.style/rules/default/function-call-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/functioncallspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.FunctionParenNewline:
      name: "org.openrewrite.codemods.format.FunctionParenNewline"
      description: "Enforce consistent line breaks inside function parentheses\n\n\
        See [rule details](https://eslint.style/rules/default/function-paren-newline)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/functionparennewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.GeneratorStarSpacing:
      name: "org.openrewrite.codemods.format.GeneratorStarSpacing"
      description: "Enforce consistent spacing around &#x60;*&#x60; operators in generator\
        \ functions\n\nSee [rule details](https://eslint.style/rules/default/generator-star-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/generatorstarspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.ImplicitArrowLinebreak:
      name: "org.openrewrite.codemods.format.ImplicitArrowLinebreak"
      description: "Enforce the location of arrow function bodies\n\nSee [rule details](https://eslint.style/rules/default/implicit-arrow-linebreak)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/implicitarrowlinebreak"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.Indent:
      name: "org.openrewrite.codemods.format.Indent"
      description: "Enforce consistent indentation\n\nSee [rule details](https://eslint.style/rules/default/indent)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/indent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.IndentBinaryOps:
      name: "org.openrewrite.codemods.format.IndentBinaryOps"
      description: "Indentation for binary operators\n\nSee [rule details](https://eslint.style/rules/default/indent-binary-ops)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/indentbinaryops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxClosingBracketLocation:
      name: "org.openrewrite.codemods.format.JsxClosingBracketLocation"
      description: "Enforce closing bracket location in JSX\n\nSee [rule details](https://eslint.style/rules/default/jsx-closing-bracket-location)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxclosingbracketlocation"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxClosingTagLocation:
      name: "org.openrewrite.codemods.format.JsxClosingTagLocation"
      description: "Enforce closing tag location for multiline JSX\n\nSee [rule details](https://eslint.style/rules/default/jsx-closing-tag-location)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxclosingtaglocation"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxCurlyBracePresence:
      name: "org.openrewrite.codemods.format.JsxCurlyBracePresence"
      description: "Disallow unnecessary JSX expressions when literals alone are sufficient\
        \ or enforce JSX expressions on literals in JSX children or attributes\n\n\
        See [rule details](https://eslint.style/rules/default/jsx-curly-brace-presence)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxcurlybracepresence"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxCurlyNewline:
      name: "org.openrewrite.codemods.format.JsxCurlyNewline"
      description: "Enforce consistent linebreaks in curly braces in JSX attributes\
        \ and expressions\n\nSee [rule details](https://eslint.style/rules/default/jsx-curly-newline)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxcurlynewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxCurlySpacing:
      name: "org.openrewrite.codemods.format.JsxCurlySpacing"
      description: "Enforce or disallow spaces inside of curly braces in JSX attributes\
        \ and expressions\n\nSee [rule details](https://eslint.style/rules/default/jsx-curly-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxcurlyspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxEqualsSpacing:
      name: "org.openrewrite.codemods.format.JsxEqualsSpacing"
      description: "Enforce or disallow spaces around equal signs in JSX attributes\n\
        \nSee [rule details](https://eslint.style/rules/default/jsx-equals-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxequalsspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxFirstPropNewLine:
      name: "org.openrewrite.codemods.format.JsxFirstPropNewLine"
      description: "Enforce proper position of the first property in JSX\n\nSee [rule\
        \ details](https://eslint.style/rules/default/jsx-first-prop-new-line)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxfirstpropnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxIndent:
      name: "org.openrewrite.codemods.format.JsxIndent"
      description: "Enforce JSX indentation\n\nSee [rule details](https://eslint.style/rules/default/jsx-indent)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxindent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxIndentProps:
      name: "org.openrewrite.codemods.format.JsxIndentProps"
      description: "Enforce props indentation in JSX\n\nSee [rule details](https://eslint.style/rules/default/jsx-indent-props)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxindentprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxMaxPropsPerLine:
      name: "org.openrewrite.codemods.format.JsxMaxPropsPerLine"
      description: "Enforce maximum of props on a single line in JSX\n\nSee [rule\
        \ details](https://eslint.style/rules/default/jsx-max-props-per-line)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxmaxpropsperline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxNewline:
      name: "org.openrewrite.codemods.format.JsxNewline"
      description: "Require or prevent a new line after jsx elements and expressions.\n\
        \nSee [rule details](https://eslint.style/rules/default/jsx-newline)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxnewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxOneExpressionPerLine:
      name: "org.openrewrite.codemods.format.JsxOneExpressionPerLine"
      description: "Require one JSX element per line\n\nSee [rule details](https://eslint.style/rules/default/jsx-one-expression-per-line)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxoneexpressionperline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxPascalCase:
      name: "org.openrewrite.codemods.format.JsxPascalCase"
      description: "Enforce PascalCase for user-defined JSX components\n\nSee [rule\
        \ details](https://eslint.style/rules/default/jsx-pascal-case)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxpascalcase"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxPropsNoMultiSpaces:
      name: "org.openrewrite.codemods.format.JsxPropsNoMultiSpaces"
      description: "Disallow multiple spaces between inline JSX props\n\nSee [rule\
        \ details](https://eslint.style/rules/default/jsx-props-no-multi-spaces)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxpropsnomultispaces"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxQuotes:
      name: "org.openrewrite.codemods.format.JsxQuotes"
      description: "Enforce the consistent use of either double or single quotes in\
        \ JSX attributes\n\nSee [rule details](https://eslint.style/rules/default/jsx-quotes)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxquotes"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxSelfClosingComp:
      name: "org.openrewrite.codemods.format.JsxSelfClosingComp"
      description: "Disallow extra closing tags for components without children\n\n\
        See [rule details](https://eslint.style/rules/default/jsx-self-closing-comp)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxselfclosingcomp"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxSortProps:
      name: "org.openrewrite.codemods.format.JsxSortProps"
      description: "Enforce props alphabetical sorting\n\nSee [rule details](https://eslint.style/rules/default/jsx-sort-props)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxsortprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxTagSpacing:
      name: "org.openrewrite.codemods.format.JsxTagSpacing"
      description: "Enforce whitespace in and around the JSX opening and closing brackets\n\
        \nSee [rule details](https://eslint.style/rules/default/jsx-tag-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxtagspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.JsxWrapMultilines:
      name: "org.openrewrite.codemods.format.JsxWrapMultilines"
      description: "Disallow missing parentheses around multiline JSX\n\nSee [rule\
        \ details](https://eslint.style/rules/default/jsx-wrap-multilines)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/jsxwrapmultilines"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.KeySpacing:
      name: "org.openrewrite.codemods.format.KeySpacing"
      description: "Enforce consistent spacing between keys and values in object literal\
        \ properties\n\nSee [rule details](https://eslint.style/rules/default/key-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/keyspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.KeywordSpacing:
      name: "org.openrewrite.codemods.format.KeywordSpacing"
      description: "Enforce consistent spacing before and after keywords\n\nSee [rule\
        \ details](https://eslint.style/rules/default/keyword-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/keywordspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.LinebreakStyle:
      name: "org.openrewrite.codemods.format.LinebreakStyle"
      description: "Enforce consistent linebreak style\n\nSee [rule details](https://eslint.style/rules/default/linebreak-style)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/linebreakstyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.LinesAroundComment:
      name: "org.openrewrite.codemods.format.LinesAroundComment"
      description: "Require empty lines around comments\n\nSee [rule details](https://eslint.style/rules/default/lines-around-comment)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/linesaroundcomment"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.LinesBetweenClassMembers:
      name: "org.openrewrite.codemods.format.LinesBetweenClassMembers"
      description: "Require or disallow an empty line between class members\n\nSee\
        \ [rule details](https://eslint.style/rules/default/lines-between-class-members)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/linesbetweenclassmembers"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.MemberDelimiterStyle:
      name: "org.openrewrite.codemods.format.MemberDelimiterStyle"
      description: "Require a specific member delimiter style for interfaces and type\
        \ literals\n\nSee [rule details](https://eslint.style/rules/default/member-delimiter-style)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/memberdelimiterstyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.MultilineTernary:
      name: "org.openrewrite.codemods.format.MultilineTernary"
      description: "Enforce newlines between operands of ternary expressions\n\nSee\
        \ [rule details](https://eslint.style/rules/default/multiline-ternary)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/multilineternary"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NewParens:
      name: "org.openrewrite.codemods.format.NewParens"
      description: "Enforce or disallow parentheses when invoking a constructor with\
        \ no arguments\n\nSee [rule details](https://eslint.style/rules/default/new-parens)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/newparens"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NewlinePerChainedCall:
      name: "org.openrewrite.codemods.format.NewlinePerChainedCall"
      description: "Require a newline after each call in a method chain\n\nSee [rule\
        \ details](https://eslint.style/rules/default/newline-per-chained-call)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/newlineperchainedcall"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NoConfusingArrow:
      name: "org.openrewrite.codemods.format.NoConfusingArrow"
      description: "Disallow arrow functions where they could be confused with comparisons\n\
        \nSee [rule details](https://eslint.style/rules/default/no-confusing-arrow)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/noconfusingarrow"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NoExtraParens:
      name: "org.openrewrite.codemods.format.NoExtraParens"
      description: "Disallow unnecessary parentheses\n\nSee [rule details](https://eslint.style/rules/default/no-extra-parens)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/noextraparens"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NoExtraSemi:
      name: "org.openrewrite.codemods.format.NoExtraSemi"
      description: "Disallow unnecessary semicolons\n\nSee [rule details](https://eslint.style/rules/default/no-extra-semi)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/noextrasemi"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NoFloatingDecimal:
      name: "org.openrewrite.codemods.format.NoFloatingDecimal"
      description: "Disallow leading or trailing decimal points in numeric literals\n\
        \nSee [rule details](https://eslint.style/rules/default/no-floating-decimal)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/nofloatingdecimal"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NoMultiSpaces:
      name: "org.openrewrite.codemods.format.NoMultiSpaces"
      description: "Disallow multiple spaces\n\nSee [rule details](https://eslint.style/rules/default/no-multi-spaces)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/nomultispaces"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NoMultipleEmptyLines:
      name: "org.openrewrite.codemods.format.NoMultipleEmptyLines"
      description: "Disallow multiple empty lines\n\nSee [rule details](https://eslint.style/rules/default/no-multiple-empty-lines)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/nomultipleemptylines"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NoTrailingSpaces:
      name: "org.openrewrite.codemods.format.NoTrailingSpaces"
      description: "Disallow trailing whitespace at the end of lines\n\nSee [rule\
        \ details](https://eslint.style/rules/default/no-trailing-spaces)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/notrailingspaces"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NoWhitespaceBeforeProperty:
      name: "org.openrewrite.codemods.format.NoWhitespaceBeforeProperty"
      description: "Disallow whitespace before properties\n\nSee [rule details](https://eslint.style/rules/default/no-whitespace-before-property)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/nowhitespacebeforeproperty"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.NonblockStatementBodyPosition:
      name: "org.openrewrite.codemods.format.NonblockStatementBodyPosition"
      description: "Enforce the location of single-line statements\n\nSee [rule details](https://eslint.style/rules/default/nonblock-statement-body-position)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/nonblockstatementbodyposition"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.ObjectCurlyNewline:
      name: "org.openrewrite.codemods.format.ObjectCurlyNewline"
      description: "Enforce consistent line breaks after opening and before closing\
        \ braces\n\nSee [rule details](https://eslint.style/rules/default/object-curly-newline)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/objectcurlynewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.ObjectCurlySpacing:
      name: "org.openrewrite.codemods.format.ObjectCurlySpacing"
      description: "Enforce consistent spacing inside braces\n\nSee [rule details](https://eslint.style/rules/default/object-curly-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/objectcurlyspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.ObjectPropertyNewline:
      name: "org.openrewrite.codemods.format.ObjectPropertyNewline"
      description: "Enforce placing object properties on separate lines\n\nSee [rule\
        \ details](https://eslint.style/rules/default/object-property-newline)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/objectpropertynewline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.OneVarDeclarationPerLine:
      name: "org.openrewrite.codemods.format.OneVarDeclarationPerLine"
      description: "Require or disallow newlines around variable declarations\n\n\
        See [rule details](https://eslint.style/rules/default/one-var-declaration-per-line)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/onevardeclarationperline"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.OperatorLinebreak:
      name: "org.openrewrite.codemods.format.OperatorLinebreak"
      description: "Enforce consistent linebreak style for operators\n\nSee [rule\
        \ details](https://eslint.style/rules/default/operator-linebreak)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/operatorlinebreak"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.PaddedBlocks:
      name: "org.openrewrite.codemods.format.PaddedBlocks"
      description: "Require or disallow padding within blocks\n\nSee [rule details](https://eslint.style/rules/default/padded-blocks)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/paddedblocks"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.PaddingLineBetweenStatements:
      name: "org.openrewrite.codemods.format.PaddingLineBetweenStatements"
      description: "Require or disallow padding lines between statements\n\nSee [rule\
        \ details](https://eslint.style/rules/default/padding-line-between-statements)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/paddinglinebetweenstatements"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.QuoteProps:
      name: "org.openrewrite.codemods.format.QuoteProps"
      description: "Require quotes around object literal property names\n\nSee [rule\
        \ details](https://eslint.style/rules/default/quote-props)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/quoteprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.Quotes:
      name: "org.openrewrite.codemods.format.Quotes"
      description: "Enforce the consistent use of either backticks, double, or single\
        \ quotes\n\nSee [rule details](https://eslint.style/rules/default/quotes)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/quotes"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.RecommendedESLintStyling:
      name: "org.openrewrite.codemods.format.RecommendedESLintStyling"
      description: "Collection of stylistic ESLint rules that are recommended by the\
        \ [ESLint Style.](https://eslint.style/)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/recommendedeslintstyling"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.RestSpreadSpacing:
      name: "org.openrewrite.codemods.format.RestSpreadSpacing"
      description: "Enforce spacing between rest and spread operators and their expressions\n\
        \nSee [rule details](https://eslint.style/rules/default/rest-spread-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/restspreadspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.Semi:
      name: "org.openrewrite.codemods.format.Semi"
      description: "Require or disallow semicolons instead of ASI\n\nSee [rule details](https://eslint.style/rules/default/semi)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/semi"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.SemiSpacing:
      name: "org.openrewrite.codemods.format.SemiSpacing"
      description: "Enforce consistent spacing before and after semicolons\n\nSee\
        \ [rule details](https://eslint.style/rules/default/semi-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/semispacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.SemiStyle:
      name: "org.openrewrite.codemods.format.SemiStyle"
      description: "Enforce location of semicolons\n\nSee [rule details](https://eslint.style/rules/default/semi-style)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/semistyle"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.SpaceBeforeBlocks:
      name: "org.openrewrite.codemods.format.SpaceBeforeBlocks"
      description: "Enforce consistent spacing before blocks\n\nSee [rule details](https://eslint.style/rules/default/space-before-blocks)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/spacebeforeblocks"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.SpaceBeforeFunctionParen:
      name: "org.openrewrite.codemods.format.SpaceBeforeFunctionParen"
      description: "Enforce consistent spacing before &#x60;function&#x60; definition\
        \ opening parenthesis\n\nSee [rule details](https://eslint.style/rules/default/space-before-function-paren)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/spacebeforefunctionparen"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.SpaceInParens:
      name: "org.openrewrite.codemods.format.SpaceInParens"
      description: "Enforce consistent spacing inside parentheses\n\nSee [rule details](https://eslint.style/rules/default/space-in-parens)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/spaceinparens"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.SpaceInfixOps:
      name: "org.openrewrite.codemods.format.SpaceInfixOps"
      description: "Require spacing around infix operators\n\nSee [rule details](https://eslint.style/rules/default/space-infix-ops)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/spaceinfixops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.SpaceUnaryOps:
      name: "org.openrewrite.codemods.format.SpaceUnaryOps"
      description: "Enforce consistent spacing before or after unary operators\n\n\
        See [rule details](https://eslint.style/rules/default/space-unary-ops)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/spaceunaryops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.SpacedComment:
      name: "org.openrewrite.codemods.format.SpacedComment"
      description: "Enforce consistent spacing after the &#x60;//&#x60; or &#x60;/*&#x60;\
        \ in a comment\n\nSee [rule details](https://eslint.style/rules/default/spaced-comment)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/spacedcomment"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.SwitchColonSpacing:
      name: "org.openrewrite.codemods.format.SwitchColonSpacing"
      description: "Enforce spacing around colons of switch statements\n\nSee [rule\
        \ details](https://eslint.style/rules/default/switch-colon-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/switchcolonspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.TemplateCurlySpacing:
      name: "org.openrewrite.codemods.format.TemplateCurlySpacing"
      description: "Require or disallow spacing around embedded expressions of template\
        \ strings\n\nSee [rule details](https://eslint.style/rules/default/template-curly-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/templatecurlyspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.TemplateTagSpacing:
      name: "org.openrewrite.codemods.format.TemplateTagSpacing"
      description: "Require or disallow spacing between template tags and their literals\n\
        \nSee [rule details](https://eslint.style/rules/default/template-tag-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/templatetagspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.TypeAnnotationSpacing:
      name: "org.openrewrite.codemods.format.TypeAnnotationSpacing"
      description: "Require consistent spacing around type annotations\n\nSee [rule\
        \ details](https://eslint.style/rules/default/type-annotation-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/typeannotationspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.TypeGenericSpacing:
      name: "org.openrewrite.codemods.format.TypeGenericSpacing"
      description: "Enforces consistent spacing inside TypeScript type generics\n\n\
        See [rule details](https://eslint.style/rules/default/type-generic-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/typegenericspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.TypeNamedTupleSpacing:
      name: "org.openrewrite.codemods.format.TypeNamedTupleSpacing"
      description: "Expect space before the type declaration in the named tuple\n\n\
        See [rule details](https://eslint.style/rules/default/type-named-tuple-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/typenamedtuplespacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.WrapIife:
      name: "org.openrewrite.codemods.format.WrapIife"
      description: "Require parentheses around immediate &#x60;function&#x60; invocations\n\
        \nSee [rule details](https://eslint.style/rules/default/wrap-iife)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/wrapiife"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.WrapRegex:
      name: "org.openrewrite.codemods.format.WrapRegex"
      description: "Require parenthesis around regex literals\n\nSee [rule details](https://eslint.style/rules/default/wrap-regex)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/wrapregex"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.format.YieldStarSpacing:
      name: "org.openrewrite.codemods.format.YieldStarSpacing"
      description: "Require or disallow spacing around the &#x60;*&#x60; in &#x60;yield*&#x60;\
        \ expressions\n\nSee [rule details](https://eslint.style/rules/default/yield-star-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/format/yieldstarspacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.lodash.LodashUnderscoreArray:
      name: "org.openrewrite.codemods.migrate.lodash.LodashUnderscoreArray"
      description: "- `_.head(x)` -> `x[0]`\n- `_.head(x, n)` -> `x.slice(n)`\n- `_.first`\
        \ (alias for `_.head`)\n- `_.tail(x)` -> `x.slice(1)`\n- `_.tail(x, n)` ->\
        \ `x.slice(n)`\n- `_.rest` (alias for `_.tail`)\n- `_.last(x)` -> `x[x.length\
        \ - 1]`\n- `_.last(x, n)` -> `x.slice(x.length - n)`\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/lodash/lodashunderscorearray"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.lodash.LodashUnderscoreFunction:
      name: "org.openrewrite.codemods.migrate.lodash.LodashUnderscoreFunction"
      description: "- `_.bind(fn, obj, ...x)` -> `fn.bind(obj, ...x)`\n- `_.partial(fn,\
        \ a, b);` -> `(...args) => fn(a, b, ...args)`\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/lodash/lodashunderscorefunction"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.lodash.LodashUnderscoreObjects:
      name: "org.openrewrite.codemods.migrate.lodash.LodashUnderscoreObjects"
      description: "- `_.clone(x)` -> `{ ...x }`\n- `_.extend({}, x, y)` -> `{ ...x,\
        \ ...y }`\n- `_.extend(obj, x, y)` -> `Object.assign(obj, x, y)`\n- `_.keys(x)`\
        \ -> `Object.keys(x)`\n- `_.pairs(x)` -> `Object.entries(x)`\n- `_.values(x)`\
        \ -> `Object.values(x)`\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/lodash/lodashunderscoreobjects"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.lodash.LodashUnderscoreUtil:
      name: "org.openrewrite.codemods.migrate.lodash.LodashUnderscoreUtil"
      description: "- `_.isArray(x)` -> `Array.isArray(x)`\n- `_.isBoolean(x)` ->\
        \ `typeof(x) === 'boolean'`\n- `_.isFinite(x)` -> `Number.isFinite(x)`\n-\
        \ `_.isFunction(x)` -> `typeof(x) === 'function'`\n- `_.isNull(x)` -> `x ===\
        \ null`\n- `_.isString(x)` -> `typeof(x) === 'string'`\n- `_.isUndefined(x)`\
        \ -> `typeof(x) === 'undefined'`\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/lodash/lodashunderscoreutil"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.AdapterV:
      name: "org.openrewrite.codemods.migrate.mui.AdapterV"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#adapter-v4)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/adapterv"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.All:
      name: "org.openrewrite.codemods.migrate.mui.All"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#all)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/all"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.AutocompleteRenameCloseicon:
      name: "org.openrewrite.codemods.migrate.mui.AutocompleteRenameCloseicon"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#autocomplete-rename-closeicon)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/autocompleterenamecloseicon"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.AutocompleteRenameOption:
      name: "org.openrewrite.codemods.migrate.mui.AutocompleteRenameOption"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#autocomplete-rename-option)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/autocompleterenameoption"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.AvatarCircleCircular:
      name: "org.openrewrite.codemods.migrate.mui.AvatarCircleCircular"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#avatar-circle-circular)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/avatarcirclecircular"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.BadgeOverlapValue:
      name: "org.openrewrite.codemods.migrate.mui.BadgeOverlapValue"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#badge-overlap-value)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/badgeoverlapvalue"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.BaseHookImports:
      name: "org.openrewrite.codemods.migrate.mui.BaseHookImports"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#base-hook-imports)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/basehookimports"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.BaseRemoveComponentProp:
      name: "org.openrewrite.codemods.migrate.mui.BaseRemoveComponentProp"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#base-remove-component-prop)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/baseremovecomponentprop"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.BaseRemoveUnstyledSuffix:
      name: "org.openrewrite.codemods.migrate.mui.BaseRemoveUnstyledSuffix"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#base-remove-unstyled-suffix)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/baseremoveunstyledsuffix"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.BaseRenameComponentsToSlots:
      name: "org.openrewrite.codemods.migrate.mui.BaseRenameComponentsToSlots"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#base-rename-components-to-slots)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/baserenamecomponentstoslots"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.BaseUseNamedExports:
      name: "org.openrewrite.codemods.migrate.mui.BaseUseNamedExports"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#base-use-named-exports)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/baseusenamedexports"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.BoxBorderradiusValues:
      name: "org.openrewrite.codemods.migrate.mui.BoxBorderradiusValues"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#box-borderradius-values)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/boxborderradiusvalues"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.BoxRenameCss:
      name: "org.openrewrite.codemods.migrate.mui.BoxRenameCss"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#box-rename-css)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/boxrenamecss"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.BoxRenameGap:
      name: "org.openrewrite.codemods.migrate.mui.BoxRenameGap"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#box-rename-gap)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/boxrenamegap"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.BoxSxProp:
      name: "org.openrewrite.codemods.migrate.mui.BoxSxProp"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#box-sx-prop)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/boxsxprop"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ButtonColorProp:
      name: "org.openrewrite.codemods.migrate.mui.ButtonColorProp"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#button-color-prop)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/buttoncolorprop"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ChipVariantProp:
      name: "org.openrewrite.codemods.migrate.mui.ChipVariantProp"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#chip-variant-prop)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/chipvariantprop"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.CircularprogressVariant:
      name: "org.openrewrite.codemods.migrate.mui.CircularprogressVariant"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#circularprogress-variant)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/circularprogressvariant"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.CollapseRenameCollapsedheight:
      name: "org.openrewrite.codemods.migrate.mui.CollapseRenameCollapsedheight"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#collapse-rename-collapsedheight)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/collapserenamecollapsedheight"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ComponentRenameProp:
      name: "org.openrewrite.codemods.migrate.mui.ComponentRenameProp"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#component-rename-prop)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/componentrenameprop"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.CoreStylesImport:
      name: "org.openrewrite.codemods.migrate.mui.CoreStylesImport"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#core-styles-import)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/corestylesimport"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.CreateTheme:
      name: "org.openrewrite.codemods.migrate.mui.CreateTheme"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#create-theme)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/createtheme"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.DatePickersMovedToX:
      name: "org.openrewrite.codemods.migrate.mui.DatePickersMovedToX"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#date-pickers-moved-to-x)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/datepickersmovedtox"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.DialogProps:
      name: "org.openrewrite.codemods.migrate.mui.DialogProps"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#dialog-props)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/dialogprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.DialogTitleProps:
      name: "org.openrewrite.codemods.migrate.mui.DialogTitleProps"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#dialog-title-props)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/dialogtitleprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.EmotionPrependCache:
      name: "org.openrewrite.codemods.migrate.mui.EmotionPrependCache"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#emotion-prepend-cache)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/emotionprependcache"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ExpansionPanelComponent:
      name: "org.openrewrite.codemods.migrate.mui.ExpansionPanelComponent"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#expansion-panel-component)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/expansionpanelcomponent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.FabVariant:
      name: "org.openrewrite.codemods.migrate.mui.FabVariant"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#fab-variant)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/fabvariant"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.FadeRenameAlpha:
      name: "org.openrewrite.codemods.migrate.mui.FadeRenameAlpha"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#fade-rename-alpha)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/faderenamealpha"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.GridJustifyJustifycontent:
      name: "org.openrewrite.codemods.migrate.mui.GridJustifyJustifycontent"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#grid-justify-justifycontent)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/gridjustifyjustifycontent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.GridListComponent:
      name: "org.openrewrite.codemods.migrate.mui.GridListComponent"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#grid-list-component)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/gridlistcomponent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.GridVProps:
      name: "org.openrewrite.codemods.migrate.mui.GridVProps"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#grid-v2-props)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/gridvprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.HiddenDownProps:
      name: "org.openrewrite.codemods.migrate.mui.HiddenDownProps"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#hidden-down-props)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/hiddendownprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.IconButtonSize:
      name: "org.openrewrite.codemods.migrate.mui.IconButtonSize"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#icon-button-size)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/iconbuttonsize"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.JoyAvatarRemoveImgprops:
      name: "org.openrewrite.codemods.migrate.mui.JoyAvatarRemoveImgprops"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#joy-avatar-remove-imgProps)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/joyavatarremoveimgprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.JoyRenameClassnamePrefix:
      name: "org.openrewrite.codemods.migrate.mui.JoyRenameClassnamePrefix"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#joy-rename-classname-prefix)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/joyrenameclassnameprefix"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.JoyRenameComponentsToSlots:
      name: "org.openrewrite.codemods.migrate.mui.JoyRenameComponentsToSlots"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#joy-rename-components-to-slots)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/joyrenamecomponentstoslots"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.JoyRenameRowProp:
      name: "org.openrewrite.codemods.migrate.mui.JoyRenameRowProp"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#joy-rename-row-prop)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/joyrenamerowprop"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.JoyTextFieldToInput:
      name: "org.openrewrite.codemods.migrate.mui.JoyTextFieldToInput"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#joy-text-field-to-input)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/joytextfieldtoinput"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.JssToStyled:
      name: "org.openrewrite.codemods.migrate.mui.JssToStyled"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#jss-to-styled)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/jsstostyled"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.JssToTssReact:
      name: "org.openrewrite.codemods.migrate.mui.JssToTssReact"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#jss-to-tss-react)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/jsstotssreact"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.LinkUnderlineHover:
      name: "org.openrewrite.codemods.migrate.mui.LinkUnderlineHover"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#link-underline-hover)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/linkunderlinehover"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.MaterialUiStyles:
      name: "org.openrewrite.codemods.migrate.mui.MaterialUiStyles"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#material-ui-styles)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/materialuistyles"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.MaterialUiTypes:
      name: "org.openrewrite.codemods.migrate.mui.MaterialUiTypes"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#material-ui-types)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/materialuitypes"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ModalProps:
      name: "org.openrewrite.codemods.migrate.mui.ModalProps"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#modal-props)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/modalprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.MovedLabModules:
      name: "org.openrewrite.codemods.migrate.mui.MovedLabModules"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#moved-lab-modules)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/movedlabmodules"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.MuiReplace:
      name: "org.openrewrite.codemods.migrate.mui.MuiReplace"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#mui-replace)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/muireplace"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.OptimalImports:
      name: "org.openrewrite.codemods.migrate.mui.OptimalImports"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#optimal-imports)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/optimalimports"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.PaginationRoundCircular:
      name: "org.openrewrite.codemods.migrate.mui.PaginationRoundCircular"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#pagination-round-circular)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/paginationroundcircular"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.PresetSafe:
      name: "org.openrewrite.codemods.migrate.mui.PresetSafe"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#preset-safe)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/presetsafe"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.RenameCssVariables:
      name: "org.openrewrite.codemods.migrate.mui.RenameCssVariables"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#rename-css-variables)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/renamecssvariables"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.RootRef:
      name: "org.openrewrite.codemods.migrate.mui.RootRef"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#root-ref)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/rootref"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.SkeletonVariant:
      name: "org.openrewrite.codemods.migrate.mui.SkeletonVariant"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#skeleton-variant)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/skeletonvariant"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.Styled:
      name: "org.openrewrite.codemods.migrate.mui.Styled"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#styled)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/styled"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.StyledEngineProvider:
      name: "org.openrewrite.codemods.migrate.mui.StyledEngineProvider"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#styled-engine-provider)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/styledengineprovider"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.SxProp:
      name: "org.openrewrite.codemods.migrate.mui.SxProp"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#sx-prop)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/sxprop"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.SystemProps:
      name: "org.openrewrite.codemods.migrate.mui.SystemProps"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#system-props)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/systemprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.TableProps:
      name: "org.openrewrite.codemods.migrate.mui.TableProps"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#table-props)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/tableprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.TabsScrollButtons:
      name: "org.openrewrite.codemods.migrate.mui.TabsScrollButtons"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#tabs-scroll-buttons)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/tabsscrollbuttons"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.TextareaMinmaxRows:
      name: "org.openrewrite.codemods.migrate.mui.TextareaMinmaxRows"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#textarea-minmax-rows)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/textareaminmaxrows"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ThemeAugment:
      name: "org.openrewrite.codemods.migrate.mui.ThemeAugment"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#theme-augment)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/themeaugment"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ThemeBreakpoints:
      name: "org.openrewrite.codemods.migrate.mui.ThemeBreakpoints"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#theme-breakpoints)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/themebreakpoints"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ThemeBreakpointsWidth:
      name: "org.openrewrite.codemods.migrate.mui.ThemeBreakpointsWidth"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#theme-breakpoints-width)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/themebreakpointswidth"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ThemeOptions:
      name: "org.openrewrite.codemods.migrate.mui.ThemeOptions"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#theme-options)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/themeoptions"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ThemePaletteMode:
      name: "org.openrewrite.codemods.migrate.mui.ThemePaletteMode"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#theme-palette-mode)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/themepalettemode"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ThemeProvider:
      name: "org.openrewrite.codemods.migrate.mui.ThemeProvider"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#theme-provider)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/themeprovider"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ThemeSpacing:
      name: "org.openrewrite.codemods.migrate.mui.ThemeSpacing"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#theme-spacing)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/themespacing"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ThemeSpacingApi:
      name: "org.openrewrite.codemods.migrate.mui.ThemeSpacingApi"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#theme-spacing-api)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/themespacingapi"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ThemeTypographyRound:
      name: "org.openrewrite.codemods.migrate.mui.ThemeTypographyRound"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#theme-typography-round)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/themetypographyround"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.ThemeV:
      name: "org.openrewrite.codemods.migrate.mui.ThemeV"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#theme-v6)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/themev"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.TopLevelImports:
      name: "org.openrewrite.codemods.migrate.mui.TopLevelImports"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#top-level-imports)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/toplevelimports"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.Transitions:
      name: "org.openrewrite.codemods.migrate.mui.Transitions"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#transitions)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/transitions"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.TreeViewMovedToX:
      name: "org.openrewrite.codemods.migrate.mui.TreeViewMovedToX"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#tree-view-moved-to-x)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/treeviewmovedtox"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.UseAutocomplete:
      name: "org.openrewrite.codemods.migrate.mui.UseAutocomplete"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#use-autocomplete)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/useautocomplete"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.UseTransitionprops:
      name: "org.openrewrite.codemods.migrate.mui.UseTransitionprops"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#use-transitionprops)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/usetransitionprops"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.VariantProp:
      name: "org.openrewrite.codemods.migrate.mui.VariantProp"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#variant-prop)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/variantprop"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.WithMobileDialog:
      name: "org.openrewrite.codemods.migrate.mui.WithMobileDialog"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#with-mobile-dialog)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/withmobiledialog"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.mui.WithWidth:
      name: "org.openrewrite.codemods.migrate.mui.WithWidth"
      description: "See Material UI codemod projects for more [details](https://github.com/mui/material-ui/tree/master/packages/mui-codemod#with-width)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/mui/withwidth"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.NextJsCodemods:
      name: "org.openrewrite.codemods.migrate.nextjs.NextJsCodemods"
      description: "Next.js provides Codemod transformations to help upgrade your\
        \ [Next.js](https://nextjs.org/) codebase when an API is updated or deprecated.\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/nextjscodemods"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v10.AddMissingReactImport:
      name: "org.openrewrite.codemods.migrate.nextjs.v10.AddMissingReactImport"
      description: "Transforms files that do not import `React` to include the import\
        \ in order for the new React JSX transform to work."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v10/addmissingreactimport"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v11.CraToNext:
      name: "org.openrewrite.codemods.migrate.nextjs.v11.CraToNext"
      description: "Safely renames `next/image` imports in existing Next.js `10` `11`\
        \ or `12` applications to `next/legacy/image` in Next.js 13. Also renames\
        \ `next/future/image` to `next/image`."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v11/cratonext"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v13_0.NewLink:
      name: "org.openrewrite.codemods.migrate.nextjs.v13_0.NewLink"
      description: "Remove `&lt;a&gt;` tags inside Link Components or add a `legacyBehavior`\
        \ prop to Links that cannot be auto-fixed."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v13_0/newlink"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v13_0.NextImageExperimental:
      name: "org.openrewrite.codemods.migrate.nextjs.v13_0.NextImageExperimental"
      description: "Dangerously migrates from `next/legacy/image` to the new `next/image`\
        \ by adding inline styles and removing unused props."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v13_0/nextimageexperimental"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v13_0.NextImageToLegacyImage:
      name: "org.openrewrite.codemods.migrate.nextjs.v13_0.NextImageToLegacyImage"
      description: "Safely renames `next/image` imports in existing Next.js `10` `11`\
        \ or `12` applications to `next/legacy/image` in Next.js 13. Also renames\
        \ `next/future/image` to `next/image`."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v13_0/nextimagetolegacyimage"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v13_2.BuiltInNextFont:
      name: "org.openrewrite.codemods.migrate.nextjs.v13_2.BuiltInNextFont"
      description: "This codemod uninstalls the `@next/font` package and transforms\
        \ `@next/font` imports into the built-in `next/font`."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v13_2/builtinnextfont"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v14_0.MetadataToViewportExport:
      name: "org.openrewrite.codemods.migrate.nextjs.v14_0.MetadataToViewportExport"
      description: "This codemod migrates certain viewport metadata to `viewport`\
        \ export."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v14_0/metadatatoviewportexport"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v14_0.NextOgImport:
      name: "org.openrewrite.codemods.migrate.nextjs.v14_0.NextOgImport"
      description: "This codemod moves transforms imports from `next/server` to `next/og`\
        \ for usage of Dynamic OG Image Generation."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v14_0/nextogimport"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v6.UrlToWithrouter:
      name: "org.openrewrite.codemods.migrate.nextjs.v6.UrlToWithrouter"
      description: "Transforms the deprecated automatically injected url property\
        \ on top-level pages to using `withRouter` and the `router` property it injects.\
        \ Read more [here](https://nextjs.org/docs/messages/url-deprecated)."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v6/urltowithrouter"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v8.WithampToConfig:
      name: "org.openrewrite.codemods.migrate.nextjs.v8.WithampToConfig"
      description: "Transforms the `withAmp` HOC into Next.js 9 page configuration."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v8/withamptoconfig"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.nextjs.v9.NameDefaultComponent:
      name: "org.openrewrite.codemods.migrate.nextjs.v9.NameDefaultComponent"
      description: "Transforms anonymous components into named components to make\
        \ sure they work with Fast Refresh. The component will have a camel-cased\
        \ name based on the name of the file, and it also works with arrow functions."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/nextjs/v9/namedefaultcomponent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
    org.openrewrite.codemods.migrate.react.ClassComponentToFunctionComponent:
      name: "org.openrewrite.codemods.migrate.react.ClassComponentToFunctionComponent"
      description: "Class components are still going to be supported by React for\
        \ the foreseeable future. However, it is no longer recommended to write new\
        \ components in class-style.\n\n  This recipe will convert class components\
        \ to function components using [react-declassify](https://github.com/wantedly/react-declassify)\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/react/classcomponenttofunctioncomponent"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods"
rewrite-codemods-ng:
  artifactId: "rewrite-codemods-ng"
  version: "0.7.4"
  markdownRecipeDescriptors:
    org.openrewrite.codemods.migrate.angular.ApplyAngularCLI:
      name: "org.openrewrite.codemods.migrate.angular.ApplyAngularCLI"
      description: "Run `ng update` to upgrade Angular CLI and Angular Core to the\
        \ specified version."
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/angular/applyangularcli"
      options:
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-codemods-ng"
    org.openrewrite.codemods.migrate.angular.v15:
      name: "org.openrewrite.codemods.migrate.angular.v15"
      description: "Upgrade to Angular v15\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/angular/v15"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods-ng"
    org.openrewrite.codemods.migrate.angular.v16:
      name: "org.openrewrite.codemods.migrate.angular.v16"
      description: "Upgrade to Angular v16\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/angular/v16"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods-ng"
    org.openrewrite.codemods.migrate.angular.v17:
      name: "org.openrewrite.codemods.migrate.angular.v17"
      description: "Upgrade to Angular v17\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/angular/v17"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods-ng"
    org.openrewrite.codemods.migrate.angular.v18:
      name: "org.openrewrite.codemods.migrate.angular.v18"
      description: "Upgrade to Angular v18\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/angular/v18"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods-ng"
    org.openrewrite.codemods.migrate.angular.v19:
      name: "org.openrewrite.codemods.migrate.angular.v19"
      description: "Upgrade to Angular v19\n"
      docLink: "https://docs.openrewrite.org/recipes/codemods/migrate/angular/v19"
      options: []
      isImperative: false
      artifactId: "rewrite-codemods-ng"
rewrite-compiled-analysis:
  artifactId: "rewrite-compiled-analysis"
  version: "0.2.6"
  markdownRecipeDescriptors:
    io.moderne.compiled.verification.ChangeListMethodAndVerify:
      name: "io.moderne.compiled.verification.ChangeListMethodAndVerify"
      description: "We know this won't compile."
      docLink: "https://docs.openrewrite.org/recipes/compiled/verification/changelistmethodandverify"
      options: []
      isImperative: true
      artifactId: "rewrite-compiled-analysis"
    io.moderne.compiled.verification.VerifyCompilation:
      name: "io.moderne.compiled.verification.VerifyCompilation"
      description: "This is a task that runs after another recipe to verify that the\
        \ changes made by that recipe would result in a successful compilation."
      docLink: "https://docs.openrewrite.org/recipes/compiled/verification/verifycompilation"
      options:
      - name: "trace"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-compiled-analysis"
rewrite-comprehension:
  artifactId: "rewrite-comprehension"
  version: "0.5.0"
  markdownRecipeDescriptors:
    io.moderne.knowledge.ComprehendCode:
      name: "io.moderne.knowledge.ComprehendCode"
      description: "Use LLMs to add inferred knowledge to the code."
      docLink: "https://docs.openrewrite.org/recipes/knowledge/comprehendcode"
      options: []
      isImperative: true
      artifactId: "rewrite-comprehension"
    io.moderne.knowledge.ComprehendCodeWithUnitTestExamples:
      name: "io.moderne.knowledge.ComprehendCodeWithUnitTestExamples"
      description: "First runs a scanning recipe to grab all unit tests, then supplements\
        \ the unit tests examples for the AI-generate descriptions."
      docLink: "https://docs.openrewrite.org/recipes/knowledge/comprehendcodewithunittestexamples"
      options: []
      isImperative: true
      artifactId: "rewrite-comprehension"
    io.moderne.knowledge.docs.UpdateOpenRewriteReadme:
      name: "io.moderne.knowledge.docs.UpdateOpenRewriteReadme"
      description: "Updates the README periodically to reflect the latest contents\
        \ of recipe projects."
      docLink: "https://docs.openrewrite.org/recipes/knowledge/docs/updateopenrewritereadme"
      options: []
      isImperative: true
      artifactId: "rewrite-comprehension"
    io.moderne.knowledge.docs.UpdateReadme:
      name: "io.moderne.knowledge.docs.UpdateReadme"
      description: "Generate a README file for the project, containing information\
        \ about the project inferred from its knowledge graph."
      docLink: "https://docs.openrewrite.org/recipes/knowledge/docs/updatereadme"
      options:
      - name: "prompt"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-comprehension"
    io.moderne.knowledge.search.SearchDesignTechnique:
      name: "io.moderne.knowledge.search.SearchDesignTechnique"
      description: "Search for a class that uses the given design technique."
      docLink: "https://docs.openrewrite.org/recipes/knowledge/search/searchdesigntechnique"
      options:
      - name: "prompt"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-comprehension"
    io.moderne.moddy.ImproveRecipeDescriptors:
      name: "io.moderne.moddy.ImproveRecipeDescriptors"
      description: "Improving recipe display names and descriptions in turn improves\
        \ Moddy."
      docLink: "https://docs.openrewrite.org/recipes/moddy/improverecipedescriptors"
      options: []
      isImperative: true
      artifactId: "rewrite-comprehension"
rewrite-concourse:
  artifactId: "rewrite-concourse"
  version: "3.2.1"
  markdownRecipeDescriptors:
    org.openrewrite.concourse.ChangeResourceVersion:
      name: "org.openrewrite.concourse.ChangeResourceVersion"
      description: "Pin or unpin a resource to a particular version."
      docLink: "https://docs.openrewrite.org/recipes/concourse/changeresourceversion"
      options:
      - name: "resourceType"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-concourse"
    org.openrewrite.concourse.ChangeValue:
      name: "org.openrewrite.concourse.ChangeValue"
      description: "Change every value matching the key pattern."
      docLink: "https://docs.openrewrite.org/recipes/concourse/changevalue"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "keyPath"
        type: "String"
        required: true
      - name: "newValue"
        type: "String"
        required: true
      - name: "oldValue"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-concourse"
    org.openrewrite.concourse.FindResource:
      name: "org.openrewrite.concourse.FindResource"
      description: "Find a Concourse resource by name."
      docLink: "https://docs.openrewrite.org/recipes/concourse/findresource"
      options:
      - name: "type"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-concourse"
    org.openrewrite.concourse.UpdateGitResourceUri:
      name: "org.openrewrite.concourse.UpdateGitResourceUri"
      description: "Update git resource `source.uri` URI values to point to a new\
        \ URI value."
      docLink: "https://docs.openrewrite.org/recipes/concourse/updategitresourceuri"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "newURI"
        type: "String"
        required: true
      - name: "oldURIPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-concourse"
    org.openrewrite.concourse.search.FindPinnedResource:
      name: "org.openrewrite.concourse.search.FindPinnedResource"
      description: "Find resources of a particular type that have pinned versions."
      docLink: "https://docs.openrewrite.org/recipes/concourse/search/findpinnedresource"
      options:
      - name: "resourceType"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-concourse"
    org.openrewrite.concourse.search.FindPrivilegedResourceType:
      name: "org.openrewrite.concourse.search.FindPrivilegedResourceType"
      description: "By default, `resource_type` definitions are unprivileged."
      docLink: "https://docs.openrewrite.org/recipes/concourse/search/findprivilegedresourcetype"
      options: []
      isImperative: false
      artifactId: "rewrite-concourse"
rewrite-core:
  artifactId: "rewrite-core"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.DeleteSourceFiles:
      name: "org.openrewrite.DeleteSourceFiles"
      description: "Delete files by source path."
      docLink: "https://docs.openrewrite.org/recipes/core/deletesourcefiles"
      options:
      - name: "filePattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.ExcludeFileFromGitignore:
      name: "org.openrewrite.ExcludeFileFromGitignore"
      description: "This recipe will remove a file or directory from the .gitignore\
        \ file. If the file or directory is already in the .gitignore file, it will\
        \ be removed or negated. If the file or directory is not in the .gitignore\
        \ file, no action will be taken."
      docLink: "https://docs.openrewrite.org/recipes/core/excludefilefromgitignore"
      options:
      - name: "paths"
        type: "List"
        required: true
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.FindCollidingSourceFiles:
      name: "org.openrewrite.FindCollidingSourceFiles"
      description: "Finds source files which share a path with another source file.\
        \ There should always be exactly one source file per path within a repository.\
        \ This is a diagnostic for finding problems in OpenRewrite parsers/build plugins."
      docLink: "https://docs.openrewrite.org/recipes/core/findcollidingsourcefiles"
      options: []
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.FindDeserializationErrors:
      name: "org.openrewrite.FindDeserializationErrors"
      description: "Produces a data table collecting all deserialization errors of\
        \ serialized LSTs."
      docLink: "https://docs.openrewrite.org/recipes/core/finddeserializationerrors"
      options: []
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.FindGitProvenance:
      name: "org.openrewrite.FindGitProvenance"
      description: "List out the contents of each unique `GitProvenance` marker in\
        \ the set of source files. When everything is working correctly, exactly one\
        \ such marker should be printed as all source files are expected to come from\
        \ the same repository / branch / commit hash."
      docLink: "https://docs.openrewrite.org/recipes/core/findgitprovenance"
      options: []
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.FindLstProvenance:
      name: "org.openrewrite.FindLstProvenance"
      description: "Produces a data table showing what versions of OpenRewrite/Moderne\
        \ tooling was used to produce a given LST."
      docLink: "https://docs.openrewrite.org/recipes/core/findlstprovenance"
      options: []
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.FindParseFailures:
      name: "org.openrewrite.FindParseFailures"
      description: "This recipe explores parse failures after an LST is produced for\
        \ classifying the types of failures that can occur and prioritizing fixes\
        \ according to the most common problems."
      docLink: "https://docs.openrewrite.org/recipes/core/findparsefailures"
      options:
      - name: "createdAfter"
        type: "String"
        required: false
      - name: "maxSnippetLength"
        type: "Integer"
        required: false
      - name: "parserType"
        type: "String"
        required: false
      - name: "stackTrace"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.FindQuarks:
      name: "org.openrewrite.FindQuarks"
      description: "`Quark` source files are pointers to the existence of a file without\
        \ capturing any of the contents of the file."
      docLink: "https://docs.openrewrite.org/recipes/core/findquarks"
      options: []
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.FindSourceFiles:
      name: "org.openrewrite.FindSourceFiles"
      description: "Find files by source path. Paths are always interpreted as relative\
        \ to the repository root."
      docLink: "https://docs.openrewrite.org/recipes/core/findsourcefiles"
      options:
      - name: "filePattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.IsInRepository:
      name: "org.openrewrite.IsInRepository"
      description: "A search recipe which marks files that are in a repository with\
        \ one of the supplied names. Intended for use as a precondition for other\
        \ recipes being run over many different repositories."
      docLink: "https://docs.openrewrite.org/recipes/core/isinrepository"
      options:
      - name: "allowedRepositories"
        type: "Set"
        required: true
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.ListRuntimeClasspath:
      name: "org.openrewrite.ListRuntimeClasspath"
      description: "A diagnostic utility which emits the runtime classpath to a data\
        \ table."
      docLink: "https://docs.openrewrite.org/recipes/core/listruntimeclasspath"
      options: []
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.RenameFile:
      name: "org.openrewrite.RenameFile"
      description: "Rename a file while keeping it in the same directory."
      docLink: "https://docs.openrewrite.org/recipes/core/renamefile"
      options:
      - name: "fileMatcher"
        type: "String"
        required: true
      - name: "fileName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.SetFilePermissions:
      name: "org.openrewrite.SetFilePermissions"
      description: "Set a file's read, write and executable permission attributes."
      docLink: "https://docs.openrewrite.org/recipes/core/setfilepermissions"
      options:
      - name: "fileMatcher"
        type: "String"
        required: true
      - name: "isExecutable"
        type: "Boolean"
        required: true
      - name: "isReadable"
        type: "Boolean"
        required: true
      - name: "isWritable"
        type: "Boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.config.CompositeRecipe:
      name: "org.openrewrite.config.CompositeRecipe"
      description: "A recipe that consists of a list of other recipes."
      docLink: "https://docs.openrewrite.org/recipes/config/compositerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.java.jspecify.MigrateFromOpenRewriteAnnotations:
      name: "org.openrewrite.java.jspecify.MigrateFromOpenRewriteAnnotations"
      description: "Migrate from OpenRewrite's JSR-305 meta-annotations to JSpecify."
      docLink: "https://docs.openrewrite.org/recipes/java/jspecify/migratefromopenrewriteannotations"
      options: []
      isImperative: false
      artifactId: "rewrite-core"
    org.openrewrite.search.FindBuildMetadata:
      name: "org.openrewrite.search.FindBuildMetadata"
      description: "Find source files with matching build metadata."
      docLink: "https://docs.openrewrite.org/recipes/search/findbuildmetadata"
      options:
      - name: "key"
        type: "String"
        required: true
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.search.FindCommitters:
      name: "org.openrewrite.search.FindCommitters"
      description: "List the committers on a repository."
      docLink: "https://docs.openrewrite.org/recipes/search/findcommitters"
      options:
      - name: "fromDate"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.search.FindParseToPrintInequality:
      name: "org.openrewrite.search.FindParseToPrintInequality"
      description: "OpenRewrite `Parser` implementations should produce `SourceFile`\
        \ objects whose `printAll()` method should be byte-for-byte equivalent with\
        \ the original source file. When this isn't true, recipes can still run on\
        \ the `SourceFile` and even produce diffs, but the diffs would fail to apply\
        \ as a patch to the original source file. Most `Parser` use `Parser#requirePrintEqualsInput`\
        \ to produce a `ParseError` when they fail to produce a `SourceFile` that\
        \ is print idempotent."
      docLink: "https://docs.openrewrite.org/recipes/search/findparsetoprintinequality"
      options: []
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.text.AppendToTextFile:
      name: "org.openrewrite.text.AppendToTextFile"
      description: "Appends or replaces content of an existing plain text file, or\
        \ creates a new one if it doesn't already exist. Please note that this recipes\
        \ requires existing plain text files' format to be successfully parsable by\
        \ OpenRewrite. If a file is left unchanged, it might be parsed as a `Quark`\
        \ rather than plain text. In such case, use the `plainTextMask` option. See\
        \ the [Gradle](https://docs.openrewrite.org/reference/gradle-plugin-configuration#configuring-the-rewrite-dsl)\
        \ or [Maven](https://openrewrite.github.io/rewrite-maven-plugin/run-mojo.html#plainTextMasks)\
        \ plugin configuration page."
      docLink: "https://docs.openrewrite.org/recipes/text/appendtotextfile"
      options:
      - name: "appendNewline"
        type: "Boolean"
        required: false
      - name: "content"
        type: "String"
        required: true
      - name: "existingFileStrategy"
        type: "Strategy"
        required: false
      - name: "preamble"
        type: "String"
        required: false
      - name: "relativeFileName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.text.ChangeText:
      name: "org.openrewrite.text.ChangeText"
      description: "Completely replaces the contents of the text file with other text.\
        \ Use together with a `FindSourceFiles` precondition to limit which files\
        \ are changed."
      docLink: "https://docs.openrewrite.org/recipes/text/changetext"
      options:
      - name: "toText"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.text.CreateTextFile:
      name: "org.openrewrite.text.CreateTextFile"
      description: "Creates a new plain text file."
      docLink: "https://docs.openrewrite.org/recipes/text/createtextfile"
      options:
      - name: "fileContents"
        type: "String"
        required: true
      - name: "overwriteExisting"
        type: "Boolean"
        required: false
      - name: "relativeFileName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.text.EndOfLineAtEndOfFile:
      name: "org.openrewrite.text.EndOfLineAtEndOfFile"
      description: "Ensure that the file ends with the newline character.\n\n*Note*:\
        \ If this recipe modifies a file, it converts the file into plain text. As\
        \ such, this recipe should be run after any recipe that modifies the language-specific\
        \ LST."
      docLink: "https://docs.openrewrite.org/recipes/text/endoflineatendoffile"
      options: []
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.text.Find:
      name: "org.openrewrite.text.Find"
      description: "Textual search, optionally using Regular Expression (regex) to\
        \ query."
      docLink: "https://docs.openrewrite.org/recipes/text/find"
      options:
      - name: "caseSensitive"
        type: "Boolean"
        required: false
      - name: "description"
        type: "Boolean"
        required: false
      - name: "dotAll"
        type: "Boolean"
        required: false
      - name: "filePattern"
        type: "String"
        required: false
      - name: "find"
        type: "String"
        required: true
      - name: "multiline"
        type: "Boolean"
        required: false
      - name: "regex"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.text.FindAndReplace:
      name: "org.openrewrite.text.FindAndReplace"
      description: "Textual find and replace, optionally interpreting the search query\
        \ as a Regular Expression (regex). When operating on source files that are\
        \ language-specific Lossless Semantic Tree, such as Java or XML, this operation\
        \ converts the source file to plain text for the rest of the recipe run. So\
        \ if you are combining this recipe with language-specific recipes in a single\
        \ recipe run put all the language-specific recipes before this recipe."
      docLink: "https://docs.openrewrite.org/recipes/text/findandreplace"
      options:
      - name: "caseSensitive"
        type: "Boolean"
        required: false
      - name: "dotAll"
        type: "Boolean"
        required: false
      - name: "filePattern"
        type: "String"
        required: false
      - name: "find"
        type: "String"
        required: true
      - name: "multiline"
        type: "Boolean"
        required: false
      - name: "plaintextOnly"
        type: "Boolean"
        required: false
      - name: "regex"
        type: "Boolean"
        required: false
      - name: "replace"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-core"
    org.openrewrite.text.FindMultiselect:
      name: "org.openrewrite.text.FindMultiselect"
      description: "Search for text, treating all textual sources as plain text. This\
        \ version of the recipe exists to experiment with multiselect recipe options."
      docLink: "https://docs.openrewrite.org/recipes/text/findmultiselect"
      options:
      - name: "filePattern"
        type: "String"
        required: true
      - name: "find"
        type: "String"
        required: true
      - name: "regex"
        type: "Boolean"
        required: false
      - name: "regexOptions"
        type: "Set"
        required: false
      isImperative: true
      artifactId: "rewrite-core"
rewrite-cucumber-jvm:
  artifactId: "rewrite-cucumber-jvm"
  version: "2.3.0"
  markdownRecipeDescriptors:
    org.openrewrite.cucumber.jvm.CucumberAnnotationToSuite:
      name: "org.openrewrite.cucumber.jvm.CucumberAnnotationToSuite"
      description: "Replace `@Cucumber` with `@Suite` and `@SelectClasspathResource(\"\
        cucumber/annotated/class/package\")`."
      docLink: "https://docs.openrewrite.org/recipes/cucumber/jvm/cucumberannotationtosuite"
      options: []
      isImperative: true
      artifactId: "rewrite-cucumber-jvm"
    org.openrewrite.cucumber.jvm.CucumberJava8HookDefinitionToCucumberJava:
      name: "org.openrewrite.cucumber.jvm.CucumberJava8HookDefinitionToCucumberJava"
      description: "Replace `LambdaGlue` hook definitions with new annotated methods\
        \ with the same body."
      docLink: "https://docs.openrewrite.org/recipes/cucumber/jvm/cucumberjava8hookdefinitiontocucumberjava"
      options: []
      isImperative: true
      artifactId: "rewrite-cucumber-jvm"
    org.openrewrite.cucumber.jvm.CucumberJava8StepDefinitionToCucumberJava:
      name: "org.openrewrite.cucumber.jvm.CucumberJava8StepDefinitionToCucumberJava"
      description: "Replace `StepDefinitionBody` methods with `StepDefinitionAnnotations`\
        \ on new methods with the same body."
      docLink: "https://docs.openrewrite.org/recipes/cucumber/jvm/cucumberjava8stepdefinitiontocucumberjava"
      options: []
      isImperative: true
      artifactId: "rewrite-cucumber-jvm"
    org.openrewrite.cucumber.jvm.CucumberJava8ToJava:
      name: "org.openrewrite.cucumber.jvm.CucumberJava8ToJava"
      description: "Migrates `cucumber-java8` step definitions and `LambdaGlue` hooks\
        \ to `cucumber-java` annotated methods."
      docLink: "https://docs.openrewrite.org/recipes/cucumber/jvm/cucumberjava8tojava"
      options: []
      isImperative: false
      artifactId: "rewrite-cucumber-jvm"
    org.openrewrite.cucumber.jvm.CucumberToJunitPlatformSuite:
      name: "org.openrewrite.cucumber.jvm.CucumberToJunitPlatformSuite"
      description: "Migrates Cucumber tests to JUnit test `@Suite`."
      docLink: "https://docs.openrewrite.org/recipes/cucumber/jvm/cucumbertojunitplatformsuite"
      options: []
      isImperative: false
      artifactId: "rewrite-cucumber-jvm"
    org.openrewrite.cucumber.jvm.DropSummaryPrinter:
      name: "org.openrewrite.cucumber.jvm.DropSummaryPrinter"
      description: "Replace `SummaryPrinter` with `Plugin`, if not already present."
      docLink: "https://docs.openrewrite.org/recipes/cucumber/jvm/dropsummaryprinter"
      options: []
      isImperative: true
      artifactId: "rewrite-cucumber-jvm"
    org.openrewrite.cucumber.jvm.RegexToCucumberExpression:
      name: "org.openrewrite.cucumber.jvm.RegexToCucumberExpression"
      description: "Strip regex prefix and suffix from step annotation expressions\
        \ arguments where possible."
      docLink: "https://docs.openrewrite.org/recipes/cucumber/jvm/regextocucumberexpression"
      options: []
      isImperative: true
      artifactId: "rewrite-cucumber-jvm"
    org.openrewrite.cucumber.jvm.UpgradeCucumber2x:
      name: "org.openrewrite.cucumber.jvm.UpgradeCucumber2x"
      description: "Upgrade to Cucumber-JVM 2.x from any previous version."
      docLink: "https://docs.openrewrite.org/recipes/cucumber/jvm/upgradecucumber2x"
      options: []
      isImperative: false
      artifactId: "rewrite-cucumber-jvm"
    org.openrewrite.cucumber.jvm.UpgradeCucumber5x:
      name: "org.openrewrite.cucumber.jvm.UpgradeCucumber5x"
      description: "Upgrade to Cucumber-JVM 5.x from any previous version."
      docLink: "https://docs.openrewrite.org/recipes/cucumber/jvm/upgradecucumber5x"
      options: []
      isImperative: false
      artifactId: "rewrite-cucumber-jvm"
    org.openrewrite.cucumber.jvm.UpgradeCucumber7x:
      name: "org.openrewrite.cucumber.jvm.UpgradeCucumber7x"
      description: "Upgrade to Cucumber-JVM 7.x from any previous version."
      docLink: "https://docs.openrewrite.org/recipes/cucumber/jvm/upgradecucumber7x"
      options: []
      isImperative: false
      artifactId: "rewrite-cucumber-jvm"
rewrite-docker:
  artifactId: "rewrite-docker"
  version: "2.3.0"
  markdownRecipeDescriptors:
    org.openrewrite.docker.search.FindDockerImageUses:
      name: "org.openrewrite.docker.search.FindDockerImageUses"
      description: "Produce an impact analysis of base images used in Dockerfiles,\
        \ .gitlab-ci files, Kubernetes Deployment file, etc."
      docLink: "https://docs.openrewrite.org/recipes/docker/search/finddockerimageuses"
      options: []
      isImperative: true
      artifactId: "rewrite-docker"
rewrite-dotnet:
  artifactId: "rewrite-dotnet"
  version: "0.8.1"
  markdownRecipeDescriptors:
    org.openrewrite.dotnet.MigrateToNet6:
      name: "org.openrewrite.dotnet.MigrateToNet6"
      description: "Run [upgrade-assistant upgrade](https://learn.microsoft.com/en-us/dotnet/core/porting/upgrade-assistant-overview)\
        \ across a repository to upgrade projects to .NET 6.0."
      docLink: "https://docs.openrewrite.org/recipes/dotnet/migratetonet6"
      options: []
      isImperative: false
      artifactId: "rewrite-dotnet"
    org.openrewrite.dotnet.MigrateToNet7:
      name: "org.openrewrite.dotnet.MigrateToNet7"
      description: "Run [upgrade-assistant upgrade](https://learn.microsoft.com/en-us/dotnet/core/porting/upgrade-assistant-overview)\
        \ across a repository to upgrade projects to .NET 7.0."
      docLink: "https://docs.openrewrite.org/recipes/dotnet/migratetonet7"
      options: []
      isImperative: false
      artifactId: "rewrite-dotnet"
    org.openrewrite.dotnet.MigrateToNet8:
      name: "org.openrewrite.dotnet.MigrateToNet8"
      description: "Run [upgrade-assistant upgrade](https://learn.microsoft.com/en-us/dotnet/core/porting/upgrade-assistant-overview)\
        \ across a repository to upgrade projects to .NET 8.0."
      docLink: "https://docs.openrewrite.org/recipes/dotnet/migratetonet8"
      options: []
      isImperative: false
      artifactId: "rewrite-dotnet"
    org.openrewrite.dotnet.MigrateToNet9:
      name: "org.openrewrite.dotnet.MigrateToNet9"
      description: "Run [upgrade-assistant upgrade](https://learn.microsoft.com/en-us/dotnet/core/porting/upgrade-assistant-overview)\
        \ across a repository to upgrade projects to .NET 9.0."
      docLink: "https://docs.openrewrite.org/recipes/dotnet/migratetonet9"
      options: []
      isImperative: false
      artifactId: "rewrite-dotnet"
    org.openrewrite.dotnet.UpgradeAssistant:
      name: "org.openrewrite.dotnet.UpgradeAssistant"
      description: "Run [upgrade-assistant upgrade](https://learn.microsoft.com/en-us/dotnet/core/porting/upgrade-assistant-overview)\
        \ across a repository to upgrade projects to a newer version of .NET."
      docLink: "https://docs.openrewrite.org/recipes/dotnet/upgradeassistant"
      options:
      - name: "targetFramework"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-dotnet"
    org.openrewrite.dotnet.UpgradeAssistantAnalyze:
      name: "org.openrewrite.dotnet.UpgradeAssistantAnalyze"
      description: "Run [upgrade-assistant analyze](https://learn.microsoft.com/en-us/dotnet/core/porting/upgrade-assistant-overview)\
        \ across a repository to analyze changes required to upgrade projects to a\
        \ newer version of .NET. This recipe will generate an `org.openrewrite.dotnet.UpgradeAssistantAnalysis`\
        \ data table containing the report details."
      docLink: "https://docs.openrewrite.org/recipes/dotnet/upgradeassistantanalyze"
      options:
      - name: "privacyMode"
        type: "String"
        required: true
      - name: "targetFramework"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-dotnet"
rewrite-feature-flags:
  artifactId: "rewrite-feature-flags"
  version: "1.4.0"
  markdownRecipeDescriptors:
    org.openrewrite.featureflags.RemoveBooleanFlag:
      name: "org.openrewrite.featureflags.RemoveBooleanFlag"
      description: "Replace method invocations for feature key with value, and simplify\
        \ constant if branch execution."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/removebooleanflag"
      options:
      - name: "featureKey"
        type: "String"
        required: true
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "replacementValue"
        type: "Boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.RemoveStringFlag:
      name: "org.openrewrite.featureflags.RemoveStringFlag"
      description: "Replace method invocations for feature key with value, and simplify\
        \ constant if branch execution."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/removestringflag"
      options:
      - name: "featureKey"
        type: "String"
        required: true
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "replacementValue"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.ff4j.RemoveCheck:
      name: "org.openrewrite.featureflags.ff4j.RemoveCheck"
      description: "Replace `check()` invocations for `featureKey` with `replacementValue`,\
        \ and simplify constant if branch execution."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/ff4j/removecheck"
      options:
      - name: "featureKey"
        type: "String"
        required: true
      - name: "replacementValue"
        type: "Boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.ff4j.search.FindFeatureFlag:
      name: "org.openrewrite.featureflags.ff4j.search.FindFeatureFlag"
      description: "Find a FF4j feature flag."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/ff4j/search/findfeatureflag"
      options:
      - name: "featureKey"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.launchdarkly.ChangeVariationDefault:
      name: "org.openrewrite.featureflags.launchdarkly.ChangeVariationDefault"
      description: "Change the default value for `Variation` invocations for feature\
        \ key."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/launchdarkly/changevariationdefault"
      options:
      - name: "defaultValue"
        type: "String"
        required: true
      - name: "featureKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.launchdarkly.MigrateUserToContext:
      name: "org.openrewrite.featureflags.launchdarkly.MigrateUserToContext"
      description: "Migrate from `LDUser` and `LDUser.Builder` to `LDContext` and\
        \ `ContextBuilder`."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/launchdarkly/migrateusertocontext"
      options: []
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.launchdarkly.RemoveBoolVariation:
      name: "org.openrewrite.featureflags.launchdarkly.RemoveBoolVariation"
      description: "Replace `boolVariation` invocations for feature key with value,\
        \ and simplify constant if branch execution."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/launchdarkly/removeboolvariation"
      options:
      - name: "featureKey"
        type: "String"
        required: true
      - name: "replacementValue"
        type: "Boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.launchdarkly.RemoveStringVariation:
      name: "org.openrewrite.featureflags.launchdarkly.RemoveStringVariation"
      description: "Replace `boolVariation` invocations for feature key with value,\
        \ and simplify constant if branch execution."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/launchdarkly/removestringvariation"
      options:
      - name: "featureKey"
        type: "String"
        required: true
      - name: "replacementValue"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.launchdarkly.UpgradeLaunchDarkly6:
      name: "org.openrewrite.featureflags.launchdarkly.UpgradeLaunchDarkly6"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to LaunchDarkly 6.x."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/launchdarkly/upgradelaunchdarkly6"
      options: []
      isImperative: false
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.launchdarkly.UpgradeLaunchDarkly7:
      name: "org.openrewrite.featureflags.launchdarkly.UpgradeLaunchDarkly7"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to LaunchDarkly 7.x."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/launchdarkly/upgradelaunchdarkly7"
      options: []
      isImperative: false
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.launchdarkly.search.FindFeatureFlag:
      name: "org.openrewrite.featureflags.launchdarkly.search.FindFeatureFlag"
      description: "Find a LaunchDarkly feature flag."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/launchdarkly/search/findfeatureflag"
      options:
      - name: "featureKey"
        type: "String"
        required: false
      - name: "flagType"
        type: "FeatureFlagType"
        required: false
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.openfeature.RemoveGetBooleanValue:
      name: "org.openrewrite.featureflags.openfeature.RemoveGetBooleanValue"
      description: "Replace `getBooleanValue()` invocations for `featureKey` with\
        \ `replacementValue`, and simplify constant if branch execution."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/openfeature/removegetbooleanvalue"
      options:
      - name: "featureKey"
        type: "String"
        required: true
      - name: "replacementValue"
        type: "Boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.openfeature.search.FindFeatureFlag:
      name: "org.openrewrite.featureflags.openfeature.search.FindFeatureFlag"
      description: "Find an OpenFeature feature flag."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/openfeature/search/findfeatureflag"
      options:
      - name: "featureKey"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.search.FindFeatureFlag:
      name: "org.openrewrite.featureflags.search.FindFeatureFlag"
      description: "Find a feature flag matching method pattern."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/search/findfeatureflag"
      options:
      - name: "featureKey"
        type: "String"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.unleash.RemoveIsEnabled:
      name: "org.openrewrite.featureflags.unleash.RemoveIsEnabled"
      description: "Replace `isEnabled()` invocations for `featureKey` with `replacementValue`,\
        \ and simplify constant if branch execution."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/unleash/removeisenabled"
      options:
      - name: "featureKey"
        type: "String"
        required: true
      - name: "replacementValue"
        type: "Boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-feature-flags"
    org.openrewrite.featureflags.unleash.search.FindFeatureFlag:
      name: "org.openrewrite.featureflags.unleash.search.FindFeatureFlag"
      description: "Find an Unleash feature flag."
      docLink: "https://docs.openrewrite.org/recipes/featureflags/unleash/search/findfeatureflag"
      options:
      - name: "featureKey"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-feature-flags"
rewrite-github-actions:
  artifactId: "rewrite-github-actions"
  version: "3.3.0"
  markdownRecipeDescriptors:
    org.openrewrite.github.AddCronTrigger:
      name: "org.openrewrite.github.AddCronTrigger"
      description: "The `schedule` [event](https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events)\
        \ allows you to trigger a workflow at a scheduled time."
      docLink: "https://docs.openrewrite.org/recipes/github/addcrontrigger"
      options:
      - name: "cron"
        type: "String"
        required: true
      - name: "workflowFileMatcher"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.AddManualTrigger:
      name: "org.openrewrite.github.AddManualTrigger"
      description: "You can manually trigger workflow runs. To trigger specific workflows\
        \ in a repository, use the `workflow_dispatch` event."
      docLink: "https://docs.openrewrite.org/recipes/github/addmanualtrigger"
      options: []
      isImperative: false
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.AutoCancelInProgressWorkflow:
      name: "org.openrewrite.github.AutoCancelInProgressWorkflow"
      description: "When a workflow is already running and would be triggered again,\
        \ cancel the existing workflow. See [`styfle/cancel-workflow-action`](https://github.com/styfle/cancel-workflow-action)\
        \ for details."
      docLink: "https://docs.openrewrite.org/recipes/github/autocancelinprogressworkflow"
      options:
      - name: "accessToken"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.ChangeAction:
      name: "org.openrewrite.github.ChangeAction"
      description: "Change a GitHub Action in any `.github/workflows/*.yml` file."
      docLink: "https://docs.openrewrite.org/recipes/github/changeaction"
      options:
      - name: "newAction"
        type: "String"
        required: true
      - name: "newVersion"
        type: "String"
        required: true
      - name: "oldAction"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.ChangeActionVersion:
      name: "org.openrewrite.github.ChangeActionVersion"
      description: "Change the version of a GitHub Action in any `.github/workflows/*.yml`\
        \ file."
      docLink: "https://docs.openrewrite.org/recipes/github/changeactionversion"
      options:
      - name: "action"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.ChangeDependabotScheduleInterval:
      name: "org.openrewrite.github.ChangeDependabotScheduleInterval"
      description: "Change the schedule interval for a given package-ecosystem in\
        \ a `dependabot.yml` configuration file. [The available configuration options\
        \ for dependabot are listed on GitHub](https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/configuration-options-for-dependency-updates)."
      docLink: "https://docs.openrewrite.org/recipes/github/changedependabotscheduleinterval"
      options:
      - name: "interval"
        type: "String"
        required: true
      - name: "packageEcosystem"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.DependabotCheckForGithubActionsUpdatesDaily:
      name: "org.openrewrite.github.DependabotCheckForGithubActionsUpdatesDaily"
      description: "Set dependabot to check for github-actions updates daily."
      docLink: "https://docs.openrewrite.org/recipes/github/dependabotcheckforgithubactionsupdatesdaily"
      options: []
      isImperative: false
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.DependabotCheckForGithubActionsUpdatesWeekly:
      name: "org.openrewrite.github.DependabotCheckForGithubActionsUpdatesWeekly"
      description: "Set dependabot to check for github-actions updates weekly."
      docLink: "https://docs.openrewrite.org/recipes/github/dependabotcheckforgithubactionsupdatesweekly"
      options: []
      isImperative: false
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.FindGitHubActionSecretReferences:
      name: "org.openrewrite.github.FindGitHubActionSecretReferences"
      description: "Help identify and inventory your GitHub secrets that are being\
        \ used in GitHub actions."
      docLink: "https://docs.openrewrite.org/recipes/github/findgithubactionsecretreferences"
      options: []
      isImperative: false
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.FindMissingTimeout:
      name: "org.openrewrite.github.FindMissingTimeout"
      description: "Find GitHub Actions jobs missing a timeout."
      docLink: "https://docs.openrewrite.org/recipes/github/findmissingtimeout"
      options: []
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.PreferSecretsInheritWorkflow:
      name: "org.openrewrite.github.PreferSecretsInheritWorkflow"
      description: "Pass all secrets to a reusable workflow using `secrets: inherit`.\
        \ See [Simplify using secrets with reusable workflows](https://github.blog/changelog/2022-05-03-github-actions-simplify-using-secrets-with-reusable-workflows/)\
        \ for details."
      docLink: "https://docs.openrewrite.org/recipes/github/prefersecretsinheritworkflow"
      options: []
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.PreferTemurinDistributions:
      name: "org.openrewrite.github.PreferTemurinDistributions"
      description: "[Host runners](https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resources/)\
        \ include Temurin by default as part of the (hosted tool cache)(https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#hosted-tool-cache).Using\
        \ Temurin speeds up builds as there is no need to download and configure the\
        \ Java SDK with every build."
      docLink: "https://docs.openrewrite.org/recipes/github/prefertemurindistributions"
      options: []
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.RemoveAllCronTriggers:
      name: "org.openrewrite.github.RemoveAllCronTriggers"
      description: "Removes all cron triggers from a workflow."
      docLink: "https://docs.openrewrite.org/recipes/github/removeallcrontriggers"
      options: []
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.ReplaceRunners:
      name: "org.openrewrite.github.ReplaceRunners"
      description: "Replaces the runners of a given job."
      docLink: "https://docs.openrewrite.org/recipes/github/replacerunners"
      options:
      - name: "jobName"
        type: "String"
        required: true
      - name: "runners"
        type: "List"
        required: true
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.SetupJavaAdoptOpenJDKToTemurin:
      name: "org.openrewrite.github.SetupJavaAdoptOpenJDKToTemurin"
      description: "Adopt OpenJDK got moved to Eclipse Temurin and won't be updated\
        \ anymore. It is highly recommended to migrate workflows from adopt to temurin\
        \ to keep receiving software and security updates. See more details in the\
        \ [Good-bye AdoptOpenJDK post](https://blog.adoptopenjdk.net/2021/08/goodbye-adoptopenjdk-hello-adoptium/)."
      docLink: "https://docs.openrewrite.org/recipes/github/setupjavaadoptopenjdktotemurin"
      options: []
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.SetupJavaAdoptOpenj9ToSemeru:
      name: "org.openrewrite.github.SetupJavaAdoptOpenj9ToSemeru"
      description: "Adopt OpenJDK got moved to Eclipse Temurin and won't be updated\
        \ anymore. It is highly recommended to migrate workflows from adopt-openj9\
        \ to IBM semeru to keep receiving software and security updates. See more\
        \ details in the [Good-bye AdoptOpenJDK post](https://blog.adoptopenjdk.net/2021/08/goodbye-adoptopenjdk-hello-adoptium/)."
      docLink: "https://docs.openrewrite.org/recipes/github/setupjavaadoptopenj9tosemeru"
      options: []
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.SetupJavaCaching:
      name: "org.openrewrite.github.SetupJavaCaching"
      description: "GitHub actions supports dependency caching on Maven and Gradle\
        \ projects. See the [blog post](https://github.blog/changelog/2021-08-30-github-actions-setup-java-now-supports-dependency-caching/)."
      docLink: "https://docs.openrewrite.org/recipes/github/setupjavacaching"
      options: []
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.SetupJavaUpgradeJavaVersion:
      name: "org.openrewrite.github.SetupJavaUpgradeJavaVersion"
      description: "Update the Java version used by `actions/setup-java` if it is\
        \ below the expected version number."
      docLink: "https://docs.openrewrite.org/recipes/github/setupjavaupgradejavaversion"
      options:
      - name: "minimumJavaMajorVersion"
        type: "Integer"
        required: false
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.UpgradeSlackNotificationVersion2:
      name: "org.openrewrite.github.UpgradeSlackNotificationVersion2"
      description: "Update the Slack GitHub Action to use version 2.0."
      docLink: "https://docs.openrewrite.org/recipes/github/upgradeslacknotificationversion2"
      options: []
      isImperative: true
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.gradle.RenameGradleBuildActionToSetupGradle:
      name: "org.openrewrite.github.gradle.RenameGradleBuildActionToSetupGradle"
      description: "Rename the deprecated `gradle/gradle-build-action` to `gradle/actions/setup-gradle@v3`."
      docLink: "https://docs.openrewrite.org/recipes/github/gradle/renamegradlebuildactiontosetupgradle"
      options: []
      isImperative: false
      artifactId: "rewrite-github-actions"
    org.openrewrite.github.gradle.RenameWrapperValidationAction:
      name: "org.openrewrite.github.gradle.RenameWrapperValidationAction"
      description: "Rename the deprecated `gradle/wrapper-validation-action` to `gradle/actions/wrapper-validation@v3`."
      docLink: "https://docs.openrewrite.org/recipes/github/gradle/renamewrappervalidationaction"
      options: []
      isImperative: false
      artifactId: "rewrite-github-actions"
rewrite-gitlab:
  artifactId: "rewrite-gitlab"
  version: "0.9.0"
  markdownRecipeDescriptors:
    org.openrewrite.gitlab.AddComponent:
      name: "org.openrewrite.gitlab.AddComponent"
      description: "Add a GitLab component to an existing list, or add a new list\
        \ where none was present."
      docLink: "https://docs.openrewrite.org/recipes/gitlab/addcomponent"
      options:
      - name: "inputs"
        type: "List"
        required: true
      - name: "newComponent"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gitlab"
    org.openrewrite.gitlab.AddStages:
      name: "org.openrewrite.gitlab.AddStages"
      description: "Add or Update the set of stages defined in `.gitlab-ci.yml`."
      docLink: "https://docs.openrewrite.org/recipes/gitlab/addstages"
      options:
      - name: "acceptTheirs"
        type: "Boolean"
        required: false
      - name: "stages"
        type: "List"
        required: true
      isImperative: true
      artifactId: "rewrite-gitlab"
    org.openrewrite.gitlab.AddTemplate:
      name: "org.openrewrite.gitlab.AddTemplate"
      description: "Add a GitLab template to an existing list, or add a new list where\
        \ none was present."
      docLink: "https://docs.openrewrite.org/recipes/gitlab/addtemplate"
      options:
      - name: "newTemplate"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gitlab"
    org.openrewrite.gitlab.ChangeTemplate:
      name: "org.openrewrite.gitlab.ChangeTemplate"
      description: "Change a GitLab template in use."
      docLink: "https://docs.openrewrite.org/recipes/gitlab/changetemplate"
      options:
      - name: "newTemplate"
        type: "String"
        required: true
      - name: "oldTemplate"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gitlab"
    org.openrewrite.gitlab.RemoveTemplate:
      name: "org.openrewrite.gitlab.RemoveTemplate"
      description: "Remove a GitLab template from use."
      docLink: "https://docs.openrewrite.org/recipes/gitlab/removetemplate"
      options:
      - name: "oldTemplate"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gitlab"
    org.openrewrite.gitlab.search.FindComponent:
      name: "org.openrewrite.gitlab.search.FindComponent"
      description: "Find a GitLab Component in use."
      docLink: "https://docs.openrewrite.org/recipes/gitlab/search/findcomponent"
      options:
      - name: "component"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gitlab"
    org.openrewrite.gitlab.search.FindTemplate:
      name: "org.openrewrite.gitlab.search.FindTemplate"
      description: "Find a GitLab Template in use."
      docLink: "https://docs.openrewrite.org/recipes/gitlab/search/findtemplate"
      options:
      - name: "template"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gitlab"
rewrite-gradle:
  artifactId: "rewrite-gradle"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.gradle.AddDependency:
      name: "org.openrewrite.gradle.AddDependency"
      description: "Add a gradle dependency to a `build.gradle` file in the correct\
        \ configuration based on where it is used."
      docLink: "https://docs.openrewrite.org/recipes/gradle/adddependency"
      options:
      - name: "acceptTransitive"
        type: "Boolean"
        required: false
      - name: "artifactId"
        type: "String"
        required: true
      - name: "classifier"
        type: "String"
        required: false
      - name: "configuration"
        type: "String"
        required: false
      - name: "extension"
        type: "String"
        required: false
      - name: "familyPattern"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "onlyIfUsing"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.AddJUnitPlatformLauncher:
      name: "org.openrewrite.gradle.AddJUnitPlatformLauncher"
      description: "Add the JUnit Platform Launcher to the buildscript dependencies."
      docLink: "https://docs.openrewrite.org/recipes/gradle/addjunitplatformlauncher"
      options: []
      isImperative: false
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.AddProperty:
      name: "org.openrewrite.gradle.AddProperty"
      description: "Add a property to the `gradle.properties` file."
      docLink: "https://docs.openrewrite.org/recipes/gradle/addproperty"
      options:
      - name: "filePattern"
        type: "String"
        required: true
      - name: "key"
        type: "String"
        required: true
      - name: "overwrite"
        type: "Boolean"
        required: true
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.ChangeDependency:
      name: "org.openrewrite.gradle.ChangeDependency"
      description: "Change a Gradle dependency coordinates. The `newGroupId` or `newArtifactId`\
        \ **MUST** be different from before."
      docLink: "https://docs.openrewrite.org/recipes/gradle/changedependency"
      options:
      - name: "newArtifactId"
        type: "String"
        required: false
      - name: "newGroupId"
        type: "String"
        required: false
      - name: "newVersion"
        type: "String"
        required: false
      - name: "oldArtifactId"
        type: "String"
        required: true
      - name: "oldGroupId"
        type: "String"
        required: true
      - name: "overrideManagedVersion"
        type: "Boolean"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.ChangeDependencyArtifactId:
      name: "org.openrewrite.gradle.ChangeDependencyArtifactId"
      description: "Change the artifact of a specified Gradle dependency."
      docLink: "https://docs.openrewrite.org/recipes/gradle/changedependencyartifactid"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "newArtifactId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.ChangeDependencyClassifier:
      name: "org.openrewrite.gradle.ChangeDependencyClassifier"
      description: "Changes classifier of an existing dependency declared in `build.gradle`\
        \ files."
      docLink: "https://docs.openrewrite.org/recipes/gradle/changedependencyclassifier"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "newClassifier"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.ChangeDependencyConfiguration:
      name: "org.openrewrite.gradle.ChangeDependencyConfiguration"
      description: "A common example is the need to change `compile` to `api`/`implementation`\
        \ as [part of the move](https://docs.gradle.org/current/userguide/upgrading_version_6.html)\
        \ to Gradle 7.x and later."
      docLink: "https://docs.openrewrite.org/recipes/gradle/changedependencyconfiguration"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "newConfiguration"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.ChangeDependencyExtension:
      name: "org.openrewrite.gradle.ChangeDependencyExtension"
      description: "Changes extension of an existing dependency declared in `build.gradle`\
        \ files."
      docLink: "https://docs.openrewrite.org/recipes/gradle/changedependencyextension"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "newExtension"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.ChangeDependencyGroupId:
      name: "org.openrewrite.gradle.ChangeDependencyGroupId"
      description: "Change the group of a specified Gradle dependency."
      docLink: "https://docs.openrewrite.org/recipes/gradle/changedependencygroupid"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "newGroupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.ChangeExtraProperty:
      name: "org.openrewrite.gradle.ChangeExtraProperty"
      description: "Gradle's [ExtraPropertiesExtension](https://docs.gradle.org/current/dsl/org.gradle.api.plugins.ExtraPropertiesExtension.html)\
        \ is a commonly used mechanism for setting arbitrary key/value pairs on a\
        \ project. This recipe will change the value of a property with the given\
        \ key name if that key can be found. It assumes that the value being set is\
        \ a String literal. Does not add the value if it does not already exist."
      docLink: "https://docs.openrewrite.org/recipes/gradle/changeextraproperty"
      options:
      - name: "key"
        type: "String"
        required: true
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.DependencyConstraintToRule:
      name: "org.openrewrite.gradle.DependencyConstraintToRule"
      description: "Gradle [dependency constraints](https://docs.gradle.org/current/userguide/dependency_constraints.html#dependency-constraints)\
        \ are useful for managing the versions of transitive dependencies. Some plugins,\
        \ such as the Spring Dependency Management plugin, do not respect these constraints.\
        \ This recipe converts constraints into [resolution rules](https://docs.gradle.org/current/userguide/resolution_rules.html),\
        \ which can achieve similar effects to constraints but are harder for plugins\
        \ to ignore."
      docLink: "https://docs.openrewrite.org/recipes/gradle/dependencyconstrainttorule"
      options: []
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.DependencyUseMapNotation:
      name: "org.openrewrite.gradle.DependencyUseMapNotation"
      description: "In Gradle, dependencies can be expressed as a `String` like `\"\
        groupId:artifactId:version\"`, or equivalently as a `Map` like `group: 'groupId',\
        \ name: 'artifactId', version: 'version'`. This recipe replaces dependencies\
        \ represented as `Strings` with an equivalent dependency represented as a\
        \ `Map`."
      docLink: "https://docs.openrewrite.org/recipes/gradle/dependencyusemapnotation"
      options: []
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.DependencyUseStringNotation:
      name: "org.openrewrite.gradle.DependencyUseStringNotation"
      description: "In Gradle, dependencies can be expressed as a `String` like `\"\
        groupId:artifactId:version\"`, or equivalently as a `Map` like `group: 'groupId',\
        \ name: 'artifactId', version: 'version'`. This recipe replaces dependencies\
        \ represented as `Maps` with an equivalent dependency represented as a `String`."
      docLink: "https://docs.openrewrite.org/recipes/gradle/dependencyusestringnotation"
      options: []
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.EnableDevelocityBuildCache:
      name: "org.openrewrite.gradle.EnableDevelocityBuildCache"
      description: "Adds `buildCache` configuration to `develocity` where not yet\
        \ present."
      docLink: "https://docs.openrewrite.org/recipes/gradle/enabledevelocitybuildcache"
      options:
      - name: "remoteEnabled"
        type: "String"
        required: false
      - name: "remotePushEnabled"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.EnableGradleBuildCache:
      name: "org.openrewrite.gradle.EnableGradleBuildCache"
      description: "Enable the Gradle build cache. By enabling build cache the build\
        \ outputs are stored externally and fetched from the cache when it is determined\
        \ that those inputs have no changed, avoiding the expensive work of regenerating\
        \ them. See the [Gradle Build Cache](https://docs.gradle.org/current/userguide/build_cache.html)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/gradle/enablegradlebuildcache"
      options: []
      isImperative: false
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.EnableGradleParallelExecution:
      name: "org.openrewrite.gradle.EnableGradleParallelExecution"
      description: "Most builds consist of more than one project and some of those\
        \ projects are usually independent of one another. Yet Gradle will only run\
        \ one task at a time by default, regardless of the project structure. By using\
        \ the `--parallel` switch, you can force Gradle to execute tasks in parallel\
        \ as long as those tasks are in different projects. See the [Gradle performance\
        \ documentation](https://docs.gradle.org/current/userguide/performance.html#parallel_execution)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/gradle/enablegradleparallelexecution"
      options: []
      isImperative: false
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.MigrateToGradle5:
      name: "org.openrewrite.gradle.MigrateToGradle5"
      description: "Migrate to version 5.x. See the Gradle upgrade guide from [version\
        \ 4.x to 5.0](https://docs.gradle.org/current/userguide/upgrading_version_4.html)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/gradle/migratetogradle5"
      options: []
      isImperative: false
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.MigrateToGradle6:
      name: "org.openrewrite.gradle.MigrateToGradle6"
      description: "Migrate to version 6.x. See the Gradle upgrade guide from [version\
        \ 5.x to 6.0](https://docs.gradle.org/current/userguide/upgrading_version_5.html)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/gradle/migratetogradle6"
      options: []
      isImperative: false
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.MigrateToGradle7:
      name: "org.openrewrite.gradle.MigrateToGradle7"
      description: "Migrate to version 7.x. See the Gradle upgrade guide from [version\
        \ 6.x to 7.0](https://docs.gradle.org/current/userguide/upgrading_version_6.html)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/gradle/migratetogradle7"
      options: []
      isImperative: false
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.MigrateToGradle8:
      name: "org.openrewrite.gradle.MigrateToGradle8"
      description: "Migrate to version 8.x. See the Gradle upgrade guide from [version\
        \ 7.x to 8.0](https://docs.gradle.org/current/userguide/upgrading_version_7.html)\
        \ and [version 8.x to latest](https://docs.gradle.org/current/userguide/upgrading_version_8.html)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/gradle/migratetogradle8"
      options: []
      isImperative: false
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.RemoveDependency:
      name: "org.openrewrite.gradle.RemoveDependency"
      description: "Removes a single dependency from the dependencies section of the\
        \ `build.gradle`."
      docLink: "https://docs.openrewrite.org/recipes/gradle/removedependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.RemoveEnableFeaturePreview:
      name: "org.openrewrite.gradle.RemoveEnableFeaturePreview"
      description: "Remove an enabled Gradle preview feature from `settings.gradle`."
      docLink: "https://docs.openrewrite.org/recipes/gradle/removeenablefeaturepreview"
      options:
      - name: "previewFeatureName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.RemoveRedundantDependencyVersions:
      name: "org.openrewrite.gradle.RemoveRedundantDependencyVersions"
      description: "Remove explicitly-specified dependency versions that are managed\
        \ by a Gradle `platform`/`enforcedPlatform`."
      docLink: "https://docs.openrewrite.org/recipes/gradle/removeredundantdependencyversions"
      options:
      - name: "artifactPattern"
        type: "String"
        required: false
      - name: "except"
        type: "List"
        required: false
      - name: "groupPattern"
        type: "String"
        required: false
      - name: "onlyIfManagedVersionIs"
        type: "Comparator"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.RemoveRepository:
      name: "org.openrewrite.gradle.RemoveRepository"
      description: "Removes a repository from Gradle build scripts. Named repositories\
        \ include \"jcenter\", \"mavenCentral\", \"mavenLocal\", and \"google\"."
      docLink: "https://docs.openrewrite.org/recipes/gradle/removerepository"
      options:
      - name: "repository"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.UpdateGradleWrapper:
      name: "org.openrewrite.gradle.UpdateGradleWrapper"
      description: "Update the version of Gradle used in an existing Gradle wrapper.\
        \ Queries services.gradle.org to determine the available releases, but prefers\
        \ the artifact repository URL which already exists within the wrapper properties\
        \ file. If your artifact repository does not contain the same Gradle distributions\
        \ as services.gradle.org, then the recipe may suggest a version which is not\
        \ available in your artifact repository."
      docLink: "https://docs.openrewrite.org/recipes/gradle/updategradlewrapper"
      options:
      - name: "addIfMissing"
        type: "Boolean"
        required: false
      - name: "distribution"
        type: "String"
        required: false
      - name: "distributionChecksum"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: false
      - name: "wrapperUri"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.UpdateJavaCompatibility:
      name: "org.openrewrite.gradle.UpdateJavaCompatibility"
      description: "Find and updates the Java compatibility for the Gradle project."
      docLink: "https://docs.openrewrite.org/recipes/gradle/updatejavacompatibility"
      options:
      - name: "addIfMissing"
        type: "Boolean"
        required: false
      - name: "allowDowngrade"
        type: "Boolean"
        required: false
      - name: "compatibilityType"
        type: "CompatibilityType"
        required: false
      - name: "declarationStyle"
        type: "DeclarationStyle"
        required: false
      - name: "version"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.UpgradeDependencyVersion:
      name: "org.openrewrite.gradle.UpgradeDependencyVersion"
      description: "Upgrade the version of a dependency in a build.gradle file. Supports\
        \ updating dependency declarations of various forms:\n* `String` notation:\
        \ `\"group:artifact:version\"` \n* `Map` notation: `group: 'group', name:\
        \ 'artifact', version: 'version'`\nCan update version numbers which are defined\
        \ earlier in the same file in variable declarations."
      docLink: "https://docs.openrewrite.org/recipes/gradle/upgradedependencyversion"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "newVersion"
        type: "String"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.UpgradeTransitiveDependencyVersion:
      name: "org.openrewrite.gradle.UpgradeTransitiveDependencyVersion"
      description: "Upgrades the version of a transitive dependency in a Gradle build\
        \ file. There are many ways to do this in Gradle, so the mechanism for upgrading\
        \ a transitive dependency must be considered carefully depending on your style\
        \ of dependency management."
      docLink: "https://docs.openrewrite.org/recipes/gradle/upgradetransitivedependencyversion"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "because"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "onlyForConfigurations"
        type: "List"
        required: false
      - name: "version"
        type: "String"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.AddBuildPlugin:
      name: "org.openrewrite.gradle.plugins.AddBuildPlugin"
      description: "Add a build plugin to a Gradle build file's `plugins` block."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/addbuildplugin"
      options:
      - name: "acceptTransitive"
        type: "Boolean"
        required: false
      - name: "apply"
        type: "Boolean"
        required: false
      - name: "pluginId"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.AddDevelocityGradlePlugin:
      name: "org.openrewrite.gradle.plugins.AddDevelocityGradlePlugin"
      description: "Add the Develocity Gradle plugin to settings.gradle files."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/adddevelocitygradleplugin"
      options:
      - name: "allowUntrustedServer"
        type: "Boolean"
        required: false
      - name: "captureTaskInputFiles"
        type: "Boolean"
        required: false
      - name: "publishCriteria"
        type: "PublishCriteria"
        required: false
      - name: "server"
        type: "String"
        required: false
      - name: "uploadInBackground"
        type: "Boolean"
        required: false
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.AddSettingsPlugin:
      name: "org.openrewrite.gradle.plugins.AddSettingsPlugin"
      description: "Add plugin to Gradle settings file `plugins` block by id."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/addsettingsplugin"
      options:
      - name: "acceptTransitive"
        type: "Boolean"
        required: false
      - name: "apply"
        type: "Boolean"
        required: false
      - name: "pluginId"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.AddSettingsPluginRepository:
      name: "org.openrewrite.gradle.plugins.AddSettingsPluginRepository"
      description: "Add a Gradle settings repository to `settings.gradle(.kts)`."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/addsettingspluginrepository"
      options:
      - name: "type"
        type: "String"
        required: true
      - name: "url"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.ChangePlugin:
      name: "org.openrewrite.gradle.plugins.ChangePlugin"
      description: "Changes the selected Gradle plugin to the new plugin."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/changeplugin"
      options:
      - name: "newPluginId"
        type: "String"
        required: true
      - name: "newVersion"
        type: "String"
        required: false
      - name: "pluginId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.ChangePluginVersion:
      name: "org.openrewrite.gradle.plugins.ChangePluginVersion"
      description: "Change a Gradle plugin by id to a later version."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/changepluginversion"
      options:
      - name: "newVersion"
        type: "String"
        required: false
      - name: "pluginIdPattern"
        type: "String"
        required: true
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.MigrateGradleEnterpriseToDevelocity:
      name: "org.openrewrite.gradle.plugins.MigrateGradleEnterpriseToDevelocity"
      description: "Migrate from the Gradle Enterprise Gradle plugin to the Develocity\
        \ Gradle plugin."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/migrategradleenterprisetodevelocity"
      options:
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.RemoveBuildPlugin:
      name: "org.openrewrite.gradle.plugins.RemoveBuildPlugin"
      description: "Remove plugin from Gradle `plugins` block by its id. Does not\
        \ remove plugins from the `buildscript` block."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/removebuildplugin"
      options:
      - name: "pluginId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.RemoveDevelocity:
      name: "org.openrewrite.gradle.plugins.RemoveDevelocity"
      description: "Remove the Develocity plugin and configuration from the Gradle\
        \ build and settings files."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/removedevelocity"
      options: []
      isImperative: false
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.RemoveDevelocityConfiguration:
      name: "org.openrewrite.gradle.plugins.RemoveDevelocityConfiguration"
      description: "Remove Develocity configuration from a Gradle build."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/removedevelocityconfiguration"
      options: []
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.RemoveSettingsPlugin:
      name: "org.openrewrite.gradle.plugins.RemoveSettingsPlugin"
      description: "Remove plugin from Gradle settings file `plugins` block by id."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/removesettingsplugin"
      options:
      - name: "pluginId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.plugins.UpgradePluginVersion:
      name: "org.openrewrite.gradle.plugins.UpgradePluginVersion"
      description: "Update a Gradle plugin by id to a later version."
      docLink: "https://docs.openrewrite.org/recipes/gradle/plugins/upgradepluginversion"
      options:
      - name: "newVersion"
        type: "String"
        required: false
      - name: "pluginIdPattern"
        type: "String"
        required: true
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.search.DependencyInsight:
      name: "org.openrewrite.gradle.search.DependencyInsight"
      description: "Find direct and transitive dependencies matching a group, artifact,\
        \ and optionally a configuration name. Results include dependencies that either\
        \ directly match or transitively include a matching dependency."
      docLink: "https://docs.openrewrite.org/recipes/gradle/search/dependencyinsight"
      options:
      - name: "artifactIdPattern"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "groupIdPattern"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.search.FindDependency:
      name: "org.openrewrite.gradle.search.FindDependency"
      description: "Finds dependencies declared in `build.gradle` files. See the [reference](https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_configurations_graph)\
        \ on Gradle configurations or the diagram below for a description of what\
        \ configuration to use. A project's compile and runtime classpath is based\
        \ on these configurations.\n\n<img alt=\"Gradle compile classpath\" src=\"\
        https://docs.gradle.org/current/userguide/img/java-library-ignore-deprecated-main.png\"\
        \ width=\"200px\"/>\n A project's test classpath is based on these configurations.\n\
        \n<img alt=\"Gradle test classpath\" src=\"https://docs.gradle.org/current/userguide/img/java-library-ignore-deprecated-test.png\"\
        \ width=\"200px\"/>."
      docLink: "https://docs.openrewrite.org/recipes/gradle/search/finddependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.search.FindDependencyHandler:
      name: "org.openrewrite.gradle.search.FindDependencyHandler"
      description: "Find the dependency handler containing any number of dependency\
        \ definitions."
      docLink: "https://docs.openrewrite.org/recipes/gradle/search/finddependencyhandler"
      options: []
      isImperative: false
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.search.FindGradleProject:
      name: "org.openrewrite.gradle.search.FindGradleProject"
      description: "Gradle projects are those with `build.gradle` or `build.gradle.kts`\
        \ files."
      docLink: "https://docs.openrewrite.org/recipes/gradle/search/findgradleproject"
      options:
      - name: "searchCriteria"
        type: "SearchCriteria"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.search.FindGradleWrapper:
      name: "org.openrewrite.gradle.search.FindGradleWrapper"
      description: "Find Gradle wrappers."
      docLink: "https://docs.openrewrite.org/recipes/gradle/search/findgradlewrapper"
      options:
      - name: "distribution"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.search.FindJVMTestSuites:
      name: "org.openrewrite.gradle.search.FindJVMTestSuites"
      description: "Find Gradle JVMTestSuite plugin configurations and produce a data\
        \ table."
      docLink: "https://docs.openrewrite.org/recipes/gradle/search/findjvmtestsuites"
      options:
      - name: "definesDependencies"
        type: "Boolean"
        required: true
      - name: "insertRows"
        type: "Boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.search.FindPlugins:
      name: "org.openrewrite.gradle.search.FindPlugins"
      description: "Find a Gradle plugin by id and/or class name. For best results\
        \ both should be specified, as one cannot automatically be used to infer the\
        \ other."
      docLink: "https://docs.openrewrite.org/recipes/gradle/search/findplugins"
      options:
      - name: "pluginClass"
        type: "String"
        required: false
      - name: "pluginId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.search.FindRepository:
      name: "org.openrewrite.gradle.search.FindRepository"
      description: "Find a Gradle repository by url."
      docLink: "https://docs.openrewrite.org/recipes/gradle/search/findrepository"
      options:
      - name: "purpose"
        type: "Purpose"
        required: false
      - name: "type"
        type: "String"
        required: false
      - name: "url"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-gradle"
    org.openrewrite.gradle.security.UseHttpsForRepositories:
      name: "org.openrewrite.gradle.security.UseHttpsForRepositories"
      description: "Use HTTPS for repository URLs."
      docLink: "https://docs.openrewrite.org/recipes/gradle/security/usehttpsforrepositories"
      options: []
      isImperative: true
      artifactId: "rewrite-gradle"
rewrite-groovy:
  artifactId: "rewrite-groovy"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.groovy.format.AutoFormat:
      name: "org.openrewrite.groovy.format.AutoFormat"
      description: "Format Groovy code using a standard comprehensive set of Groovy\
        \ formatting recipes."
      docLink: "https://docs.openrewrite.org/recipes/groovy/format/autoformat"
      options: []
      isImperative: true
      artifactId: "rewrite-groovy"
    org.openrewrite.groovy.format.GStringCurlyBraces:
      name: "org.openrewrite.groovy.format.GStringCurlyBraces"
      description: "In Groovy [GStrings](https://docs.groovy-lang.org/latest/html/api/groovy/lang/GString.html),\
        \ curly braces are optional for single variable expressions. This recipe adds\
        \ them, so that the expression is always surrounded by curly braces."
      docLink: "https://docs.openrewrite.org/recipes/groovy/format/gstringcurlybraces"
      options: []
      isImperative: true
      artifactId: "rewrite-groovy"
    org.openrewrite.groovy.format.OmitParenthesesForLastArgumentLambda:
      name: "org.openrewrite.groovy.format.OmitParenthesesForLastArgumentLambda"
      description: "Groovy allows a shorthand syntax that allows a closure to be placed\
        \ outside of parentheses."
      docLink: "https://docs.openrewrite.org/recipes/groovy/format/omitparenthesesforlastargumentlambda"
      options: []
      isImperative: true
      artifactId: "rewrite-groovy"
    org.openrewrite.groovy.format.OmitParenthesesFormat:
      name: "org.openrewrite.groovy.format.OmitParenthesesFormat"
      description: "Omit parentheses for last argument lambdas in Groovy code."
      docLink: "https://docs.openrewrite.org/recipes/groovy/format/omitparenthesesformat"
      options: []
      isImperative: true
      artifactId: "rewrite-groovy"
rewrite-hcl:
  artifactId: "rewrite-hcl"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.hcl.DeleteContent:
      name: "org.openrewrite.hcl.DeleteContent"
      description: "Delete HCL content by path."
      docLink: "https://docs.openrewrite.org/recipes/hcl/deletecontent"
      options:
      - name: "contentPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-hcl"
    org.openrewrite.hcl.MoveContentToFile:
      name: "org.openrewrite.hcl.MoveContentToFile"
      description: "Move content to another HCL file, deleting it in the original\
        \ file."
      docLink: "https://docs.openrewrite.org/recipes/hcl/movecontenttofile"
      options:
      - name: "contentPath"
        type: "String"
        required: true
      - name: "destinationPath"
        type: "String"
        required: true
      - name: "fromPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-hcl"
    org.openrewrite.hcl.ReplaceLegacyAttributeIndexSyntax:
      name: "org.openrewrite.hcl.ReplaceLegacyAttributeIndexSyntax"
      description: "Replace legacy attribute index syntax (`.0`) with the new syntax\
        \ (`[0]`)."
      docLink: "https://docs.openrewrite.org/recipes/hcl/replacelegacyattributeindexsyntax"
      options: []
      isImperative: true
      artifactId: "rewrite-hcl"
    org.openrewrite.hcl.format.AutoFormat:
      name: "org.openrewrite.hcl.format.AutoFormat"
      description: "Format HCL code using a standard comprehensive set of HCL formatting\
        \ recipes."
      docLink: "https://docs.openrewrite.org/recipes/hcl/format/autoformat"
      options: []
      isImperative: true
      artifactId: "rewrite-hcl"
    org.openrewrite.hcl.format.BlankLines:
      name: "org.openrewrite.hcl.format.BlankLines"
      description: "Add and/or remove blank lines."
      docLink: "https://docs.openrewrite.org/recipes/hcl/format/blanklines"
      options: []
      isImperative: true
      artifactId: "rewrite-hcl"
    org.openrewrite.hcl.format.NormalizeFormat:
      name: "org.openrewrite.hcl.format.NormalizeFormat"
      description: "Move whitespace to the outermost LST element possible."
      docLink: "https://docs.openrewrite.org/recipes/hcl/format/normalizeformat"
      options: []
      isImperative: true
      artifactId: "rewrite-hcl"
    org.openrewrite.hcl.format.RemoveTrailingWhitespace:
      name: "org.openrewrite.hcl.format.RemoveTrailingWhitespace"
      description: "Remove any extra trailing whitespace from the end of each line."
      docLink: "https://docs.openrewrite.org/recipes/hcl/format/removetrailingwhitespace"
      options: []
      isImperative: true
      artifactId: "rewrite-hcl"
    org.openrewrite.hcl.format.Spaces:
      name: "org.openrewrite.hcl.format.Spaces"
      description: "Format whitespace in HCL code."
      docLink: "https://docs.openrewrite.org/recipes/hcl/format/spaces"
      options: []
      isImperative: true
      artifactId: "rewrite-hcl"
    org.openrewrite.hcl.format.TabsAndIndents:
      name: "org.openrewrite.hcl.format.TabsAndIndents"
      description: "Format tabs and indents in HCL code."
      docLink: "https://docs.openrewrite.org/recipes/hcl/format/tabsandindents"
      options: []
      isImperative: true
      artifactId: "rewrite-hcl"
    org.openrewrite.hcl.search.FindAndReplaceLiteral:
      name: "org.openrewrite.hcl.search.FindAndReplaceLiteral"
      description: "Find and replace literal values in HCL files. This recipe parses\
        \ the source files on which it runs as HCL, meaning you can execute HCL language-specific\
        \ recipes before and after this recipe in a single recipe run."
      docLink: "https://docs.openrewrite.org/recipes/hcl/search/findandreplaceliteral"
      options:
      - name: "caseSensitive"
        type: "Boolean"
        required: false
      - name: "find"
        type: "String"
        required: true
      - name: "regex"
        type: "Boolean"
        required: false
      - name: "replace"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-hcl"
    org.openrewrite.hcl.search.FindContent:
      name: "org.openrewrite.hcl.search.FindContent"
      description: "Find HCL content by path."
      docLink: "https://docs.openrewrite.org/recipes/hcl/search/findcontent"
      options:
      - name: "contentPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-hcl"
rewrite-hibernate:
  artifactId: "rewrite-hibernate"
  version: "0.2.1"
  markdownRecipeDescriptors:
    io.moderne.hibernate.MigrateToHibernate66:
      name: "io.moderne.hibernate.MigrateToHibernate66"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Hibernate 6.5.x."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate66"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    io.moderne.hibernate.search.FindJPQLDefinitions:
      name: "io.moderne.hibernate.search.FindJPQLDefinitions"
      description: "Find Java Persistence Query Language definitions in the codebase."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/search/findjpqldefinitions"
      options: []
      isImperative: true
      artifactId: "rewrite-hibernate"
    io.moderne.hibernate.update66.FixConflictingClassTypeAnnotations:
      name: "io.moderne.hibernate.update66.FixConflictingClassTypeAnnotations"
      description: "Since Hibernate 6.6 a mapped class can have *either* `@MappedSuperclass`\
        \ or `@Embeddable`, or `@Entity`. This recipe removes `@Entity` from classes\
        \ annotated with `@MappedSuperclass` or `@Embeddable`.For the moment die combination\
        \ of `@MappedSuperclass` or `@Embeddable` is advised to migrate to [Single\
        \ Table Inheritance](https://docs.jboss.org/hibernate/orm/6.6/userguide/html_single/Hibernate_User_Guide.html#entity-inheritance-single-table)but\
        \ still accepted and therefore stays."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/update66/fixconflictingclasstypeannotations"
      options: []
      isImperative: true
      artifactId: "rewrite-hibernate"
    io.moderne.hibernate.update66.RemoveTableFromInheritedEntity:
      name: "io.moderne.hibernate.update66.RemoveTableFromInheritedEntity"
      description: "For Single Table Inherited Entities Hibernate ignores the `@Table`\
        \ annotation on child entities. From Version 6.6 it is considered an error."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/update66/removetablefrominheritedentity"
      options: []
      isImperative: true
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.EmptyInterceptorToInterface:
      name: "org.openrewrite.hibernate.EmptyInterceptorToInterface"
      description: "In Hibernate 6.0 the `Interceptor` interface received default\
        \ implementations therefore the NOOP implementation that could be extended\
        \ was no longer needed. This recipe migrates 5.x `Interceptor#onPrepareStatement(String)`\
        \ to 6.0 `StatementInspector#inspect()`."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/emptyinterceptortointerface"
      options: []
      isImperative: true
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateBooleanMappings:
      name: "org.openrewrite.hibernate.MigrateBooleanMappings"
      description: "Replaces type mapping of booleans with appropriate attribute converters."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratebooleanmappings"
      options: []
      isImperative: true
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateResultCheckStyleToExpectation:
      name: "org.openrewrite.hibernate.MigrateResultCheckStyleToExpectation"
      description: "Will migrate the usage of `org.hibernate.annotations.ResultCheckStyle`\
        \ to `org.hibernate.jdbc.Expectation` in `@SQLInsert`, `@SqlUpdate`, `@SqlDelete`\
        \ and `@SqlDeleteAll` annotations."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migrateresultcheckstyletoexpectation"
      options: []
      isImperative: true
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateToHibernate60:
      name: "org.openrewrite.hibernate.MigrateToHibernate60"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Hibernate 6.0.x. The hibernate dependencies will be updated to use the\
        \ new `org.hibernate.orm` group ID and the recipe will make changes necessary\
        \ to use Hibernate with Jakarta EE 9.0."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate60"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateToHibernate61:
      name: "org.openrewrite.hibernate.MigrateToHibernate61"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Hibernate 6.1.x. The hibernate dependencies will   be updated to use\
        \ the new org.hibernate.orm group ID and the recipe will make changes necessary\
        \ to use Hibernate with Jakarta EE 9.0."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate61"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateToHibernate62:
      name: "org.openrewrite.hibernate.MigrateToHibernate62"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Hibernate 6.2.x."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate62"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateToHibernate63:
      name: "org.openrewrite.hibernate.MigrateToHibernate63"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Hibernate 6.3.x."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate63"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateToHibernate64:
      name: "org.openrewrite.hibernate.MigrateToHibernate64"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Hibernate 6.4.x."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate64"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateToHibernate65:
      name: "org.openrewrite.hibernate.MigrateToHibernate65"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Hibernate 6.5.x."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohibernate65"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateToHibernateDependencies60:
      name: "org.openrewrite.hibernate.MigrateToHibernateDependencies60"
      description: "This recipe will migrate any existing dependencies on Hibernate\
        \ 5.x to the latest 6.0.x release. This migration will include the adjustment\
        \ to the new `org.hibernate.orm` group ID. It accounts for artifacts names\
        \ that both do and do not include the `jakarta` suffix and it will change\
        \ both dependencies and managed dependencies."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohibernatedependencies60"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateToHypersistenceUtilsHibernate6.0:
      name: "org.openrewrite.hibernate.MigrateToHypersistenceUtilsHibernate6.0"
      description: "This recipe will migrate any existing dependencies on `com.vladmihalcea:hibernate-types`\
        \ to `io.hypersistence:hypersistence-utils-hibernate-60`.  This migration\
        \ will include the adjustment from `com.vladmihalcea` to `io.hypersistence.utils`\
        \ package name."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohypersistenceutilshibernate6/0"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateToHypersistenceUtilsHibernate6.2:
      name: "org.openrewrite.hibernate.MigrateToHypersistenceUtilsHibernate6.2"
      description: "This recipe will migrate any existing dependencies on `io.hypersistence:hypersistence-utils-hibernate-60`\
        \ to `io.hypersistence:hypersistence-utils-hibernate-62`. "
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohypersistenceutilshibernate6/2"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateToHypersistenceUtilsHibernate6.3:
      name: "org.openrewrite.hibernate.MigrateToHypersistenceUtilsHibernate6.3"
      description: "This recipe will migrate any existing dependencies on `io.hypersistence:hypersistence-utils-hibernate-62`\
        \ to `io.hypersistence:hypersistence-utils-hibernate-63`."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migratetohypersistenceutilshibernate6/3"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.MigrateUserType:
      name: "org.openrewrite.hibernate.MigrateUserType"
      description: "With Hibernate 6 the `UserType` interface received a type parameter\
        \ making it more strictly typed. This recipe applies the changes required\
        \ to adhere to this change."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/migrateusertype"
      options: []
      isImperative: true
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.RemoveInvalidHibernateGeneratedValueAnnotation:
      name: "org.openrewrite.hibernate.RemoveInvalidHibernateGeneratedValueAnnotation"
      description: "Removes `@GeneratedValue` annotation from fields that are not\
        \ also annotated with `@Id`."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/removeinvalidhibernategeneratedvalueannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.ReplaceLazyCollectionAnnotation:
      name: "org.openrewrite.hibernate.ReplaceLazyCollectionAnnotation"
      description: "Adds the `FetchType` to jakarta annotations and deletes `@LazyCollection`."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/replacelazycollectionannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.TypeAnnotationParameter:
      name: "org.openrewrite.hibernate.TypeAnnotationParameter"
      description: "Hibernate 6.x has 'type' parameter of type String replaced with\
        \ 'value' of type class."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/typeannotationparameter"
      options: []
      isImperative: true
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.TypeDescriptorToType:
      name: "org.openrewrite.hibernate.TypeDescriptorToType"
      description: "Rename `JavaTypeDescriptor` and `SqlTypeDescriptor` to `JavaType`\
        \ and `SqlType` respectively. See https://github.com/hibernate/hibernate-orm/blob/6.0/migration-guide.adoc#type-system"
      docLink: "https://docs.openrewrite.org/recipes/hibernate/typedescriptortotype"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
    org.openrewrite.hibernate.validator.HibernateValidator_8_0:
      name: "org.openrewrite.hibernate.validator.HibernateValidator_8_0"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Hibernate Validator 8.0.x."
      docLink: "https://docs.openrewrite.org/recipes/hibernate/validator/hibernatevalidator_8_0"
      options: []
      isImperative: false
      artifactId: "rewrite-hibernate"
rewrite-jackson:
  artifactId: "rewrite-jackson"
  version: "0.15.0"
  markdownRecipeDescriptors:
    org.openrewrite.java.jackson.CodehausClassesToFasterXML:
      name: "org.openrewrite.java.jackson.CodehausClassesToFasterXML"
      description: "In Jackson 2, the package and dependency coordinates moved from\
        \ Codehaus to FasterXML."
      docLink: "https://docs.openrewrite.org/recipes/java/jackson/codehausclassestofasterxml"
      options: []
      isImperative: false
      artifactId: "rewrite-jackson"
    org.openrewrite.java.jackson.CodehausToFasterXML:
      name: "org.openrewrite.java.jackson.CodehausToFasterXML"
      description: "In Jackson 2, the package and dependency coordinates moved from\
        \ Codehaus to FasterXML."
      docLink: "https://docs.openrewrite.org/recipes/java/jackson/codehaustofasterxml"
      options: []
      isImperative: false
      artifactId: "rewrite-jackson"
    org.openrewrite.java.jackson.codehaus.CodehausDependencyToFasterXML:
      name: "org.openrewrite.java.jackson.codehaus.CodehausDependencyToFasterXML"
      description: "Replace Codehaus Jackson dependencies with FasterXML Jackson dependencies,\
        \ and add databind if needed."
      docLink: "https://docs.openrewrite.org/recipes/java/jackson/codehaus/codehausdependencytofasterxml"
      options:
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-jackson"
    org.openrewrite.java.jackson.codehaus.JsonIncludeAnnotation:
      name: "org.openrewrite.java.jackson.codehaus.JsonIncludeAnnotation"
      description: "Move Codehaus' `@JsonSerialize.include` argument to FasterXMLs\
        \ `@JsonInclude` annotation."
      docLink: "https://docs.openrewrite.org/recipes/java/jackson/codehaus/jsonincludeannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-jackson"
    org.openrewrite.java.jackson.codehaus.RemoveDoublyAnnotatedCodehausAnnotations:
      name: "org.openrewrite.java.jackson.codehaus.RemoveDoublyAnnotatedCodehausAnnotations"
      description: "Remove Codehaus Jackson annotations if they are doubly annotated\
        \ with Jackson annotations from the `com.fasterxml.jackson` package."
      docLink: "https://docs.openrewrite.org/recipes/java/jackson/codehaus/removedoublyannotatedcodehausannotations"
      options: []
      isImperative: true
      artifactId: "rewrite-jackson"
    org.openrewrite.java.jackson.codehaus.ReplaceSerializationConfigAnnotationIntrospector:
      name: "org.openrewrite.java.jackson.codehaus.ReplaceSerializationConfigAnnotationIntrospector"
      description: "Migrate serialization annotation processor to use the codehaus\
        \ config method."
      docLink: "https://docs.openrewrite.org/recipes/java/jackson/codehaus/replaceserializationconfigannotationintrospector"
      options: []
      isImperative: true
      artifactId: "rewrite-jackson"
    org.openrewrite.java.jackson.codehaus.TransferJsonSerializeArgumentsFromCodehausToFasterXML:
      name: "org.openrewrite.java.jackson.codehaus.TransferJsonSerializeArgumentsFromCodehausToFasterXML"
      description: "Transfer @JsonSerialize annotation arguments (using, contentUsing,\
        \ keyUsing, nullUsing) from Codehaus to FasterXML. If the argument was set\
        \ already, it will not be transferred."
      docLink: "https://docs.openrewrite.org/recipes/java/jackson/codehaus/transferjsonserializeargumentsfromcodehaustofasterxml"
      options: []
      isImperative: true
      artifactId: "rewrite-jackson"
rewrite-java:
  artifactId: "rewrite-java"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.java.AddApache2LicenseHeader:
      name: "org.openrewrite.java.AddApache2LicenseHeader"
      description: "Adds the Apache Software License Version 2.0 to Java source files\
        \ which are missing a license header."
      docLink: "https://docs.openrewrite.org/recipes/java/addapache2licenseheader"
      options: []
      isImperative: false
      artifactId: "rewrite-java"
    org.openrewrite.java.AddCommentToMethod:
      name: "org.openrewrite.java.AddCommentToMethod"
      description: "Add a comment to a Java source file."
      docLink: "https://docs.openrewrite.org/recipes/java/addcommenttomethod"
      options:
      - name: "comment"
        type: "String"
        required: true
      - name: "isMultiline"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.AddLicenseHeader:
      name: "org.openrewrite.java.AddLicenseHeader"
      description: "Adds license headers to Java source files when missing. Does not\
        \ override existing license headers."
      docLink: "https://docs.openrewrite.org/recipes/java/addlicenseheader"
      options:
      - name: "licenseText"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.AddLiteralMethodArgument:
      name: "org.openrewrite.java.AddLiteralMethodArgument"
      description: "Add a literal `String` or `int` argument to method invocations."
      docLink: "https://docs.openrewrite.org/recipes/java/addliteralmethodargument"
      options:
      - name: "argumentIndex"
        type: "int"
        required: true
      - name: "literal"
        type: "Object"
        required: true
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "primitiveType"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.AddMethodParameter:
      name: "org.openrewrite.java.AddMethodParameter"
      description: "Adds a new method parameter to an existing method declaration."
      docLink: "https://docs.openrewrite.org/recipes/java/addmethodparameter"
      options:
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "parameterIndex"
        type: "Integer"
        required: false
      - name: "parameterName"
        type: "String"
        required: true
      - name: "parameterType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.AddNullMethodArgument:
      name: "org.openrewrite.java.AddNullMethodArgument"
      description: "Add a `null` argument to method invocations."
      docLink: "https://docs.openrewrite.org/recipes/java/addnullmethodargument"
      options:
      - name: "argumentIndex"
        type: "int"
        required: true
      - name: "explicitCast"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "parameterName"
        type: "String"
        required: false
      - name: "parameterType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.AddOrUpdateAnnotationAttribute:
      name: "org.openrewrite.java.AddOrUpdateAnnotationAttribute"
      description: "Some annotations accept arguments. This recipe sets an existing\
        \ argument to the specified value, or adds the argument if it is not already\
        \ set."
      docLink: "https://docs.openrewrite.org/recipes/java/addorupdateannotationattribute"
      options:
      - name: "addOnly"
        type: "Boolean"
        required: true
      - name: "annotationType"
        type: "String"
        required: true
      - name: "appendArray"
        type: "Boolean"
        required: true
      - name: "attributeName"
        type: "String"
        required: false
      - name: "attributeValue"
        type: "String"
        required: true
      - name: "oldAttributeValue"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ChangeAnnotationAttributeName:
      name: "org.openrewrite.java.ChangeAnnotationAttributeName"
      description: "Some annotations accept arguments. This recipe renames an existing\
        \ attribute."
      docLink: "https://docs.openrewrite.org/recipes/java/changeannotationattributename"
      options:
      - name: "annotationType"
        type: "String"
        required: true
      - name: "newAttributeName"
        type: "String"
        required: true
      - name: "oldAttributeName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ChangeMethodAccessLevel:
      name: "org.openrewrite.java.ChangeMethodAccessLevel"
      description: "Change the access level (public, protected, private, package private)\
        \ of a method."
      docLink: "https://docs.openrewrite.org/recipes/java/changemethodaccesslevel"
      options:
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "newAccessLevel"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ChangeMethodInvocationReturnType:
      name: "org.openrewrite.java.ChangeMethodInvocationReturnType"
      description: "Changes the return type of a method invocation."
      docLink: "https://docs.openrewrite.org/recipes/java/changemethodinvocationreturntype"
      options:
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "newReturnType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ChangeMethodName:
      name: "org.openrewrite.java.ChangeMethodName"
      description: "Rename a method."
      docLink: "https://docs.openrewrite.org/recipes/java/changemethodname"
      options:
      - name: "ignoreDefinition"
        type: "Boolean"
        required: false
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "newMethodName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ChangeMethodTargetToStatic:
      name: "org.openrewrite.java.ChangeMethodTargetToStatic"
      description: "Change method invocations to static method calls."
      docLink: "https://docs.openrewrite.org/recipes/java/changemethodtargettostatic"
      options:
      - name: "fullyQualifiedTargetTypeName"
        type: "String"
        required: true
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      - name: "matchUnknownTypes"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "returnType"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ChangeMethodTargetToVariable:
      name: "org.openrewrite.java.ChangeMethodTargetToVariable"
      description: "Change method invocations to method calls on a variable."
      docLink: "https://docs.openrewrite.org/recipes/java/changemethodtargettovariable"
      options:
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "variableName"
        type: "String"
        required: true
      - name: "variableType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ChangePackage:
      name: "org.openrewrite.java.ChangePackage"
      description: "A recipe that will rename a package name in package statements,\
        \ imports, and fully-qualified types."
      docLink: "https://docs.openrewrite.org/recipes/java/changepackage"
      options:
      - name: "newPackageName"
        type: "String"
        required: true
      - name: "oldPackageName"
        type: "String"
        required: true
      - name: "recursive"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ChangeStaticFieldToMethod:
      name: "org.openrewrite.java.ChangeStaticFieldToMethod"
      description: "Migrate accesses to a static field to invocations of a static\
        \ method."
      docLink: "https://docs.openrewrite.org/recipes/java/changestaticfieldtomethod"
      options:
      - name: "newClassName"
        type: "String"
        required: false
      - name: "newMethodName"
        type: "String"
        required: true
      - name: "newTarget"
        type: "String"
        required: false
      - name: "oldClassName"
        type: "String"
        required: true
      - name: "oldFieldName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ChangeType:
      name: "org.openrewrite.java.ChangeType"
      description: "Change a given type to another."
      docLink: "https://docs.openrewrite.org/recipes/java/changetype"
      options:
      - name: "ignoreDefinition"
        type: "Boolean"
        required: false
      - name: "newFullyQualifiedTypeName"
        type: "String"
        required: true
      - name: "oldFullyQualifiedTypeName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.CreateEmptyJavaClass:
      name: "org.openrewrite.java.CreateEmptyJavaClass"
      description: "Create a new, empty Java class."
      docLink: "https://docs.openrewrite.org/recipes/java/createemptyjavaclass"
      options:
      - name: "className"
        type: "String"
        required: true
      - name: "modifier"
        type: "String"
        required: true
      - name: "overwriteExisting"
        type: "Boolean"
        required: false
      - name: "packageName"
        type: "String"
        required: true
      - name: "relativePath"
        type: "String"
        required: false
      - name: "sourceRoot"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.DeleteMethodArgument:
      name: "org.openrewrite.java.DeleteMethodArgument"
      description: "Delete an argument from method invocations."
      docLink: "https://docs.openrewrite.org/recipes/java/deletemethodargument"
      options:
      - name: "argumentIndex"
        type: "int"
        required: true
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.NoStaticImport:
      name: "org.openrewrite.java.NoStaticImport"
      description: "Removes static imports and replaces them with qualified references.\
        \ For example, `emptyList()` becomes `Collections.emptyList()`."
      docLink: "https://docs.openrewrite.org/recipes/java/nostaticimport"
      options:
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.OrderImports:
      name: "org.openrewrite.java.OrderImports"
      description: "Groups and orders import statements. If a [style has been defined](https://docs.openrewrite.org/concepts-and-explanations/styles),\
        \ this recipe will order the imports according to that style. If no style\
        \ is detected, this recipe will default to ordering imports in the same way\
        \ that IntelliJ IDEA does."
      docLink: "https://docs.openrewrite.org/recipes/java/orderimports"
      options:
      - name: "removeUnused"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.RandomizeId:
      name: "org.openrewrite.java.RandomizeId"
      description: "Scramble the IDs. This was intended as a utility to test _en masse_\
        \ different techniques for UUID generation and compare their relative performance\
        \ outside a microbenchmark."
      docLink: "https://docs.openrewrite.org/recipes/java/randomizeid"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.RecipeMarkupDemonstration:
      name: "org.openrewrite.java.RecipeMarkupDemonstration"
      description: "Tooling may decide to elide or display differently markup of different\
        \ levels."
      docLink: "https://docs.openrewrite.org/recipes/java/recipemarkupdemonstration"
      options:
      - name: "level"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.RemoveAnnotation:
      name: "org.openrewrite.java.RemoveAnnotation"
      description: "Remove matching annotations wherever they occur."
      docLink: "https://docs.openrewrite.org/recipes/java/removeannotation"
      options:
      - name: "annotationPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.RemoveAnnotationAttribute:
      name: "org.openrewrite.java.RemoveAnnotationAttribute"
      description: "Some annotations accept arguments. This recipe removes an existing\
        \ attribute."
      docLink: "https://docs.openrewrite.org/recipes/java/removeannotationattribute"
      options:
      - name: "annotationType"
        type: "String"
        required: true
      - name: "attributeName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.RemoveImplements:
      name: "org.openrewrite.java.RemoveImplements"
      description: "Removes `implements` clauses from classes implementing the specified\
        \ interface. Removes `@Overrides` annotations from methods which no longer\
        \ override anything."
      docLink: "https://docs.openrewrite.org/recipes/java/removeimplements"
      options:
      - name: "filter"
        type: "String"
        required: false
      - name: "interfaceType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.RemoveMethodInvocations:
      name: "org.openrewrite.java.RemoveMethodInvocations"
      description: "Remove method invocations if syntactically safe."
      docLink: "https://docs.openrewrite.org/recipes/java/removemethodinvocations"
      options:
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.RemoveObjectsIsNull:
      name: "org.openrewrite.java.RemoveObjectsIsNull"
      description: "Replace calls to `Objects.isNull(..)` and `Objects.nonNull(..)`\
        \ with a simple null check. Using these methods outside of stream predicates\
        \ is not idiomatic."
      docLink: "https://docs.openrewrite.org/recipes/java/removeobjectsisnull"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.RemoveUnusedImports:
      name: "org.openrewrite.java.RemoveUnusedImports"
      description: "Remove imports for types that are not referenced. As a precaution\
        \ against incorrect changes no imports will be removed from any source where\
        \ unknown types are referenced. The most common cause of unknown types is\
        \ the use of annotation processors not supported by OpenRewrite, such as lombok."
      docLink: "https://docs.openrewrite.org/recipes/java/removeunusedimports"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ReorderMethodArguments:
      name: "org.openrewrite.java.ReorderMethodArguments"
      description: "Reorder method arguments into the specified order."
      docLink: "https://docs.openrewrite.org/recipes/java/reordermethodarguments"
      options:
      - name: "ignoreDefinition"
        type: "Boolean"
        required: false
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "newParameterNames"
        type: "String[]"
        required: true
      - name: "oldParameterNames"
        type: "String[]"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ReplaceAnnotation:
      name: "org.openrewrite.java.ReplaceAnnotation"
      description: "Replace an Annotation with another one if the annotation pattern\
        \ matches. Only fixed parameters can be set in the replacement."
      docLink: "https://docs.openrewrite.org/recipes/java/replaceannotation"
      options:
      - name: "annotationPatternToReplace"
        type: "String"
        required: true
      - name: "annotationTemplateToInsert"
        type: "String"
        required: true
      - name: "classpathResourceName"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ReplaceConstant:
      name: "org.openrewrite.java.ReplaceConstant"
      description: "Replace a named constant with a literal value when you wish to\
        \ remove the old constant. A `String` literal must include escaped quotes."
      docLink: "https://docs.openrewrite.org/recipes/java/replaceconstant"
      options:
      - name: "constantName"
        type: "String"
        required: true
      - name: "literalValue"
        type: "String"
        required: true
      - name: "owningType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ReplaceConstantWithAnotherConstant:
      name: "org.openrewrite.java.ReplaceConstantWithAnotherConstant"
      description: "Replace a constant with another constant, adding/removing import\
        \ on class if needed."
      docLink: "https://docs.openrewrite.org/recipes/java/replaceconstantwithanotherconstant"
      options:
      - name: "existingFullyQualifiedConstantName"
        type: "String"
        required: true
      - name: "fullyQualifiedConstantName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ReplaceStringLiteralValue:
      name: "org.openrewrite.java.ReplaceStringLiteralValue"
      description: "Replace the value of a complete `String` literal."
      docLink: "https://docs.openrewrite.org/recipes/java/replacestringliteralvalue"
      options:
      - name: "newLiteralValue"
        type: "String"
        required: true
      - name: "oldLiteralValue"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ReplaceStringLiteralWithConstant:
      name: "org.openrewrite.java.ReplaceStringLiteralWithConstant"
      description: "Replace String literal with constant, adding import on class if\
        \ needed."
      docLink: "https://docs.openrewrite.org/recipes/java/replacestringliteralwithconstant"
      options:
      - name: "fullyQualifiedConstantName"
        type: "String"
        required: true
      - name: "literalValue"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ShortenFullyQualifiedTypeReferences:
      name: "org.openrewrite.java.ShortenFullyQualifiedTypeReferences"
      description: "Any fully qualified references to Java types will be replaced\
        \ with corresponding simple names and import statements, provided that it\
        \ doesn't result in any conflicts with other imports or types declared in\
        \ the local compilation unit."
      docLink: "https://docs.openrewrite.org/recipes/java/shortenfullyqualifiedtypereferences"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.SimplifyMethodChain:
      name: "org.openrewrite.java.SimplifyMethodChain"
      description: "Simplify `a.b().c()` to `a.d()`."
      docLink: "https://docs.openrewrite.org/recipes/java/simplifymethodchain"
      options:
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      - name: "methodPatternChain"
        type: "List"
        required: true
      - name: "newMethodName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.UpdateSourcePositions:
      name: "org.openrewrite.java.UpdateSourcePositions"
      description: "Calculate start position and length for every LST element."
      docLink: "https://docs.openrewrite.org/recipes/java/updatesourcepositions"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.UseStaticImport:
      name: "org.openrewrite.java.UseStaticImport"
      description: "Removes unnecessary receiver types from static method invocations.\
        \ For example, `Collections.emptyList()` becomes `emptyList()`."
      docLink: "https://docs.openrewrite.org/recipes/java/usestaticimport"
      options:
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ai.ClassDefinitionLength:
      name: "org.openrewrite.java.ai.ClassDefinitionLength"
      description: "Locates class definitions and predicts the number of token in\
        \ each."
      docLink: "https://docs.openrewrite.org/recipes/java/ai/classdefinitionlength"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.ai.MethodDefinitionLength:
      name: "org.openrewrite.java.ai.MethodDefinitionLength"
      description: "Locates method definitions and predicts the number of token in\
        \ each."
      docLink: "https://docs.openrewrite.org/recipes/java/ai/methoddefinitionlength"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.AutoFormat:
      name: "org.openrewrite.java.format.AutoFormat"
      description: "Format Java code using a standard comprehensive set of Java formatting\
        \ recipes."
      docLink: "https://docs.openrewrite.org/recipes/java/format/autoformat"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.BlankLines:
      name: "org.openrewrite.java.format.BlankLines"
      description: "Add and/or remove blank lines."
      docLink: "https://docs.openrewrite.org/recipes/java/format/blanklines"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.EmptyNewlineAtEndOfFile:
      name: "org.openrewrite.java.format.EmptyNewlineAtEndOfFile"
      description: "Some tools work better when files end with an empty line."
      docLink: "https://docs.openrewrite.org/recipes/java/format/emptynewlineatendoffile"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.MethodParamPad:
      name: "org.openrewrite.java.format.MethodParamPad"
      description: "Fixes whitespace padding between the identifier of a method definition\
        \ or method invocation and the left parenthesis of the parameter list. For\
        \ example, when configured to remove spacing, `someMethodInvocation (x);`\
        \ becomes `someMethodInvocation(x)`."
      docLink: "https://docs.openrewrite.org/recipes/java/format/methodparampad"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.NoWhitespaceAfter:
      name: "org.openrewrite.java.format.NoWhitespaceAfter"
      description: "Removes unnecessary whitespace appearing after a token. A linebreak\
        \ after a token is allowed unless `allowLineBreaks` is set to `false`, in\
        \ which case it will be removed."
      docLink: "https://docs.openrewrite.org/recipes/java/format/nowhitespaceafter"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.NoWhitespaceBefore:
      name: "org.openrewrite.java.format.NoWhitespaceBefore"
      description: "Removes unnecessary whitespace preceding a token. A linebreak\
        \ before a token will be removed unless `allowLineBreaks` is set to `true`."
      docLink: "https://docs.openrewrite.org/recipes/java/format/nowhitespacebefore"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.NormalizeFormat:
      name: "org.openrewrite.java.format.NormalizeFormat"
      description: "Move whitespace to the outermost LST element possible."
      docLink: "https://docs.openrewrite.org/recipes/java/format/normalizeformat"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.NormalizeLineBreaks:
      name: "org.openrewrite.java.format.NormalizeLineBreaks"
      description: "Consistently use either Windows style (CRLF) or Linux style (LF)\
        \ line breaks. If no `GeneralFormatStyle` is specified this will use whichever\
        \ style of line endings are more common."
      docLink: "https://docs.openrewrite.org/recipes/java/format/normalizelinebreaks"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.NormalizeTabsOrSpaces:
      name: "org.openrewrite.java.format.NormalizeTabsOrSpaces"
      description: "Consistently use either tabs or spaces in indentation."
      docLink: "https://docs.openrewrite.org/recipes/java/format/normalizetabsorspaces"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.PadEmptyForLoopComponents:
      name: "org.openrewrite.java.format.PadEmptyForLoopComponents"
      description: "Fixes padding on empty `for` loop iterators and initializers to\
        \ match Checkstyle policies."
      docLink: "https://docs.openrewrite.org/recipes/java/format/pademptyforloopcomponents"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.RemoveTrailingWhitespace:
      name: "org.openrewrite.java.format.RemoveTrailingWhitespace"
      description: "Remove any extra trailing whitespace from the end of each line."
      docLink: "https://docs.openrewrite.org/recipes/java/format/removetrailingwhitespace"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.SingleLineComments:
      name: "org.openrewrite.java.format.SingleLineComments"
      description: "Write `// hi` instead of `//hi`."
      docLink: "https://docs.openrewrite.org/recipes/java/format/singlelinecomments"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.Spaces:
      name: "org.openrewrite.java.format.Spaces"
      description: "Format whitespace in Java code."
      docLink: "https://docs.openrewrite.org/recipes/java/format/spaces"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.TabsAndIndents:
      name: "org.openrewrite.java.format.TabsAndIndents"
      description: "Format tabs and indents in Java code."
      docLink: "https://docs.openrewrite.org/recipes/java/format/tabsandindents"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.TypecastParenPad:
      name: "org.openrewrite.java.format.TypecastParenPad"
      description: "Fixes whitespace padding between a typecast type identifier and\
        \ the enclosing left and right parenthesis. For example, when configured to\
        \ remove spacing, `( int ) 0L;` becomes `(int) 0L;`."
      docLink: "https://docs.openrewrite.org/recipes/java/format/typecastparenpad"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.format.WrappingAndBraces:
      name: "org.openrewrite.java.format.WrappingAndBraces"
      description: "Format line wraps and braces in Java code."
      docLink: "https://docs.openrewrite.org/recipes/java/format/wrappingandbraces"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.BlankLinesAroundFieldsWithAnnotations:
      name: "org.openrewrite.java.recipes.BlankLinesAroundFieldsWithAnnotations"
      description: "Fields with annotations should have a blank line before them to\
        \ clearly separate them from the field above. If another field follows, it\
        \ should also have a blank line after so that the field with the annotation\
        \ has space on either side of it, visually distinguishing it from its neighbors."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/blanklinesaroundfieldswithannotations"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.ExecutionContextParameterName:
      name: "org.openrewrite.java.recipes.ExecutionContextParameterName"
      description: "Visitors that are parameterized with `ExecutionContext` should\
        \ use the parameter name `ctx`."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/executioncontextparametername"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.FindRecipes:
      name: "org.openrewrite.java.recipes.FindRecipes"
      description: "This recipe finds all OpenRewrite recipes, primarily to produce\
        \ a data table that is being used to experiment with fine-tuning a large language\
        \ model to produce more recipes."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/findrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.MissingOptionExample:
      name: "org.openrewrite.java.recipes.MissingOptionExample"
      description: "Find `@Option` annotations that are missing `example` values for\
        \ documentation."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/missingoptionexample"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.NoMutableStaticFieldsInRecipes:
      name: "org.openrewrite.java.recipes.NoMutableStaticFieldsInRecipes"
      description: "Remove mutable static fields from Recipe classes to discourage\
        \ their use."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/nomutablestaticfieldsinrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.RecipeEqualsAndHashCodeCallSuper:
      name: "org.openrewrite.java.recipes.RecipeEqualsAndHashCodeCallSuper"
      description: "Recipes are value objects, so should use `@EqualsAndHashCode(callSuper\
        \ = false)`. While in most cases recipes do not extend other classes and so\
        \ the option is moot, as a matter of stylistic consistency and to enforce\
        \ the idea that recipes are value objects, this value should be set to `false`."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/recipeequalsandhashcodecallsuper"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.RewriteTestClassesShouldNotBePublic:
      name: "org.openrewrite.java.recipes.RewriteTestClassesShouldNotBePublic"
      description: "Remove the public modifier from classes that implement RewriteTest."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/rewritetestclassesshouldnotbepublic"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.SelectRecipeExamples:
      name: "org.openrewrite.java.recipes.SelectRecipeExamples"
      description: "Add `@DocumentExample` to the first non-issue and not a disabled\
        \ unit test of a recipe as an example, if there are not any examples yet."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/selectrecipeexamples"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.SetDefaultEstimatedEffortPerOccurrence:
      name: "org.openrewrite.java.recipes.SetDefaultEstimatedEffortPerOccurrence"
      description: "Retrofit recipes with a default estimated effort per occurrence."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/setdefaultestimatedeffortperoccurrence"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.SourceSpecTextBlockIndentation:
      name: "org.openrewrite.java.recipes.SourceSpecTextBlockIndentation"
      description: "Text blocks that assert before and after source code should have\
        \ minimal indentation."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/sourcespectextblockindentation"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.recipes.UseTreeRandomId:
      name: "org.openrewrite.java.recipes.UseTreeRandomId"
      description: "Replaces occurrences of `UUID.randomUUID()` with `Tree.randomId()`\
        \ when passed as an argument to a constructor call for LST elements."
      docLink: "https://docs.openrewrite.org/recipes/java/recipes/usetreerandomid"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.ClasspathTypeCounts:
      name: "org.openrewrite.java.search.ClasspathTypeCounts"
      description: "Emit one data table row per source set in a project, with the\
        \ number of types in the source set."
      docLink: "https://docs.openrewrite.org/recipes/java/search/classpathtypecounts"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.DoesNotUseType:
      name: "org.openrewrite.java.search.DoesNotUseType"
      description: "Useful as a precondition to skip over compilation units using\
        \ the argument type."
      docLink: "https://docs.openrewrite.org/recipes/java/search/doesnotusetype"
      options:
      - name: "fullyQualifiedTypeName"
        type: "String"
        required: true
      - name: "includeImplicit"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindAnnotations:
      name: "org.openrewrite.java.search.FindAnnotations"
      description: "Find all annotations matching the annotation pattern."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findannotations"
      options:
      - name: "annotationPattern"
        type: "String"
        required: true
      - name: "matchMetaAnnotations"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindClassHierarchy:
      name: "org.openrewrite.java.search.FindClassHierarchy"
      description: "Discovers all class declarations within a project, recording which\
        \ files they appear in, their superclasses, and interfaces. That information\
        \ is then recorded in a data table."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findclasshierarchy"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindComments:
      name: "org.openrewrite.java.search.FindComments"
      description: "Find regular expression matches within comments and literals.\
        \ \"Literals\" includes string literals, character literals, and numeric literals."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findcomments"
      options:
      - name: "patterns"
        type: "List"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindCompileErrors:
      name: "org.openrewrite.java.search.FindCompileErrors"
      description: "Compile errors result in a particular LST structure that can be\
        \ searched for."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findcompileerrors"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindDeprecatedClasses:
      name: "org.openrewrite.java.search.FindDeprecatedClasses"
      description: "Find uses of deprecated classes, optionally ignoring those classes\
        \ that are inside deprecated scopes."
      docLink: "https://docs.openrewrite.org/recipes/java/search/finddeprecatedclasses"
      options:
      - name: "ignoreDeprecatedScopes"
        type: "Boolean"
        required: false
      - name: "matchInherited"
        type: "Boolean"
        required: false
      - name: "typePattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindDeprecatedFields:
      name: "org.openrewrite.java.search.FindDeprecatedFields"
      description: "Find uses of deprecated fields in any API."
      docLink: "https://docs.openrewrite.org/recipes/java/search/finddeprecatedfields"
      options:
      - name: "ignoreDeprecatedScopes"
        type: "Boolean"
        required: false
      - name: "matchInherited"
        type: "Boolean"
        required: false
      - name: "typePattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindDeprecatedMethods:
      name: "org.openrewrite.java.search.FindDeprecatedMethods"
      description: "Find uses of deprecated methods in any API."
      docLink: "https://docs.openrewrite.org/recipes/java/search/finddeprecatedmethods"
      options:
      - name: "ignoreDeprecatedScopes"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindDeprecatedUses:
      name: "org.openrewrite.java.search.FindDeprecatedUses"
      description: "Find deprecated uses of methods, fields, and types. Optionally\
        \ ignore those classes that are inside deprecated scopes."
      docLink: "https://docs.openrewrite.org/recipes/java/search/finddeprecateduses"
      options:
      - name: "ignoreDeprecatedScopes"
        type: "Boolean"
        required: false
      - name: "matchInherited"
        type: "Boolean"
        required: false
      - name: "typePattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindEmptyClasses:
      name: "org.openrewrite.java.search.FindEmptyClasses"
      description: "Find empty classes without annotations that do not implement an\
        \ interface or extend a class."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findemptyclasses"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindEmptyMethods:
      name: "org.openrewrite.java.search.FindEmptyMethods"
      description: "Find methods with empty bodies and single public no arg constructors."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findemptymethods"
      options:
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindFields:
      name: "org.openrewrite.java.search.FindFields"
      description: "Find uses of a field."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findfields"
      options:
      - name: "fieldName"
        type: "String"
        required: true
      - name: "fullyQualifiedTypeName"
        type: "String"
        required: true
      - name: "matchInherited"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindFieldsOfType:
      name: "org.openrewrite.java.search.FindFieldsOfType"
      description: "Finds declared fields matching a particular class name."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findfieldsoftype"
      options:
      - name: "fullyQualifiedTypeName"
        type: "String"
        required: true
      - name: "matchInherited"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindImplementations:
      name: "org.openrewrite.java.search.FindImplementations"
      description: "Find class declarations which implement the specified type. If\
        \ the specified type is a class, its subclasses will be matched. If the specified\
        \ type is an interface, classes which implement it will be matched."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findimplementations"
      options:
      - name: "typeName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindImports:
      name: "org.openrewrite.java.search.FindImports"
      description: "Locates source files that have imports matching the given type\
        \ pattern, regardless of whether that import is used in the code."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findimports"
      options:
      - name: "matchInherited"
        type: "Boolean"
        required: false
      - name: "typePattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindLiterals:
      name: "org.openrewrite.java.search.FindLiterals"
      description: "Find literals matching a pattern."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findliterals"
      options:
      - name: "pattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindMethodDeclaration:
      name: "org.openrewrite.java.search.FindMethodDeclaration"
      description: "Locates the declaration of a method."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findmethoddeclaration"
      options:
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindMethods:
      name: "org.openrewrite.java.search.FindMethods"
      description: "Find method calls by pattern."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findmethods"
      options:
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindMissingTypes:
      name: "org.openrewrite.java.search.FindMissingTypes"
      description: "This is a diagnostic recipe to highlight where LSTs are missing\
        \ type attribution information."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findmissingtypes"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindRepeatableAnnotations:
      name: "org.openrewrite.java.search.FindRepeatableAnnotations"
      description: "Java 8 introduced the concept of `@Repeatable` annotations."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findrepeatableannotations"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindSecrets:
      name: "org.openrewrite.java.search.FindSecrets"
      description: "Find secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindTypeMappings:
      name: "org.openrewrite.java.search.FindTypeMappings"
      description: "Study the frequency of `J` types and their `JavaType` type attribution."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findtypemappings"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.FindTypes:
      name: "org.openrewrite.java.search.FindTypes"
      description: "Find type references by name."
      docLink: "https://docs.openrewrite.org/recipes/java/search/findtypes"
      options:
      - name: "checkAssignability"
        type: "Boolean"
        required: false
      - name: "fullyQualifiedTypeName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.HasBuildToolVersion:
      name: "org.openrewrite.java.search.HasBuildToolVersion"
      description: "Finds Java source files built with a particular build tool. This\
        \ is useful especially as a precondition for other recipes."
      docLink: "https://docs.openrewrite.org/recipes/java/search/hasbuildtoolversion"
      options:
      - name: "type"
        type: "Type"
        required: true
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.HasJavaVersion:
      name: "org.openrewrite.java.search.HasJavaVersion"
      description: "Finds Java source files matching a particular language level.\
        \ This is useful especially as a precondition for other recipes."
      docLink: "https://docs.openrewrite.org/recipes/java/search/hasjavaversion"
      options:
      - name: "checkTargetCompatibility"
        type: "Boolean"
        required: false
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.HasMinimumJavaVersion:
      name: "org.openrewrite.java.search.HasMinimumJavaVersion"
      description: "The oldest Java version in use is the lowest Java version in use\
        \ in any source set of any subproject of a repository. It is possible that,\
        \ for example, the main source set of a project uses Java 8, but a test source\
        \ set uses Java 17. In this case, the oldest Java version in use is Java 8."
      docLink: "https://docs.openrewrite.org/recipes/java/search/hasminimumjavaversion"
      options:
      - name: "checkTargetCompatibility"
        type: "Boolean"
        required: false
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.HasSourceSet:
      name: "org.openrewrite.java.search.HasSourceSet"
      description: "Source sets are a way to organize your source code into logical\
        \ groups. For example, Java projects commonly have a `main` source set for\
        \ application code and a `test` source set for test code. This recipe will\
        \ find all files in a given source set."
      docLink: "https://docs.openrewrite.org/recipes/java/search/hassourceset"
      options:
      - name: "sourceSet"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.IsLikelyNotTest:
      name: "org.openrewrite.java.search.IsLikelyNotTest"
      description: "Sources that do not contain indicators of being, or being exclusively\
        \ for the use in tests. This recipe is simply a negation of the `org.openrewrite.java.search.IsLikelyTest`\
        \ recipe."
      docLink: "https://docs.openrewrite.org/recipes/java/search/islikelynottest"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.IsLikelyTest:
      name: "org.openrewrite.java.search.IsLikelyTest"
      description: "Sources that contain indicators of being, or being exclusively\
        \ for the use in tests. This recipe is not exhaustive, but is intended to\
        \ be a good starting point for finding test sources. Looks at the source set\
        \ name, and types in use; for example looks for uses of JUnit & TestNG annotations/assertions."
      docLink: "https://docs.openrewrite.org/recipes/java/search/islikelytest"
      options: []
      isImperative: true
      artifactId: "rewrite-java"
    org.openrewrite.java.search.ResultOfMethodCallIgnored:
      name: "org.openrewrite.java.search.ResultOfMethodCallIgnored"
      description: "Find locations where the result of the method call is being ignored."
      docLink: "https://docs.openrewrite.org/recipes/java/search/resultofmethodcallignored"
      options:
      - name: "matchOverrides"
        type: "Boolean"
        required: false
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java"
rewrite-java-dependencies:
  artifactId: "rewrite-java-dependencies"
  version: "1.30.0"
  markdownRecipeDescriptors:
    org.openrewrite.java.dependencies.AddDependency:
      name: "org.openrewrite.java.dependencies.AddDependency"
      description: "For a Gradle project, add a gradle dependency to a `build.gradle`\
        \ file in the correct configuration based on where it is used. Or For a maven\
        \ project, Add a Maven dependency to a `pom.xml` file in the correct scope\
        \ based on where it is used."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/adddependency"
      options:
      - name: "acceptTransitive"
        type: "Boolean"
        required: false
      - name: "artifactId"
        type: "String"
        required: true
      - name: "classifier"
        type: "String"
        required: false
      - name: "configuration"
        type: "String"
        required: false
      - name: "extension"
        type: "String"
        required: false
      - name: "familyPattern"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "onlyIfUsing"
        type: "String"
        required: false
      - name: "optional"
        type: "Boolean"
        required: false
      - name: "releasesOnly"
        type: "Boolean"
        required: false
      - name: "scope"
        type: "String"
        required: false
      - name: "type"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java-dependencies"
    org.openrewrite.java.dependencies.ChangeDependency:
      name: "org.openrewrite.java.dependencies.ChangeDependency"
      description: "Change the group ID, artifact ID, and/or the version of a specified\
        \ Gradle or Maven dependency."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/changedependency"
      options:
      - name: "changeManagedDependency"
        type: "Boolean"
        required: false
      - name: "newArtifactId"
        type: "String"
        required: false
      - name: "newGroupId"
        type: "String"
        required: false
      - name: "newVersion"
        type: "String"
        required: false
      - name: "oldArtifactId"
        type: "String"
        required: true
      - name: "oldGroupId"
        type: "String"
        required: true
      - name: "overrideManagedVersion"
        type: "Boolean"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java-dependencies"
    org.openrewrite.java.dependencies.DependencyInsight:
      name: "org.openrewrite.java.dependencies.DependencyInsight"
      description: "Finds dependencies, including transitive dependencies, in both\
        \ Gradle and Maven projects. Matches within all Gradle dependency configurations\
        \ and Maven scopes."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/dependencyinsight"
      options:
      - name: "artifactIdPattern"
        type: "String"
        required: true
      - name: "groupIdPattern"
        type: "String"
        required: true
      - name: "scope"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java-dependencies"
    org.openrewrite.java.dependencies.DependencyList:
      name: "org.openrewrite.java.dependencies.DependencyList"
      description: "Emits a data table detailing all Gradle and Maven dependencies.This\
        \ recipe makes no changes to any source file."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/dependencylist"
      options:
      - name: "includeTransitive"
        type: "boolean"
        required: true
      - name: "scope"
        type: "Scope"
        required: true
      - name: "validateResolvable"
        type: "boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-java-dependencies"
    org.openrewrite.java.dependencies.DependencyResolutionDiagnostic:
      name: "org.openrewrite.java.dependencies.DependencyResolutionDiagnostic"
      description: "Recipes which manipulate dependencies must be able to successfully\
        \ access the artifact repositories and resolve dependencies from them. This\
        \ recipe produces two data tables used to understand the state of dependency\
        \ resolution. \n\nThe Repository accessibility report lists all the artifact\
        \ repositories known to the project and whether respond to network access.\
        \ The network access is attempted while the recipe is run and so is representative\
        \ of current conditions. \n\nThe Gradle dependency configuration errors lists\
        \ all the dependency configurations that failed to resolve one or more dependencies\
        \ when the project was parsed. This is representative of conditions at the\
        \ time the LST was parsed."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/dependencyresolutiondiagnostic"
      options:
      - name: "artifactId"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java-dependencies"
    org.openrewrite.java.dependencies.RelocatedDependencyCheck:
      name: "org.openrewrite.java.dependencies.RelocatedDependencyCheck"
      description: "Find Maven and Gradle dependencies and Maven plugins that have\
        \ relocated to a new `groupId` or `artifactId`. Relocation information comes\
        \ from the [oga-maven-plugin](https://github.com/jonathanlermitage/oga-maven-plugin/)\
        \ maintained by Jonathan Lermitage, Filipe Roque and others.\n\nThis recipe\
        \ makes no changes to any source file by default. Add `changeDependencies=true`\
        \ to change dependencies, but note that you might need to run additional recipes\
        \ to update imports and adopt other breaking changes."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/relocateddependencycheck"
      options:
      - name: "changeDependencies"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java-dependencies"
    org.openrewrite.java.dependencies.RemoveDependency:
      name: "org.openrewrite.java.dependencies.RemoveDependency"
      description: "For Gradle project, removes a single dependency from the dependencies\
        \ section of the `build.gradle`.\nFor Maven project, removes a single dependency\
        \ from the <dependencies> section of the pom.xml."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/removedependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "scope"
        type: "String"
        required: false
      - name: "unlessUsing"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java-dependencies"
    org.openrewrite.java.dependencies.UpgradeDependencyVersion:
      name: "org.openrewrite.java.dependencies.UpgradeDependencyVersion"
      description: "For Gradle projects, upgrade the version of a dependency in a\
        \ `build.gradle` file. Supports updating dependency declarations of various\
        \ forms:\n* `String` notation: `\"group:artifact:version\"` \n* `Map` notation:\
        \ `group: 'group', name: 'artifact', version: 'version'`\nIt is possible to\
        \ update version numbers which are defined earlier in the same file in variable\
        \ declarations.\n\nFor Maven projects, upgrade the version of a dependency\
        \ by specifying a group ID and (optionally) an artifact ID using Node Semver\
        \ advanced range selectors, allowing more precise control over version updates\
        \ to patch or minor releases."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/upgradedependencyversion"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "newVersion"
        type: "String"
        required: true
      - name: "overrideManagedVersion"
        type: "Boolean"
        required: false
      - name: "retainVersions"
        type: "List"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java-dependencies"
    org.openrewrite.java.dependencies.UpgradeTransitiveDependencyVersion:
      name: "org.openrewrite.java.dependencies.UpgradeTransitiveDependencyVersion"
      description: "Upgrades the version of a transitive dependency in a Maven pom.xml\
        \ or Gradle build.gradle. Leaves direct dependencies unmodified. Can be paired\
        \ with the regular Upgrade Dependency Version recipe to upgrade a dependency\
        \ everywhere, regardless of whether it is direct or transitive."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/upgradetransitivedependencyversion"
      options:
      - name: "addToRootPom"
        type: "Boolean"
        required: false
      - name: "artifactId"
        type: "String"
        required: true
      - name: "because"
        type: "String"
        required: false
      - name: "classifier"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "onlyIfUsing"
        type: "String"
        required: false
      - name: "releasesOnly"
        type: "Boolean"
        required: false
      - name: "scope"
        type: "String"
        required: false
      - name: "type"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: true
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java-dependencies"
    org.openrewrite.java.dependencies.search.FindMinimumDependencyVersion:
      name: "org.openrewrite.java.dependencies.search.FindMinimumDependencyVersion"
      description: "The oldest dependency version in use is the lowest dependency\
        \ version in use in any source set of any subproject of a repository. It is\
        \ possible that, for example, the main source set of a project uses Jackson\
        \ 2.11, but a test source set uses Jackson 2.16. In this case, the oldest\
        \ Jackson version in use is Java 2.11."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/search/findminimumdependencyversion"
      options:
      - name: "artifactIdPattern"
        type: "String"
        required: true
      - name: "groupIdPattern"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java-dependencies"
rewrite-java-security:
  artifactId: "rewrite-java-security"
  version: "3.3.0"
  markdownRecipeDescriptors:
    org.openrewrite.csharp.dependencies.DependencyInsight:
      name: "org.openrewrite.csharp.dependencies.DependencyInsight"
      description: "Finds dependencies in `*.csproj` and `packages.config`."
      docLink: "https://docs.openrewrite.org/recipes/csharp/dependencies/dependencyinsight"
      options:
      - name: "packagePattern"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.csharp.dependencies.DependencyVulnerabilityCheck:
      name: "org.openrewrite.csharp.dependencies.DependencyVulnerabilityCheck"
      description: "This software composition analysis (SCA) tool detects and upgrades\
        \ dependencies with publicly disclosed vulnerabilities. This recipe both generates\
        \ a report of vulnerable dependencies and upgrades to newer versions with\
        \ fixes. This recipe **only** upgrades to the latest **patch** version.  If\
        \ a minor or major upgrade is required to reach the fixed version, this recipe\
        \ will not make any changes. Vulnerability information comes from the [GitHub\
        \ Security Advisory Database](https://docs.github.com/en/code-security/security-advisories/global-security-advisories/about-the-github-advisory-database),\
        \ which aggregates vulnerability data from several public databases, including\
        \ the [National Vulnerability Database](https://nvd.nist.gov/) maintained\
        \ by the United States government. Dependencies following [Semantic Versioning](https://semver.org/)\
        \ will see their _patch_ version updated where applicable."
      docLink: "https://docs.openrewrite.org/recipes/csharp/dependencies/dependencyvulnerabilitycheck"
      options:
      - name: "addMarkers"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.csharp.dependencies.UpgradeDependencyVersion:
      name: "org.openrewrite.csharp.dependencies.UpgradeDependencyVersion"
      description: "Upgrades dependencies in `*.csproj` and `packages.config`."
      docLink: "https://docs.openrewrite.org/recipes/csharp/dependencies/upgradedependencyversion"
      options:
      - name: "newVersion"
        type: "String"
        required: true
      - name: "packagePattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.dependencies.DependencyLicenseCheck:
      name: "org.openrewrite.java.dependencies.DependencyLicenseCheck"
      description: "Locates and reports on all licenses in use."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/dependencylicensecheck"
      options:
      - name: "addMarkers"
        type: "Boolean"
        required: false
      - name: "scope"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.dependencies.DependencyVulnerabilityCheck:
      name: "org.openrewrite.java.dependencies.DependencyVulnerabilityCheck"
      description: "This software composition analysis (SCA) tool detects and upgrades\
        \ dependencies with publicly disclosed vulnerabilities. This recipe both generates\
        \ a report of vulnerable dependencies and upgrades to newer versions with\
        \ fixes. This recipe by default only upgrades to the latest **patch** version.\
        \  If a minor or major upgrade is required to reach the fixed version, this\
        \ can be controlled using the `maximumUpgradeDelta` option. Vulnerability\
        \ information comes from the [GitHub Security Advisory Database](https://docs.github.com/en/code-security/security-advisories/global-security-advisories/about-the-github-advisory-database),\
        \ which aggregates vulnerability data from several public databases, including\
        \ the [National Vulnerability Database](https://nvd.nist.gov/) maintained\
        \ by the United States government. Upgrades dependencies versioned according\
        \ to [Semantic Versioning](https://semver.org/)."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/dependencyvulnerabilitycheck"
      options:
      - name: "maximumUpgradeDelta"
        type: "UpgradeDelta"
        required: false
      - name: "overrideTransitive"
        type: "Boolean"
        required: false
      - name: "scope"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.dependencies.RemoveUnusedDependencies:
      name: "org.openrewrite.java.dependencies.RemoveUnusedDependencies"
      description: "Scans through source code collecting references to types and methods,\
        \ removing any dependencies that are not used from Maven or Gradle build files.\
        \ This is a complex recipe which has not yet been well tested and exercised.\
        \ For now it should be treated as making recommendations to further investigate."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/removeunuseddependencies"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.dependencies.SoftwareBillOfMaterials:
      name: "org.openrewrite.java.dependencies.SoftwareBillOfMaterials"
      description: "Produces a software bill of materials (SBOM) for a project. An\
        \ SBOM is a complete list of all dependencies used in a project, including\
        \ transitive dependencies. The produced SBOM is in the [CycloneDX](https://cyclonedx.org/)\
        \ XML format. Supports Gradle and Maven. Places a file named sbom.xml adjacent\
        \ to the Gradle or Maven build file."
      docLink: "https://docs.openrewrite.org/recipes/java/dependencies/softwarebillofmaterials"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.FindTextDirectionChanges:
      name: "org.openrewrite.java.security.FindTextDirectionChanges"
      description: "Finds unicode control characters which can change the direction\
        \ text is displayed in. These control characters can alter how source code\
        \ is presented to a human reader without affecting its interpretation by tools\
        \ like compilers. So a malicious patch could pass code review while introducing\
        \ vulnerabilities. Note that text direction-changing unicode control characters\
        \ aren't inherently malicious. These characters can appear for legitimate\
        \ reasons in code written in or dealing with right-to-left languages. See:\
        \ https://trojansource.codes/ for more information."
      docLink: "https://docs.openrewrite.org/recipes/java/security/findtextdirectionchanges"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.FixCwe338:
      name: "org.openrewrite.java.security.FixCwe338"
      description: "Use a cryptographically strong pseudo-random number generator\
        \ (PRNG)."
      docLink: "https://docs.openrewrite.org/recipes/java/security/fixcwe338"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.ImproperPrivilegeManagement:
      name: "org.openrewrite.java.security.ImproperPrivilegeManagement"
      description: "Marking code as privileged enables a piece of trusted code to\
        \ temporarily enable access to more resources than are available directly\
        \ to the code that called it."
      docLink: "https://docs.openrewrite.org/recipes/java/security/improperprivilegemanagement"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.JavaSecurityBestPractices:
      name: "org.openrewrite.java.security.JavaSecurityBestPractices"
      description: "Applies security best practices to Java code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/javasecuritybestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.OwaspA01:
      name: "org.openrewrite.java.security.OwaspA01"
      description: "OWASP [A01:2021](https://owasp.org/Top10/A01_2021-Broken_Access_Control/)\
        \ describes failures related to broken access control."
      docLink: "https://docs.openrewrite.org/recipes/java/security/owaspa01"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.OwaspA02:
      name: "org.openrewrite.java.security.OwaspA02"
      description: "OWASP [A02:2021](https://owasp.org/Top10/A02_2021-Cryptographic_Failures/)\
        \ describes failures related to cryptography (or lack thereof), which often\
        \ lead to exposure of sensitive data. This recipe seeks to remediate these\
        \ vulnerabilities."
      docLink: "https://docs.openrewrite.org/recipes/java/security/owaspa02"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.OwaspA03:
      name: "org.openrewrite.java.security.OwaspA03"
      description: "OWASP [A03:2021](https://owasp.org/Top10/A03_2021-Injection/)\
        \ describes failures related to user-supplied data being used to influence\
        \ program state to operate outside of its intended bounds. This recipe seeks\
        \ to remediate these vulnerabilities."
      docLink: "https://docs.openrewrite.org/recipes/java/security/owaspa03"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.OwaspA05:
      name: "org.openrewrite.java.security.OwaspA05"
      description: "OWASP [A05:2021](https://owasp.org/Top10/A05_2021-Security_Misconfiguration/)\
        \ describes failures related to security misconfiguration."
      docLink: "https://docs.openrewrite.org/recipes/java/security/owaspa05"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.OwaspA06:
      name: "org.openrewrite.java.security.OwaspA06"
      description: "OWASP [A06:2021](https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/)\
        \ describes failures related to vulnerable and outdated components."
      docLink: "https://docs.openrewrite.org/recipes/java/security/owaspa06"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.OwaspA08:
      name: "org.openrewrite.java.security.OwaspA08"
      description: "OWASP [A08:2021](https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/)\
        \ software and data integrity failures."
      docLink: "https://docs.openrewrite.org/recipes/java/security/owaspa08"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.OwaspTopTen:
      name: "org.openrewrite.java.security.OwaspTopTen"
      description: "[OWASP](https://owasp.org) publishes a list of the most impactful\
        \ common security vulnerabilities. These recipes identify and remediate vulnerabilities\
        \ from the OWASP Top Ten."
      docLink: "https://docs.openrewrite.org/recipes/java/security/owasptopten"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.PartialPathTraversalVulnerability:
      name: "org.openrewrite.java.security.PartialPathTraversalVulnerability"
      description: "Replaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath()`,\
        \ which is vulnerable to partial path traversal attacks, with the more secure\
        \ `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.\n\
        \nTo demonstrate this vulnerability, consider `\"/usr/outnot\".startsWith(\"\
        /usr/out\")`. The check is bypassed although `/outnot` is not under the `/out`\
        \ directory. It's important to understand that the terminating slash may be\
        \ removed when using various `String` representations of the `File` object.\
        \ For example, on Linux, `println(new File(\"/var\"))` will print `/var`,\
        \ but `println(new File(\"/var\", \"/\")` will print `/var/`; however, `println(new\
        \ File(\"/var\", \"/\").getCanonicalPath())` will print `/var`."
      docLink: "https://docs.openrewrite.org/recipes/java/security/partialpathtraversalvulnerability"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.RegularExpressionDenialOfService:
      name: "org.openrewrite.java.security.RegularExpressionDenialOfService"
      description: "ReDoS is a Denial of Service attack that exploits the fact that\
        \ most Regular Expression implementations may reach extreme situations that\
        \ cause them to work very slowly (exponentially related to input size). See\
        \ the OWASP description of this attack [here](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\
        \ for more details."
      docLink: "https://docs.openrewrite.org/recipes/java/security/regularexpressiondenialofservice"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.SecureRandom:
      name: "org.openrewrite.java.security.SecureRandom"
      description: "Use cryptographically secure Pseudo Random Number Generation in\
        \ the \"main\" source set. Replaces instantiation of `java.util.Random` with\
        \ `java.security.SecureRandom`."
      docLink: "https://docs.openrewrite.org/recipes/java/security/securerandom"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.SecureRandomPrefersDefaultSeed:
      name: "org.openrewrite.java.security.SecureRandomPrefersDefaultSeed"
      description: "Remove `SecureRandom#setSeed(*)` method invocations having constant\
        \ or predictable arguments."
      docLink: "https://docs.openrewrite.org/recipes/java/security/securerandomprefersdefaultseed"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.SecureTempFileCreation:
      name: "org.openrewrite.java.security.SecureTempFileCreation"
      description: "`java.io.File.createTempFile()` has exploitable default file permissions.\
        \ This recipe migrates to the more secure `java.nio.file.Files.createTempFile()`."
      docLink: "https://docs.openrewrite.org/recipes/java/security/securetempfilecreation"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.UseFilesCreateTempDirectory:
      name: "org.openrewrite.java.security.UseFilesCreateTempDirectory"
      description: "Use `Files#createTempDirectory` when the sequence `File#createTempFile(..)`->`File#delete()`->`File#mkdir()`\
        \ is used for creating a temp directory."
      docLink: "https://docs.openrewrite.org/recipes/java/security/usefilescreatetempdirectory"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.XmlParserXXEVulnerability:
      name: "org.openrewrite.java.security.XmlParserXXEVulnerability"
      description: "Avoid exposing dangerous features of the XML parser by updating\
        \ certain factory settings."
      docLink: "https://docs.openrewrite.org/recipes/java/security/xmlparserxxevulnerability"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.ZipSlip:
      name: "org.openrewrite.java.security.ZipSlip"
      description: "Zip slip is an arbitrary file overwrite critical vulnerability,\
        \ which typically results in remote command execution. A fuller description\
        \ of this vulnerability is available in the [Snyk documentation](https://snyk.io/research/zip-slip-vulnerability)\
        \ on it."
      docLink: "https://docs.openrewrite.org/recipes/java/security/zipslip"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.marshalling.InsecureJmsDeserialization:
      name: "org.openrewrite.java.security.marshalling.InsecureJmsDeserialization"
      description: "JMS `Object` messages depend on Java Serialization for marshalling/unmarshalling\
        \ of the message payload when `ObjectMessage#getObject` is called. Deserialization\
        \ of untrusted data can lead to security flaws."
      docLink: "https://docs.openrewrite.org/recipes/java/security/marshalling/insecurejmsdeserialization"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.marshalling.SecureJacksonDefaultTyping:
      name: "org.openrewrite.java.security.marshalling.SecureJacksonDefaultTyping"
      description: "See the [blog post](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\
        \ on this subject."
      docLink: "https://docs.openrewrite.org/recipes/java/security/marshalling/securejacksondefaulttyping"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.marshalling.SecureSnakeYamlConstructor:
      name: "org.openrewrite.java.security.marshalling.SecureSnakeYamlConstructor"
      description: "See the [paper](https://github.com/mbechler/marshalsec) on this\
        \ subject."
      docLink: "https://docs.openrewrite.org/recipes/java/security/marshalling/securesnakeyamlconstructor"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.search.FindJacksonDefaultTypeMapping:
      name: "org.openrewrite.java.security.search.FindJacksonDefaultTypeMapping"
      description: "`ObjectMapper#enableTypeMapping(..)` can lead to vulnerable deserialization."
      docLink: "https://docs.openrewrite.org/recipes/java/security/search/findjacksondefaulttypemapping"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.search.FindSensitiveApiEndpoints:
      name: "org.openrewrite.java.security.search.FindSensitiveApiEndpoints"
      description: "Find data models exposed by REST APIs that contain sensitive information\
        \ like PII and secrets."
      docLink: "https://docs.openrewrite.org/recipes/java/security/search/findsensitiveapiendpoints"
      options:
      - name: "fieldNames"
        type: "List"
        required: true
      - name: "transitive"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.search.FindVulnerableJacksonJsonTypeInfo:
      name: "org.openrewrite.java.security.search.FindVulnerableJacksonJsonTypeInfo"
      description: "Identify where attackers can deserialize gadgets into a target\
        \ field."
      docLink: "https://docs.openrewrite.org/recipes/java/security/search/findvulnerablejacksonjsontypeinfo"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindArtifactorySecrets:
      name: "org.openrewrite.java.security.secrets.FindArtifactorySecrets"
      description: "Locates Artifactory secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findartifactorysecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindAwsSecrets:
      name: "org.openrewrite.java.security.secrets.FindAwsSecrets"
      description: "Locates AWS secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findawssecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindAzureSecrets:
      name: "org.openrewrite.java.security.secrets.FindAzureSecrets"
      description: "Locates Azure secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findazuresecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindDiscordSecrets:
      name: "org.openrewrite.java.security.secrets.FindDiscordSecrets"
      description: "Locates Discord secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/finddiscordsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindFacebookSecrets:
      name: "org.openrewrite.java.security.secrets.FindFacebookSecrets"
      description: "Locates Facebook secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findfacebooksecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindGenericSecrets:
      name: "org.openrewrite.java.security.secrets.FindGenericSecrets"
      description: "Locates generic secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findgenericsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindGitHubSecrets:
      name: "org.openrewrite.java.security.secrets.FindGitHubSecrets"
      description: "Locates GitHub secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findgithubsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindGoogleSecrets:
      name: "org.openrewrite.java.security.secrets.FindGoogleSecrets"
      description: "Locates Google secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findgooglesecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindHerokuSecrets:
      name: "org.openrewrite.java.security.secrets.FindHerokuSecrets"
      description: "Locates Heroku secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findherokusecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindJwtSecrets:
      name: "org.openrewrite.java.security.secrets.FindJwtSecrets"
      description: "Locates JWTs stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findjwtsecrets"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindMailChimpSecrets:
      name: "org.openrewrite.java.security.secrets.FindMailChimpSecrets"
      description: "Locates MailChimp secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findmailchimpsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindMailgunSecrets:
      name: "org.openrewrite.java.security.secrets.FindMailgunSecrets"
      description: "Locates Mailgun secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findmailgunsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindNpmSecrets:
      name: "org.openrewrite.java.security.secrets.FindNpmSecrets"
      description: "Locates NPM secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findnpmsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindPasswordInUrlSecrets:
      name: "org.openrewrite.java.security.secrets.FindPasswordInUrlSecrets"
      description: "Locates URLs that contain passwords in plain text."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findpasswordinurlsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindPayPalSecrets:
      name: "org.openrewrite.java.security.secrets.FindPayPalSecrets"
      description: "Locates PayPal secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findpaypalsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindPgpSecrets:
      name: "org.openrewrite.java.security.secrets.FindPgpSecrets"
      description: "Locates PGP secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findpgpsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindPicaticSecrets:
      name: "org.openrewrite.java.security.secrets.FindPicaticSecrets"
      description: "Locates Picatic secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findpicaticsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindRsaSecrets:
      name: "org.openrewrite.java.security.secrets.FindRsaSecrets"
      description: "Locates RSA private keys stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findrsasecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindSecrets:
      name: "org.openrewrite.java.security.secrets.FindSecrets"
      description: "Locates secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindSecretsByPattern:
      name: "org.openrewrite.java.security.secrets.FindSecretsByPattern"
      description: "A secret is a literal that matches any one of the provided patterns."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findsecretsbypattern"
      options:
      - name: "keyPattern"
        type: "String"
        required: false
      - name: "secretName"
        type: "String"
        required: true
      - name: "valuePattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindSendGridSecrets:
      name: "org.openrewrite.java.security.secrets.FindSendGridSecrets"
      description: "Locates SendGrid secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findsendgridsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindSlackSecrets:
      name: "org.openrewrite.java.security.secrets.FindSlackSecrets"
      description: "Locates Slack secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findslacksecrets"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindSquareSecrets:
      name: "org.openrewrite.java.security.secrets.FindSquareSecrets"
      description: "Locates Square secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findsquaresecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindSshSecrets:
      name: "org.openrewrite.java.security.secrets.FindSshSecrets"
      description: "Locates SSH secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findsshsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindStripeSecrets:
      name: "org.openrewrite.java.security.secrets.FindStripeSecrets"
      description: "Locates Stripe secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findstripesecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindTelegramSecrets:
      name: "org.openrewrite.java.security.secrets.FindTelegramSecrets"
      description: "Locates Telegram secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findtelegramsecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindTwilioSecrets:
      name: "org.openrewrite.java.security.secrets.FindTwilioSecrets"
      description: "Locates Twilio secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findtwiliosecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.secrets.FindTwitterSecrets:
      name: "org.openrewrite.java.security.secrets.FindTwitterSecrets"
      description: "Locates Twitter secrets stored in plain text in code."
      docLink: "https://docs.openrewrite.org/recipes/java/security/secrets/findtwittersecrets"
      options: []
      isImperative: false
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.servlet.CookieSetSecure:
      name: "org.openrewrite.java.security.servlet.CookieSetSecure"
      description: "Check for use of insecure cookies. Cookies should be marked as\
        \ secure. This ensures that the cookie is sent only over HTTPS to prevent\
        \ cross-site scripting attacks."
      docLink: "https://docs.openrewrite.org/recipes/java/security/servlet/cookiesetsecure"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.spring.CsrfProtection:
      name: "org.openrewrite.java.security.spring.CsrfProtection"
      description: "Cross-Site Request Forgery (CSRF) is a type of attack that occurs\
        \ when a malicious web site, email, blog, instant message, or program causes\
        \ a user's web browser to perform an unwanted action on a trusted site when\
        \ the user is authenticated. See the full [OWASP cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)."
      docLink: "https://docs.openrewrite.org/recipes/java/security/spring/csrfprotection"
      options:
      - name: "onlyIfSecurityConfig"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.spring.InsecureSpringServiceExporter:
      name: "org.openrewrite.java.security.spring.InsecureSpringServiceExporter"
      description: "The default Java deserialization mechanism is available via `ObjectInputStream`\
        \ class. This mechanism is known to be vulnerable. If an attacker can make\
        \ an application deserialize malicious data, it may result in arbitrary code\
        \ execution.\n\nSpring’s `RemoteInvocationSerializingExporter` uses the default\
        \ Java deserialization mechanism to parse data. As a result, all classes that\
        \ extend it are vulnerable to deserialization attacks. The Spring Framework\
        \ contains at least `HttpInvokerServiceExporter` and `SimpleHttpInvokerServiceExporter`\
        \ that extend `RemoteInvocationSerializingExporter`. These exporters parse\
        \ data from the HTTP body using the unsafe Java deserialization mechanism.\n\
        \nSee the full [blog post](https://blog.gypsyengineer.com/en/security/detecting-dangerous-spring-exporters-with-codeql.html)\
        \ by Artem Smotrakov on CVE-2016-1000027 from which the above description\
        \ is excerpted."
      docLink: "https://docs.openrewrite.org/recipes/java/security/spring/insecurespringserviceexporter"
      options: []
      isImperative: true
      artifactId: "rewrite-java-security"
    org.openrewrite.java.security.spring.PreventClickjacking:
      name: "org.openrewrite.java.security.spring.PreventClickjacking"
      description: "The `frame-ancestors` directive can be used in a Content-Security-Policy\
        \ HTTP response header to indicate whether or not a browser should be allowed\
        \ to render a page in a `<frame>` or `<iframe>`. Sites can use this to avoid\
        \ Clickjacking attacks by ensuring that their content is not embedded into\
        \ other sites."
      docLink: "https://docs.openrewrite.org/recipes/java/security/spring/preventclickjacking"
      options:
      - name: "onlyIfSecurityConfig"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-java-security"
rewrite-jenkins:
  artifactId: "rewrite-jenkins"
  version: "0.22.0"
  markdownRecipeDescriptors:
    org.openrewrite.java.testing.htmlunit.UpgradeHtmlUnit_3:
      name: "org.openrewrite.java.testing.htmlunit.UpgradeHtmlUnit_3"
      description: "Automates the HtmlUnit [migration guide](https://htmlunit.sourceforge.io/migration.html)\
        \ from 2.x to 3.x."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/htmlunit/upgradehtmlunit_3"
      options: []
      isImperative: false
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.AddJellyXmlDeclaration:
      name: "org.openrewrite.jenkins.AddJellyXmlDeclaration"
      description: "Ensure the XML declaration `<?jelly escape-by-default='true'?>`\
        \ is present in all `.jelly` files."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/addjellyxmldeclaration"
      options: []
      isImperative: true
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.AddPluginsBom:
      name: "org.openrewrite.jenkins.AddPluginsBom"
      description: "Adds [Jenkins plugins BOM](https://www.jenkins.io/doc/developer/plugin-development/dependency-management/#jenkins-plugin-bom)\
        \ at the latest release if the project depends on any managed versions or\
        \ an outdated BOM is present. BOMs are expected to be synchronized to Jenkins\
        \ LTS versions, so this will also remove any mismatched BOMs (Such as using\
        \ Jenkins 2.387.3, but importing bom-2.319.x). If the expected BOM is already\
        \ added, the version will not be upgraded."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/addpluginsbom"
      options: []
      isImperative: true
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.CommonsLang3ToApiPlugin:
      name: "org.openrewrite.jenkins.CommonsLang3ToApiPlugin"
      description: "Updates `pom.xml` to depend on `commons-lang3-api` and exclude\
        \ `commons-lang3` where it is brought in transitively."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/commonslang3toapiplugin"
      options: []
      isImperative: false
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.CreateIndexJelly:
      name: "org.openrewrite.jenkins.CreateIndexJelly"
      description: "Jenkins tooling [requires](https://github.com/jenkinsci/maven-hpi-plugin/pull/302)\
        \ `src/main/resources/index.jelly` exists with a description."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/createindexjelly"
      options: []
      isImperative: true
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.DisableLocalResolutionForParentPom:
      name: "org.openrewrite.jenkins.DisableLocalResolutionForParentPom"
      description: "Explicitly sets `<relativePath/>` to disable file resolution,\
        \ as recommended in the [plugin development guide](https://www.jenkins.io/doc/developer/plugin-development/updating-parent/)."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/disablelocalresolutionforparentpom"
      options: []
      isImperative: true
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.IsJenkinsPlugin:
      name: "org.openrewrite.jenkins.IsJenkinsPlugin"
      description: "Checks if the project is a Jenkins plugin by the presence of a\
        \ managed version of jenkins-core"
      docLink: "https://docs.openrewrite.org/recipes/jenkins/isjenkinsplugin"
      options:
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.JavaxAnnotationsToSpotbugs:
      name: "org.openrewrite.jenkins.JavaxAnnotationsToSpotbugs"
      description: "SpotBugs is the [preferred replacement](https://www.jenkins.io/doc/developer/tutorial-improve/replace-jsr-305-annotations/)\
        \ of JSR-305 annotations for Jenkins plugins."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/javaxannotationstospotbugs"
      options: []
      isImperative: false
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.ModernizeJenkinsfile:
      name: "org.openrewrite.jenkins.ModernizeJenkinsfile"
      description: "Updates `Jenkinsfile` to build with recommended Java versions,\
        \ platforms, and settings."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/modernizejenkinsfile"
      options: []
      isImperative: false
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.ModernizePlugin:
      name: "org.openrewrite.jenkins.ModernizePlugin"
      description: "This recipe is intended to change over time to reflect the recommended\
        \ tooling and [recommended Jenkins baseline](https://www.jenkins.io/doc/developer/plugin-development/choosing-jenkins-baseline/)."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/modernizeplugin"
      options: []
      isImperative: false
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.ModernizePluginForJava8:
      name: "org.openrewrite.jenkins.ModernizePluginForJava8"
      description: "This recipe is intended to break down the modernization of very\
        \ old plugins into distinct steps. It allows modernizing all tooling up to\
        \ the last versions that supported Java 8. This can then be followed by another\
        \ recipe that makes the jump to Java 11."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/modernizepluginforjava8"
      options: []
      isImperative: false
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin:
      name: "org.openrewrite.jenkins.ReplaceLibrariesWithApiPlugin"
      description: "Prefer Jenkins API plugins over bundling libraries for slimmer\
        \ plugins."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/replacelibrarieswithapiplugin"
      options:
      - name: "pluginArtifactId"
        type: "String"
        required: true
      - name: "pluginGroupId"
        type: "String"
        required: true
      - name: "pluginVersion"
        type: "String"
        required: true
      - name: "replaces"
        type: "Set"
        required: true
      isImperative: true
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.UpgradeJavaVersion:
      name: "org.openrewrite.jenkins.UpgradeJavaVersion"
      description: "Upgrades the version of java specified in Jenkins groovy scripts.\
        \ Will not downgrade if the version is newer than the specified version."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/upgradejavaversion"
      options:
      - name: "distribution"
        type: "String"
        required: true
      - name: "version"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.UpgradeVersionProperty:
      name: "org.openrewrite.jenkins.UpgradeVersionProperty"
      description: "If the current value is < given version, upgrade it."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/upgradeversionproperty"
      options:
      - name: "key"
        type: "String"
        required: true
      - name: "minimumVersion"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.github.AddTeamToCodeowners:
      name: "org.openrewrite.jenkins.github.AddTeamToCodeowners"
      description: "Adds the `{artifactId}-plugin-developers` team to all files in\
        \ `.github/CODEOWNERS` if absent."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/github/addteamtocodeowners"
      options: []
      isImperative: true
      artifactId: "rewrite-jenkins"
    org.openrewrite.jenkins.migrate.hudson.UtilGetPastTimeStringToGetTimeSpanString:
      name: "org.openrewrite.jenkins.migrate.hudson.UtilGetPastTimeStringToGetTimeSpanString"
      description: "`hudson.Util.getPastTimeString` has been [deprecated](https://github.com/jenkinsci/jenkins/pull/4174)\
        \ since the [2.204.1 LTS release](https://www.jenkins.io/changelog-stable/#v2.204.1)\
        \ on 2019-12-18."
      docLink: "https://docs.openrewrite.org/recipes/jenkins/migrate/hudson/utilgetpasttimestringtogettimespanstring"
      options: []
      isImperative: false
      artifactId: "rewrite-jenkins"
rewrite-json:
  artifactId: "rewrite-json"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.json.AddKeyValue:
      name: "org.openrewrite.json.AddKeyValue"
      description: "Adds a `value` at the specified `keyPath` with the specified `key`,\
        \ if the key doesn't already exist."
      docLink: "https://docs.openrewrite.org/recipes/json/addkeyvalue"
      options:
      - name: "key"
        type: "String"
        required: true
      - name: "keyPath"
        type: "String"
        required: true
      - name: "prepend"
        type: "boolean"
        required: false
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-json"
    org.openrewrite.json.ChangeKey:
      name: "org.openrewrite.json.ChangeKey"
      description: "Change a JSON mapping entry key, while leaving the value intact."
      docLink: "https://docs.openrewrite.org/recipes/json/changekey"
      options:
      - name: "newKey"
        type: "String"
        required: true
      - name: "oldKeyPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-json"
    org.openrewrite.json.ChangeValue:
      name: "org.openrewrite.json.ChangeValue"
      description: "Change a JSON mapping entry value leaving the key intact."
      docLink: "https://docs.openrewrite.org/recipes/json/changevalue"
      options:
      - name: "oldKeyPath"
        type: "String"
        required: true
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-json"
    org.openrewrite.json.DeleteKey:
      name: "org.openrewrite.json.DeleteKey"
      description: "Delete a JSON mapping entry key."
      docLink: "https://docs.openrewrite.org/recipes/json/deletekey"
      options:
      - name: "keyPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-json"
    org.openrewrite.json.format.AutoFormat:
      name: "org.openrewrite.json.format.AutoFormat"
      description: "Format JSON code using a standard comprehensive set of JSON formatting\
        \ recipes."
      docLink: "https://docs.openrewrite.org/recipes/json/format/autoformat"
      options: []
      isImperative: true
      artifactId: "rewrite-json"
    org.openrewrite.json.format.Indents:
      name: "org.openrewrite.json.format.Indents"
      description: "Format tabs and indents in JSON."
      docLink: "https://docs.openrewrite.org/recipes/json/format/indents"
      options: []
      isImperative: true
      artifactId: "rewrite-json"
    org.openrewrite.json.format.WrappingAndBraces:
      name: "org.openrewrite.json.format.WrappingAndBraces"
      description: "Split members into separate lines in JSON."
      docLink: "https://docs.openrewrite.org/recipes/json/format/wrappingandbraces"
      options: []
      isImperative: true
      artifactId: "rewrite-json"
    org.openrewrite.json.search.FindKey:
      name: "org.openrewrite.json.search.FindKey"
      description: "Find JSON object members by JsonPath expression."
      docLink: "https://docs.openrewrite.org/recipes/json/search/findkey"
      options:
      - name: "key"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-json"
rewrite-kotlin:
  artifactId: "rewrite-kotlin"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.kotlin.FindKotlinSources:
      name: "org.openrewrite.kotlin.FindKotlinSources"
      description: "Use data table to collect source files types and counts of files\
        \ with extensions `.kt`."
      docLink: "https://docs.openrewrite.org/recipes/kotlin/findkotlinsources"
      options:
      - name: "markCompilationUnits"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-kotlin"
    org.openrewrite.kotlin.RenameTypeAlias:
      name: "org.openrewrite.kotlin.RenameTypeAlias"
      description: "Change the name of a given type alias."
      docLink: "https://docs.openrewrite.org/recipes/kotlin/renametypealias"
      options:
      - name: "aliasName"
        type: "String"
        required: true
      - name: "fullyQualifiedAliasedType"
        type: "String"
        required: true
      - name: "newName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-kotlin"
    org.openrewrite.kotlin.cleanup.EqualsMethodUsage:
      name: "org.openrewrite.kotlin.cleanup.EqualsMethodUsage"
      description: "In Kotlin, `==` means structural equality and `!=` structural\
        \ inequality and both map to the left-side term’s `equals()` function. It\
        \ is, therefore, redundant to call `equals()` as a function. Also, `==` and\
        \ `!=` are more general than `equals()` and `!equals()` because it allows\
        \ either of both operands to be `null`.\nDevelopers using `equals()` instead\
        \ of `==` or `!=` is often the result of adapting styles from other languages\
        \ like Java, where `==` means reference equality and `!=` means reference\
        \ inequality.\nThe `==` and `!=` operators are a more concise and elegant\
        \ way to test structural equality than calling a function."
      docLink: "https://docs.openrewrite.org/recipes/kotlin/cleanup/equalsmethodusage"
      options: []
      isImperative: true
      artifactId: "rewrite-kotlin"
    org.openrewrite.kotlin.cleanup.ImplicitParameterInLambda:
      name: "org.openrewrite.kotlin.cleanup.ImplicitParameterInLambda"
      description: "`it` is a special identifier that allows you to refer to the current\
        \ parameter being passed to a lambda expression without explicitly naming\
        \ the parameter. Lambda expressions are a concise way of writing anonymous\
        \ functions. Many lambda expressions have only one parameter, when this is\
        \ true the compiler can determine the parameter type by context. Thus when\
        \ using it with single parameter lambda expressions, you do not need to declare\
        \ the type."
      docLink: "https://docs.openrewrite.org/recipes/kotlin/cleanup/implicitparameterinlambda"
      options: []
      isImperative: true
      artifactId: "rewrite-kotlin"
    org.openrewrite.kotlin.cleanup.RemoveTrailingComma:
      name: "org.openrewrite.kotlin.cleanup.RemoveTrailingComma"
      description: "Remove trailing commas in variable, parameter, and class property\
        \ lists."
      docLink: "https://docs.openrewrite.org/recipes/kotlin/cleanup/removetrailingcomma"
      options: []
      isImperative: true
      artifactId: "rewrite-kotlin"
    org.openrewrite.kotlin.cleanup.RemoveTrailingSemicolon:
      name: "org.openrewrite.kotlin.cleanup.RemoveTrailingSemicolon"
      description: "Some Java programmers may mistakenly add semicolons at the end\
        \ when writing Kotlin code, but in reality, they are not necessary."
      docLink: "https://docs.openrewrite.org/recipes/kotlin/cleanup/removetrailingsemicolon"
      options: []
      isImperative: true
      artifactId: "rewrite-kotlin"
    org.openrewrite.kotlin.cleanup.ReplaceCharToIntWithCode:
      name: "org.openrewrite.kotlin.cleanup.ReplaceCharToIntWithCode"
      description: "Replace the usage of the deprecated `Char#toInt()` with `Char#code`.\
        \ Please ensure that your Kotlin version is 1.5 or later to support the `Char#code`\
        \ property. Note that the current implementation does not perform a Kotlin\
        \ version check."
      docLink: "https://docs.openrewrite.org/recipes/kotlin/cleanup/replacechartointwithcode"
      options: []
      isImperative: true
      artifactId: "rewrite-kotlin"
    org.openrewrite.kotlin.cleanup.UnnecessaryTypeParentheses:
      name: "org.openrewrite.kotlin.cleanup.UnnecessaryTypeParentheses"
      description: "In Kotlin, it's possible to add redundant nested parentheses in\
        \ type definitions. This recipe is designed to remove those unnecessary parentheses."
      docLink: "https://docs.openrewrite.org/recipes/kotlin/cleanup/unnecessarytypeparentheses"
      options: []
      isImperative: true
      artifactId: "rewrite-kotlin"
    org.openrewrite.kotlin.format.AutoFormat:
      name: "org.openrewrite.kotlin.format.AutoFormat"
      description: "Format Kotlin code using a standard comprehensive set of Kotlin\
        \ formatting recipes."
      docLink: "https://docs.openrewrite.org/recipes/kotlin/format/autoformat"
      options: []
      isImperative: true
      artifactId: "rewrite-kotlin"
rewrite-kubernetes:
  artifactId: "rewrite-kubernetes"
  version: "3.2.2"
  markdownRecipeDescriptors:
    org.openrewrite.kubernetes.AddConfiguration:
      name: "org.openrewrite.kubernetes.AddConfiguration"
      description: "Add default required configuration when it is missing."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/addconfiguration"
      options:
      - name: "apiVersion"
        type: "String"
        required: false
      - name: "configurationPath"
        type: "String"
        required: true
      - name: "resourceKind"
        type: "String"
        required: true
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.ChangeApiVersion:
      name: "org.openrewrite.kubernetes.ChangeApiVersion"
      description: "Change the Kubernetes API version in a resource."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/changeapiversion"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "newApiVersion"
        type: "String"
        required: true
      - name: "oldApiVersion"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.ImagePullPolicyAlways:
      name: "org.openrewrite.kubernetes.ImagePullPolicyAlways"
      description: "Ensures the latest version of a tag is deployed each time."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/imagepullpolicyalways"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.KubernetesBestPractices:
      name: "org.openrewrite.kubernetes.KubernetesBestPractices"
      description: "Applies best practices to Kubernetes manifests."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/kubernetesbestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.LifecycleRuleOnStorageBucket:
      name: "org.openrewrite.kubernetes.LifecycleRuleOnStorageBucket"
      description: "When defining a rule, you can specify any set of conditions for\
        \ any action. The following configuration defines a rule to delete all objects\
        \ older than 7 days in a bucket."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/lifecycleruleonstoragebucket"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.LimitContainerCapabilities:
      name: "org.openrewrite.kubernetes.LimitContainerCapabilities"
      description: "Limiting the admission of containers with capabilities ensures\
        \ that only a small number of containers have extended capabilities outside\
        \ the default range."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/limitcontainercapabilities"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.MissingCpuLimits:
      name: "org.openrewrite.kubernetes.MissingCpuLimits"
      description: "A system without managed quotas could eventually collapse due\
        \ to inadequate resources for the tasks it bares."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/missingcpulimits"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.MissingCpuRequest:
      name: "org.openrewrite.kubernetes.MissingCpuRequest"
      description: "If a container is created in a namespace that has a default CPU\
        \ limit, and the container does not specify its own CPU limit, then the container\
        \ is assigned the default CPU limit."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/missingcpurequest"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.MissingMemoryLimits:
      name: "org.openrewrite.kubernetes.MissingMemoryLimits"
      description: "With no limit set, kubectl allocates more and more memory to the\
        \ container until it runs out."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/missingmemorylimits"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.MissingMemoryRequest:
      name: "org.openrewrite.kubernetes.MissingMemoryRequest"
      description: "A container is guaranteed to have as much memory as it requests,\
        \ but is not allowed to use more memory than the limit set. This configuration\
        \ may save resources and prevent an attack on an exploited container."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/missingmemoryrequest"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.MissingPodLivenessProbe:
      name: "org.openrewrite.kubernetes.MissingPodLivenessProbe"
      description: "The kubelet uses liveness probes to know when to schedule restarts\
        \ for containers. Restarting a container in a deadlock state can help to make\
        \ the application more available, despite bugs."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/missingpodlivenessprobe"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.MissingPodReadinessProbe:
      name: "org.openrewrite.kubernetes.MissingPodReadinessProbe"
      description: "Using the Readiness Probe ensures teams define what actions need\
        \ to be taken to prevent failure and ensure recovery in case of unexpected\
        \ errors."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/missingpodreadinessprobe"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.NoHostIPCSharing:
      name: "org.openrewrite.kubernetes.NoHostIPCSharing"
      description: "Preventing sharing of host PID/IPC namespace, networking, and\
        \ ports ensures proper isolation between Docker containers and the underlying\
        \ host."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/nohostipcsharing"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.NoHostNetworkSharing:
      name: "org.openrewrite.kubernetes.NoHostNetworkSharing"
      description: "When using the host network mode for a container, that container’\
        s network stack is not isolated from the Docker host, so the container shares\
        \ the host’s networking namespace and does not get its own IP-address allocation."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/nohostnetworksharing"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.NoHostProcessIdSharing:
      name: "org.openrewrite.kubernetes.NoHostProcessIdSharing"
      description: "Sharing the host process ID namespace breaks the isolation between\
        \ container images and can make processes visible to other containers in the\
        \ pod. This includes all information in the /proc directory, which can sometimes\
        \ include passwords or keys, passed as environment variables."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/nohostprocessidsharing"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.NoPrivilegeEscalation:
      name: "org.openrewrite.kubernetes.NoPrivilegeEscalation"
      description: "Does not allow a process to gain more privileges than its parent\
        \ process."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/noprivilegeescalation"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.NoPrivilegedContainers:
      name: "org.openrewrite.kubernetes.NoPrivilegedContainers"
      description: "Privileged containers are containers that have all of the root\
        \ capabilities of a host machine, allowing access to resources that are not\
        \ accessible in ordinary containers."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/noprivilegedcontainers"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.NoRootContainers:
      name: "org.openrewrite.kubernetes.NoRootContainers"
      description: "Containers that run as root frequently have more permissions than\
        \ their workload requires which, in case of compromise, could help an attacker\
        \ further their exploits."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/norootcontainers"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.ReadOnlyRootFilesystem:
      name: "org.openrewrite.kubernetes.ReadOnlyRootFilesystem"
      description: "Using an immutable root filesystem and a verified boot mechanism\
        \ prevents against attackers from \"owning\" the machine through permanent\
        \ local changes."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/readonlyrootfilesystem"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.UpdateContainerImageName:
      name: "org.openrewrite.kubernetes.UpdateContainerImageName"
      description: "Search for image names that match patterns and replace the components\
        \ of the name with new values."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/updatecontainerimagename"
      options:
      - name: "digestToFind"
        type: "String"
        required: false
      - name: "digestToUpdate"
        type: "String"
        required: false
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "imageToFind"
        type: "String"
        required: true
      - name: "imageToUpdate"
        type: "String"
        required: false
      - name: "includeInitContainers"
        type: "boolean"
        required: false
      - name: "repoToFind"
        type: "String"
        required: false
      - name: "repoToUpdate"
        type: "String"
        required: false
      - name: "tagToFind"
        type: "String"
        required: false
      - name: "tagToUpdate"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.migrate.MigrateToAPIv1_16:
      name: "org.openrewrite.kubernetes.migrate.MigrateToAPIv1_16"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Kubernetes API v1.16."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/migrate/migratetoapiv1_16"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.migrate.MigrateToAPIv1_22:
      name: "org.openrewrite.kubernetes.migrate.MigrateToAPIv1_22"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Kubernetes API v1.22."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/migrate/migratetoapiv1_22"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.migrate.MigrateToAPIv1_25:
      name: "org.openrewrite.kubernetes.migrate.MigrateToAPIv1_25"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Kubernetes API v1.25."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/migrate/migratetoapiv1_25"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.migrate.MigrateToAPIv1_26:
      name: "org.openrewrite.kubernetes.migrate.MigrateToAPIv1_26"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Kubernetes API v1.26."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/migrate/migratetoapiv1_26"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.migrate.MigrateToAPIv1_27:
      name: "org.openrewrite.kubernetes.migrate.MigrateToAPIv1_27"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Kubernetes API v1.27."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/migrate/migratetoapiv1_27"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.migrate.MigrateToAPIv1_29:
      name: "org.openrewrite.kubernetes.migrate.MigrateToAPIv1_29"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Kubernetes API v1.29."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/migrate/migratetoapiv1_29"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.migrate.MigrateToAPIv1_32:
      name: "org.openrewrite.kubernetes.migrate.MigrateToAPIv1_32"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Kubernetes API v1.32."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/migrate/migratetoapiv1_32"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.rbac.AddRuleToRole:
      name: "org.openrewrite.kubernetes.rbac.AddRuleToRole"
      description: "Add RBAC rules to ClusterRoles or namespaced Roles."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/rbac/addruletorole"
      options:
      - name: "apiGroups"
        type: "Set"
        required: true
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "rbacResourceName"
        type: "String"
        required: true
      - name: "rbacResourceType"
        type: "String"
        required: true
      - name: "resourceNames"
        type: "Set"
        required: false
      - name: "resources"
        type: "Set"
        required: true
      - name: "verbs"
        type: "Set"
        required: true
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.resource.CapResourceValueToMaximum:
      name: "org.openrewrite.kubernetes.resource.CapResourceValueToMaximum"
      description: "Cap resource values that exceed a specific maximum."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/resource/capresourcevaluetomaximum"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "resourceLimit"
        type: "String"
        required: true
      - name: "resourceType"
        type: "String"
        required: true
      - name: "resourceValueType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.resource.FindExceedsResourceRatio:
      name: "org.openrewrite.kubernetes.resource.FindExceedsResourceRatio"
      description: "Find resource manifests that have requests to limits ratios beyond\
        \ a specific maximum."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/resource/findexceedsresourceratio"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "ratioLimit"
        type: "String"
        required: true
      - name: "resourceType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.resource.FindExceedsResourceValue:
      name: "org.openrewrite.kubernetes.resource.FindExceedsResourceValue"
      description: "Find resource manifests that have limits set beyond a specific\
        \ maximum."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/resource/findexceedsresourcevalue"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "resourceLimit"
        type: "String"
        required: true
      - name: "resourceType"
        type: "String"
        required: true
      - name: "resourceValueType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.search.FindAnnotation:
      name: "org.openrewrite.kubernetes.search.FindAnnotation"
      description: "Find annotations that optionally match a given regex."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/search/findannotation"
      options:
      - name: "annotationName"
        type: "String"
        required: true
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "value"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.search.FindDisallowedImageTags:
      name: "org.openrewrite.kubernetes.search.FindDisallowedImageTags"
      description: "The set of image tags to find which are considered disallowed."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/search/finddisallowedimagetags"
      options:
      - name: "disallowedTags"
        type: "String"
        required: true
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "includeInitContainers"
        type: "boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.search.FindHarcodedIPAddresses:
      name: "org.openrewrite.kubernetes.search.FindHarcodedIPAddresses"
      description: "Find hardcoded IP address anywhere in text-based files."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/search/findharcodedipaddresses"
      options: []
      isImperative: false
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.search.FindImage:
      name: "org.openrewrite.kubernetes.search.FindImage"
      description: "The image name to search for in containers and initContainers."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/search/findimage"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "imageName"
        type: "String"
        required: true
      - name: "imageTag"
        type: "String"
        required: false
      - name: "includeInitContainers"
        type: "boolean"
        required: false
      - name: "repository"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.search.FindMissingDigest:
      name: "org.openrewrite.kubernetes.search.FindMissingDigest"
      description: "Find instances of a container name that fails to specify a digest."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/search/findmissingdigest"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "includeInitContainers"
        type: "boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.search.FindMissingOrInvalidAnnotation:
      name: "org.openrewrite.kubernetes.search.FindMissingOrInvalidAnnotation"
      description: "Find annotations that optionally match a given value."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/search/findmissingorinvalidannotation"
      options:
      - name: "annotationName"
        type: "String"
        required: true
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "value"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.search.FindMissingOrInvalidLabel:
      name: "org.openrewrite.kubernetes.search.FindMissingOrInvalidLabel"
      description: "Find labels that optionally match a given regex."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/search/findmissingorinvalidlabel"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "labelName"
        type: "String"
        required: true
      - name: "value"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.search.FindNonTlsIngress:
      name: "org.openrewrite.kubernetes.search.FindNonTlsIngress"
      description: "Find Ingress resources that don't disallow HTTP or don't have\
        \ TLS configured."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/search/findnontlsingress"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.search.FindResourceMissingConfiguration:
      name: "org.openrewrite.kubernetes.search.FindResourceMissingConfiguration"
      description: "Find Kubernetes resources with missing configuration."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/search/findresourcemissingconfiguration"
      options:
      - name: "configurationPath"
        type: "String"
        required: true
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "resourceKind"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.services.FindServiceExternalIPs:
      name: "org.openrewrite.kubernetes.services.FindServiceExternalIPs"
      description: "Find any `Service` whose `externalIP` list contains, or does not\
        \ contain, one of a list of IPs."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/services/findserviceexternalips"
      options:
      - name: "externalIPs"
        type: "Set"
        required: true
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "findMissing"
        type: "boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.services.FindServicesByType:
      name: "org.openrewrite.kubernetes.services.FindServicesByType"
      description: "Type of Kubernetes `Service` to find."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/services/findservicesbytype"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "serviceType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-kubernetes"
    org.openrewrite.kubernetes.services.UpdateServiceExternalIP:
      name: "org.openrewrite.kubernetes.services.UpdateServiceExternalIP"
      description: "Swap out an IP address with another one in `Service` `externalIP`\
        \ settings."
      docLink: "https://docs.openrewrite.org/recipes/kubernetes/services/updateserviceexternalip"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "ipToFind"
        type: "String"
        required: true
      - name: "ipToUpdate"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-kubernetes"
rewrite-liberty:
  artifactId: "rewrite-liberty"
  version: "1.14.0"
  markdownRecipeDescriptors:
    org.openrewrite.java.liberty.MigrateFromWebSphereToLiberty:
      name: "org.openrewrite.java.liberty.MigrateFromWebSphereToLiberty"
      description: "Use this category of rules to identify code changes needed when\
        \ migrating from WebSphere Application Server traditional to Liberty."
      docLink: "https://docs.openrewrite.org/recipes/java/liberty/migratefromwebspheretoliberty"
      options: []
      isImperative: false
      artifactId: "rewrite-liberty"
    org.openrewrite.java.liberty.RemoveWas2LibertyNonPortableJndiLookup:
      name: "org.openrewrite.java.liberty.RemoveWas2LibertyNonPortableJndiLookup"
      description: "Remove the use of invalid JNDI properties from Hashtable."
      docLink: "https://docs.openrewrite.org/recipes/java/liberty/removewas2libertynonportablejndilookup"
      options: []
      isImperative: true
      artifactId: "rewrite-liberty"
    org.openrewrite.java.liberty.ServerName:
      name: "org.openrewrite.java.liberty.ServerName"
      description: "`ServerName.getDisplayName()` is not available in Liberty."
      docLink: "https://docs.openrewrite.org/recipes/java/liberty/servername"
      options: []
      isImperative: true
      artifactId: "rewrite-liberty"
    org.openrewrite.java.liberty.WebSphereUnavailableSSOCookieMethod:
      name: "org.openrewrite.java.liberty.WebSphereUnavailableSSOCookieMethod"
      description: "Replace `WSSecurityHelper.revokeSSOCookies(request, response)`\
        \ with `request.logout()`."
      docLink: "https://docs.openrewrite.org/recipes/java/liberty/websphereunavailablessocookiemethod"
      options: []
      isImperative: true
      artifactId: "rewrite-liberty"
    org.openrewrite.java.liberty.WebSphereUnavailableSSOMethods:
      name: "org.openrewrite.java.liberty.WebSphereUnavailableSSOMethods"
      description: "This recipe replaces `LTPACookieFromSSOToken()` with  `getSSOCookieFromSSOToken`\
        \  and `revokeSSOCookies` with `logout`. The two methods are  deprecated in\
        \ traditional WebSphere Application Server Version 8.5 and might be removed\
        \ in a future release. They are not available on Liberty."
      docLink: "https://docs.openrewrite.org/recipes/java/liberty/websphereunavailablessomethods"
      options: []
      isImperative: false
      artifactId: "rewrite-liberty"
    org.openrewrite.maven.liberty.AddOpenLibertyPlugin:
      name: "org.openrewrite.maven.liberty.AddOpenLibertyPlugin"
      description: "This recipe adds the Liberty Maven plugin, which provides several\
        \ goals for managing a Liberty server and applications."
      docLink: "https://docs.openrewrite.org/recipes/maven/liberty/addopenlibertyplugin"
      options: []
      isImperative: false
      artifactId: "rewrite-liberty"
    org.openrewrite.xml.liberty.AppDDNamespaceRule:
      name: "org.openrewrite.xml.liberty.AppDDNamespaceRule"
      description: "Namespace values in application.xml must be consistent with the\
        \ descriptor version."
      docLink: "https://docs.openrewrite.org/recipes/xml/liberty/appddnamespacerule"
      options: []
      isImperative: false
      artifactId: "rewrite-liberty"
    org.openrewrite.xml.liberty.ConnectorDDNamespaceRule:
      name: "org.openrewrite.xml.liberty.ConnectorDDNamespaceRule"
      description: "Namespace values in ra.xml must be consistent with the descriptor\
        \ version."
      docLink: "https://docs.openrewrite.org/recipes/xml/liberty/connectorddnamespacerule"
      options: []
      isImperative: false
      artifactId: "rewrite-liberty"
    org.openrewrite.xml.liberty.EJBDDNamespaceRule:
      name: "org.openrewrite.xml.liberty.EJBDDNamespaceRule"
      description: "Namespace values in ejb-jar.xml must be consistent with the descriptor\
        \ version."
      docLink: "https://docs.openrewrite.org/recipes/xml/liberty/ejbddnamespacerule"
      options: []
      isImperative: false
      artifactId: "rewrite-liberty"
    org.openrewrite.xml.liberty.PersistenceXmlLocationRule:
      name: "org.openrewrite.xml.liberty.PersistenceXmlLocationRule"
      description: "This recipes moves persistence.xml files into the root META-INF\
        \ directory in source folder."
      docLink: "https://docs.openrewrite.org/recipes/xml/liberty/persistencexmllocationrule"
      options: []
      isImperative: true
      artifactId: "rewrite-liberty"
    org.openrewrite.xml.liberty.WebDDNamespaceRule:
      name: "org.openrewrite.xml.liberty.WebDDNamespaceRule"
      description: "Namespace values in web.xml must be consistent with the descriptor\
        \ version."
      docLink: "https://docs.openrewrite.org/recipes/xml/liberty/webddnamespacerule"
      options: []
      isImperative: false
      artifactId: "rewrite-liberty"
rewrite-logging-frameworks:
  artifactId: "rewrite-logging-frameworks"
  version: "3.4.0"
  markdownRecipeDescriptors:
    org.openrewrite.java.logging.ChangeLombokLogAnnotation:
      name: "org.openrewrite.java.logging.ChangeLombokLogAnnotation"
      description: "Replace Lombok annotations such as `@CommonsLog` and `@Log4j`\
        \ with the target logging framework annotation, or `@Sl4fj` if not provided."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/changelomboklogannotation"
      options:
      - name: "loggingFramework"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.ParameterizedLogging:
      name: "org.openrewrite.java.logging.ParameterizedLogging"
      description: "Transform logging statements using concatenation for messages\
        \ and variables into a parameterized format. For example, `logger.info(\"\
        hi \" + userName)` becomes `logger.info(\"hi {}\", userName)`. This can significantly\
        \ boost performance for messages that otherwise would be assembled with String\
        \ concatenation. Particularly impactful when the log level is not enabled,\
        \ as no work is done to assemble the message."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/parameterizedlogging"
      options:
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "removeToString"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.PrintStackTraceToLogError:
      name: "org.openrewrite.java.logging.PrintStackTraceToLogError"
      description: "When a logger is present, log exceptions rather than calling `printStackTrace()`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/printstacktracetologerror"
      options:
      - name: "addLogger"
        type: "Boolean"
        required: false
      - name: "loggerName"
        type: "String"
        required: false
      - name: "loggingFramework"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.SystemErrToLogging:
      name: "org.openrewrite.java.logging.SystemErrToLogging"
      description: "Replace `System.err` print statements with a logger."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/systemerrtologging"
      options:
      - name: "addLogger"
        type: "Boolean"
        required: false
      - name: "loggerName"
        type: "String"
        required: false
      - name: "loggingFramework"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.SystemOutToLogging:
      name: "org.openrewrite.java.logging.SystemOutToLogging"
      description: "Replace `System.out` print statements with a logger."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/systemouttologging"
      options:
      - name: "addLogger"
        type: "Boolean"
        required: false
      - name: "level"
        type: "String"
        required: false
      - name: "loggerName"
        type: "String"
        required: false
      - name: "loggingFramework"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.SystemPrintToLogging:
      name: "org.openrewrite.java.logging.SystemPrintToLogging"
      description: "Replace `System.out` and `System.err` print statements with a\
        \ logger."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/systemprinttologging"
      options:
      - name: "addLogger"
        type: "Boolean"
        required: false
      - name: "level"
        type: "String"
        required: false
      - name: "loggerName"
        type: "String"
        required: false
      - name: "loggingFramework"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes"
      description: "Replace calls to `Logger.log(Level, String)` with the corresponding\
        \ method calls."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelConfigSupplierToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelConfigSupplierToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.CONFIG, Supplier<String>)`\
        \ with `Logger.config(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelconfigsuppliertomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelConfigToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelConfigToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.CONFIG, String)`\
        \ with `Logger.config(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelconfigtomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFineSupplierToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFineSupplierToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINE, Supplier<String>)`\
        \ with `Logger.fine(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelfinesuppliertomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFineToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFineToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINE, String)`\
        \ with `Logger.fine(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelfinetomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFinerSupplierToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFinerSupplierToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINER, Supplier<String>)`\
        \ with `Logger.finer(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelfinersuppliertomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFinerToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFinerToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINER, String)`\
        \ with `Logger.finer(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelfinertomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFinestSupplierToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFinestSupplierToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINEST, Supplier<String>)`\
        \ with `Logger.finest(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelfinestsuppliertomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFinestToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelFinestToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINEST, String)`\
        \ with `Logger.finest(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelfinesttomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelInfoSupplierToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelInfoSupplierToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.INFO, Supplier<String>)`\
        \ with `Logger.info(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelinfosuppliertomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelInfoToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelInfoToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.INFO, String)`\
        \ with `Logger.info(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelinfotomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelSevereSupplierToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelSevereSupplierToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.SEVERE, Supplier<String>)`\
        \ with `Logger.severe(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelseveresuppliertomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelSevereToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelSevereToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.SEVERE, String)`\
        \ with `Logger.severe(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelseveretomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelWarningSupplierToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelWarningSupplierToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.WARNING,\
        \ Supplier<String>)` with `Logger.warning(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelwarningsuppliertomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelWarningToMethodRecipe:
      name: "org.openrewrite.java.logging.jul.LoggerLevelArgumentToMethodRecipes$LogLevelWarningToMethodRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.WARNING,\
        \ String)` with `Logger.warning(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/jul/loggerlevelargumenttomethodrecipesusdloglevelwarningtomethodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.CommonsLoggingToLog4j:
      name: "org.openrewrite.java.logging.log4j.CommonsLoggingToLog4j"
      description: "Transforms code written using Apache Commons Logging to use Log4j\
        \ 2.x API."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/commonsloggingtolog4j"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.ConvertJulEntering:
      name: "org.openrewrite.java.logging.log4j.ConvertJulEntering"
      description: "Replaces JUL's Logger#entering method calls to Log4j API Logger#traceEntry\
        \ calls."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/convertjulentering"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.ConvertJulExiting:
      name: "org.openrewrite.java.logging.log4j.ConvertJulExiting"
      description: "Replaces JUL's Logger#exiting method calls to Log4j API Logger#traceEntry\
        \ calls."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/convertjulexiting"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.JulToLog4j:
      name: "org.openrewrite.java.logging.log4j.JulToLog4j"
      description: "Transforms code written using `java.util.logging` to use Log4j\
        \ 2.x API."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/jultolog4j"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.Log4j1ToLog4j2:
      name: "org.openrewrite.java.logging.log4j.Log4j1ToLog4j2"
      description: "Migrates Log4j 1.x to Log4j 2.x."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/log4j1tolog4j2"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.LoggerSetLevelToConfiguratorRecipe:
      name: "org.openrewrite.java.logging.log4j.LoggerSetLevelToConfiguratorRecipe"
      description: "Converts `org.apache.log4j.Logger.setLevel` to `org.apache.logging.log4j.core.config.Configurator.setLevel`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/loggersetleveltoconfiguratorrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.LoggingExceptionConcatenationRecipe:
      name: "org.openrewrite.java.logging.log4j.LoggingExceptionConcatenationRecipe"
      description: "By using the exception as another parameter you get the whole\
        \ stack trace."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/loggingexceptionconcatenationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.ParameterizedLogging:
      name: "org.openrewrite.java.logging.log4j.ParameterizedLogging"
      description: "Use Log4j 2.x parameterized logging, which can significantly boost\
        \ performance for messages that otherwise would be assembled with String concatenation.\
        \ Particularly impactful when the log level is not enabled, as no work is\
        \ done to assemble the message."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/parameterizedlogging"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.PrependRandomName:
      name: "org.openrewrite.java.logging.log4j.PrependRandomName"
      description: "To make finding the callsite of a logging statement easier in\
        \ code search."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/prependrandomname"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.Slf4jToLog4j:
      name: "org.openrewrite.java.logging.log4j.Slf4jToLog4j"
      description: "Transforms code written using SLF4J to use Log4j 2.x API."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/slf4jtolog4j"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.log4j.UpgradeLog4J2DependencyVersion:
      name: "org.openrewrite.java.logging.log4j.UpgradeLog4J2DependencyVersion"
      description: "Upgrades the Log4j 2.x dependencies to the latest 2.x version.\n\
        Mitigates the [Log4Shell and other Log4j2-related vulnerabilities](https://www.cisa.gov/news-events/cybersecurity-advisories/aa21-356a).\n"
      docLink: "https://docs.openrewrite.org/recipes/java/logging/log4j/upgradelog4j2dependencyversion"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.logback.Log4jAppenderToLogback:
      name: "org.openrewrite.java.logging.logback.Log4jAppenderToLogback"
      description: "Migrates custom Log4j 2.x Appender components to `logback-classic`.\
        \ This recipe operates on the following assumptions: 1.) The contents of the\
        \ `append()` method remains unchanged. 2.) The `requiresLayout()` method is\
        \ not used in logback and can be removed. 3.) In logback, the `stop()` method\
        \ is the equivalent of log4j's close() method. For more details, see this\
        \ page from logback: [`Migration from log4j`](http://logback.qos.ch/manual/migrationFromLog4j.html)."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/logback/log4jappendertologback"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.logback.Log4jLayoutToLogback:
      name: "org.openrewrite.java.logging.logback.Log4jLayoutToLogback"
      description: "Migrates custom Log4j 2.x Layout components to `logback-classic`.\
        \ This recipe operates on the following assumptions: 1. A logback-classic\
        \ layout must extend the `LayoutBase<ILoggingEvent>` class. 2. log4j's `format()`\
        \ is renamed to `doLayout()` in a logback-classic layout. 3. LoggingEvent\
        \ `getRenderedMessage()` is converted to LoggingEvent `getMessage()`. 4. The\
        \ log4j ignoresThrowable() method is not needed and has no equivalent in logback-classic.\
        \ 5. The activateOptions() method merits further discussion. In log4j, a layout\
        \ will have its activateOptions() method invoked by log4j configurators, that\
        \ is PropertyConfigurator or DOMConfigurator just after all the options of\
        \ the layout have been set. Thus, the layout will have an opportunity to check\
        \ that its options are coherent and if so, proceed to fully initialize itself.\
        \ 6. In logback-classic, layouts must implement the LifeCycle interface which\
        \ includes a method called start(). The start() method is the equivalent of\
        \ log4j's activateOptions() method. For more details, see this page from logback:\
        \ [`Migration from log4j`](http://logback.qos.ch/manual/migrationFromLog4j.html)."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/logback/log4jlayouttologback"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.logback.Log4jToLogback:
      name: "org.openrewrite.java.logging.logback.Log4jToLogback"
      description: "Migrates usage of Apache Log4j 2.x to using `logback` as an SLF4J\
        \ implementation directly. Note, this currently does not modify `log4j.properties`\
        \ files."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/logback/log4jtologback"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.ChangeLogLevel:
      name: "org.openrewrite.java.logging.slf4j.ChangeLogLevel"
      description: "Change the log level of SLF4J log statements."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/changeloglevel"
      options:
      - name: "from"
        type: "Level"
        required: true
      - name: "startsWith"
        type: "String"
        required: false
      - name: "to"
        type: "Level"
        required: true
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.CommonsLogging1ToSlf4j1:
      name: "org.openrewrite.java.logging.slf4j.CommonsLogging1ToSlf4j1"
      description: "Transforms usages of Apache Commons Logging 1.x to leveraging\
        \ SLF4J 1.x directly."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/commonslogging1toslf4j1"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.CompleteExceptionLogging:
      name: "org.openrewrite.java.logging.slf4j.CompleteExceptionLogging"
      description: "It is a common mistake to call `Exception.getMessage()` when passing\
        \ an exception into a log method. Not all exception types have useful messages,\
        \ and even if the message is useful this omits the stack trace. Including\
        \ a complete stack trace of the error along with the exception message in\
        \ the log allows developers to better understand the context of the exception\
        \ and identify the source of the error more quickly and accurately. \n If\
        \ the method invocation includes any call to `Exception.getMessage()` or `Exception.getLocalizedMessage()`\
        \ and not an exception is already passed as the last parameter to the log\
        \ method, then we will append the exception as the last parameter in the log\
        \ method."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/completeexceptionlogging"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulGetLoggerToLoggerFactoryRecipes:
      name: "org.openrewrite.java.logging.slf4j.JulGetLoggerToLoggerFactoryRecipes"
      description: "Replace calls to `Logger.getLogger` with `LoggerFactory.getLogger`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julgetloggertologgerfactoryrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulGetLoggerToLoggerFactoryRecipes$GetLoggerClassCanonicalNameToLoggerFactoryRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulGetLoggerToLoggerFactoryRecipes$GetLoggerClassCanonicalNameToLoggerFactoryRecipe"
      description: "Replace calls to `java.util.logging.Logger.getLogger(Some.class.getCanonicalName())`\
        \ with `org.slf4j.LoggerFactory.getLogger(Some.class)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julgetloggertologgerfactoryrecipesusdgetloggerclasscanonicalnametologgerfactoryrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulGetLoggerToLoggerFactoryRecipes$GetLoggerClassNameToLoggerFactoryRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulGetLoggerToLoggerFactoryRecipes$GetLoggerClassNameToLoggerFactoryRecipe"
      description: "Replace calls to `java.util.logging.Logger.getLogger(Some.class.getName())`\
        \ with `org.slf4j.LoggerFactory.getLogger(Some.class)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julgetloggertologgerfactoryrecipesusdgetloggerclassnametologgerfactoryrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes:
      name: "org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes"
      description: "Replace calls to `Logger.isLoggable(Level)` with the corresponding\
        \ SLF4J method calls."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julisloggabletoisenabledrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelAllRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelAllRecipe"
      description: "Replace calls to `java.util.logging.Logger.isLoggable(Level.ALL)`\
        \ with `org.slf4j.Logger.isTraceEnabled()`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julisloggabletoisenabledrecipesusdloggerisloggablelevelallrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelConfigRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelConfigRecipe"
      description: "Replace calls to `java.util.logging.Logger.isLoggable(Level.CONFIG)`\
        \ with `org.slf4j.Logger.isInfoEnabled()`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julisloggabletoisenabledrecipesusdloggerisloggablelevelconfigrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelFineRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelFineRecipe"
      description: "Replace calls to `java.util.logging.Logger.isLoggable(Level.FINE)`\
        \ with `org.slf4j.Logger.isDebugEnabled()`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julisloggabletoisenabledrecipesusdloggerisloggablelevelfinerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelFinerRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelFinerRecipe"
      description: "Replace calls to `java.util.logging.Logger.isLoggable(Level.FINER)`\
        \ with `org.slf4j.Logger.isTraceEnabled()`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julisloggabletoisenabledrecipesusdloggerisloggablelevelfinerrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelFinestRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelFinestRecipe"
      description: "Replace calls to `java.util.logging.Logger.isLoggable(Level.FINEST)`\
        \ with `org.slf4j.Logger.isTraceEnabled()`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julisloggabletoisenabledrecipesusdloggerisloggablelevelfinestrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelInfoRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelInfoRecipe"
      description: "Replace calls to `java.util.logging.Logger.isLoggable(Level.INFO)`\
        \ with `org.slf4j.Logger.isInfoEnabled()`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julisloggabletoisenabledrecipesusdloggerisloggablelevelinforecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelSevereRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelSevereRecipe"
      description: "Replace calls to `java.util.logging.Logger.isLoggable(Level.SEVERE)`\
        \ with `org.slf4j.Logger.isErrorEnabled()`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julisloggabletoisenabledrecipesusdloggerisloggablelevelsevererecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelWarningRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulIsLoggableToIsEnabledRecipes$LoggerIsLoggableLevelWarningRecipe"
      description: "Replace calls to `java.util.logging.Logger.isLoggable(Level.WARNING)`\
        \ with `org.slf4j.Logger.isWarnEnabled()`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julisloggabletoisenabledrecipesusdloggerisloggablelevelwarningrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulLevelAllToTraceRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulLevelAllToTraceRecipe"
      description: "Replace `java.util.logging.Logger#log(Level.ALL, String)` with\
        \ `org.slf4j.Logger#trace(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jullevelalltotracerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulParameterizedArguments:
      name: "org.openrewrite.java.logging.slf4j.JulParameterizedArguments"
      description: "Replace calls to parameterized `Logger.log(Level,String,…)` call\
        \ with the corresponding slf4j method calls transforming the formatter and\
        \ parameter lists."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/julparameterizedarguments"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4j:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4j"
      description: "Migrates usage of Java Util Logging (JUL) to using SLF4J directly."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4j"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes"
      description: "Replace calls to `Logger.isLoggable(Level)` with the corresponding\
        \ SLF4J method calls."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierConfigRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierConfigRecipe"
      description: "Replace calls to `java.util.logging.Logger.config(Supplier<String>)`\
        \ with `org.slf4j.Logger.atInfo().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierconfigrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierFineRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierFineRecipe"
      description: "Replace calls to `java.util.logging.Logger.fine(Supplier<String>)`\
        \ with `org.slf4j.Logger.atDebug().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierfinerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierFinerRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierFinerRecipe"
      description: "Replace calls to `java.util.logging.Logger.finer(Supplier<String>)`\
        \ with `org.slf4j.Logger.atTrace().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierfinerrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierFinestRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierFinestRecipe"
      description: "Replace calls to `java.util.logging.Logger.finest(Supplier<String>)`\
        \ with `org.slf4j.Logger.atTrace().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierfinestrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierInfoRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierInfoRecipe"
      description: "Replace calls to `java.util.logging.Logger.info(Supplier<String>)`\
        \ with `org.slf4j.Logger.atInfo().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierinforecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogAllRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogAllRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.ALL, Supplier<String>)`\
        \ with `org.slf4j.Logger.atTrace().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierlogallrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogConfigRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogConfigRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.CONFIG, Supplier<String>)`\
        \ with `org.slf4j.Logger.atInfo().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierlogconfigrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogFineRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogFineRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINE, Supplier<String>)`\
        \ with `org.slf4j.Logger.atDebug().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierlogfinerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogFinerRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogFinerRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINER, Supplier<String>)`\
        \ with `org.slf4j.Logger.atTrace().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierlogfinerrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogFinestRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogFinestRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINEST, Supplier<String>)`\
        \ with `org.slf4j.Logger.atTrace().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierlogfinestrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogInfoRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogInfoRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.INFO, Supplier<String>)`\
        \ with `org.slf4j.Logger.atInfo().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierloginforecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogSevereRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogSevereRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.SEVERE, Supplier<String>)`\
        \ with `org.slf4j.Logger.atError().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierlogsevererecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogWarningRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierLogWarningRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.WARNING,\
        \ Supplier<String>)` with `org.slf4j.Logger.atWarn().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierlogwarningrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierSevereRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierSevereRecipe"
      description: "Replace calls to `java.util.logging.Logger.severe(Supplier<String>)`\
        \ with `org.slf4j.Logger.atError().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsuppliersevererecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierWarningRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierRecipes$JulToSlf4jSupplierWarningRecipe"
      description: "Replace calls to `java.util.logging.Logger.warning(Supplier<String>)`\
        \ with `org.slf4j.Logger.atWarn().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierrecipesusdjultoslf4jsupplierwarningrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes"
      description: "Replace calls to `Logger.log(Level, Throwable, Supplier<String>)`\
        \ with the corresponding SLF4J method calls."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierwiththrowablerecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierAllRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierAllRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.ALL, e, Supplier<String>)`\
        \ with `org.slf4j.Logger.atTrace().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierwiththrowablerecipesusdjultoslf4jsupplierallrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierConfigRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierConfigRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.CONFIG, e,\
        \ Supplier<String>)` with `org.slf4j.Logger.atInfo().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierwiththrowablerecipesusdjultoslf4jsupplierconfigrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierFineRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierFineRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINE, e,\
        \ Supplier<String>)` with `org.slf4j.Logger.atDebug().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierwiththrowablerecipesusdjultoslf4jsupplierfinerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierFinerRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierFinerRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINER, e,\
        \ Supplier<String>)` with `org.slf4j.Logger.atTrace().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierwiththrowablerecipesusdjultoslf4jsupplierfinerrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierFinestRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierFinestRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINEST, e,\
        \ Supplier<String>)` with `org.slf4j.Logger.atTrace().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierwiththrowablerecipesusdjultoslf4jsupplierfinestrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierInfoRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierInfoRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.INFO, e,\
        \ Supplier<String>)` with `org.slf4j.Logger.atInfo().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierwiththrowablerecipesusdjultoslf4jsupplierinforecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierSevereRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierSevereRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.SEVERE, e,\
        \ Supplier<String>)` with `org.slf4j.Logger.atError().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierwiththrowablerecipesusdjultoslf4jsuppliersevererecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierWarningRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jLambdaSupplierWithThrowableRecipes$JulToSlf4jSupplierWarningRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.WARNING,\
        \ e, Supplier<String>)` with `org.slf4j.Logger.atWarn().log(Supplier<String>)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jlambdasupplierwiththrowablerecipesusdjultoslf4jsupplierwarningrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes"
      description: "Replace calls to `Logger.log(Level, String, Throwable)` with the\
        \ corresponding SLF4J method calls."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jsimplecallswiththrowablerecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierAllRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierAllRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.ALL, String\
        \ message, Throwable e)` with `org.slf4j.Logger.trace(message, e)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jsimplecallswiththrowablerecipesusdjultoslf4jsupplierallrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierConfigRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierConfigRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.CONFIG, String\
        \ message, Throwable e)` with `org.slf4j.Logger.info(message, e)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jsimplecallswiththrowablerecipesusdjultoslf4jsupplierconfigrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierFineRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierFineRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINE, String\
        \ message, Throwable e)` with `org.slf4j.Logger.debug(message, e)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jsimplecallswiththrowablerecipesusdjultoslf4jsupplierfinerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierFinerRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierFinerRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINER, String\
        \ message, Throwable e)` with `org.slf4j.Logger.trace(message, e)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jsimplecallswiththrowablerecipesusdjultoslf4jsupplierfinerrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierFinestRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierFinestRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.FINEST, String\
        \ message, Throwable e)` with `org.slf4j.Logger.trace(message, e)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jsimplecallswiththrowablerecipesusdjultoslf4jsupplierfinestrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierInfoRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierInfoRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.INFO, String\
        \ message, Throwable e)` with `org.slf4j.Logger.info(message, e)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jsimplecallswiththrowablerecipesusdjultoslf4jsupplierinforecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierSevereRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierSevereRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.SEVERE, String\
        \ message, Throwable e)` with `org.slf4j.Logger.error(message, e)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jsimplecallswiththrowablerecipesusdjultoslf4jsuppliersevererecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierWarningRecipe:
      name: "org.openrewrite.java.logging.slf4j.JulToSlf4jSimpleCallsWithThrowableRecipes$JulToSlf4jSupplierWarningRecipe"
      description: "Replace calls to `java.util.logging.Logger.log(Level.WARNING,\
        \ String message, Throwable e)` with `org.slf4j.Logger.warn(message, e)`."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/jultoslf4jsimplecallswiththrowablerecipesusdjultoslf4jsupplierwarningrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.Log4j1ToSlf4j1:
      name: "org.openrewrite.java.logging.slf4j.Log4j1ToSlf4j1"
      description: "Transforms usages of Log4j 1.x to leveraging SLF4J 1.x directly.\
        \ Note, this currently does not modify `log4j.properties` files."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/log4j1toslf4j1"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.Log4j2ToSlf4j1:
      name: "org.openrewrite.java.logging.slf4j.Log4j2ToSlf4j1"
      description: "Transforms usages of Log4j 2.x to leveraging SLF4J 1.x directly.\
        \ Note, this currently does not modify `log4j.properties` files."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/log4j2toslf4j1"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.Log4jToSlf4j:
      name: "org.openrewrite.java.logging.slf4j.Log4jToSlf4j"
      description: "Migrates usage of Apache Log4j to using SLF4J directly. Use of\
        \ the traditional Log4j to SLF4J bridge can result in loss of performance,\
        \ as the Log4j messages must be formatted before they can be passed to SLF4J.\
        \ Note, this currently does not modify `log4j.properties` files."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/log4jtoslf4j"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.LoggersNamedForEnclosingClass:
      name: "org.openrewrite.java.logging.slf4j.LoggersNamedForEnclosingClass"
      description: "Ensure `LoggerFactory#getLogger(Class)` is called with the enclosing\
        \ class as argument."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/loggersnamedforenclosingclass"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.ParameterizedLogging:
      name: "org.openrewrite.java.logging.slf4j.ParameterizedLogging"
      description: "Use SLF4J's parameterized logging, which can significantly boost\
        \ performance for messages that otherwise would be assembled with String concatenation.\
        \ Particularly impactful when the log level is not enabled, as no work is\
        \ done to assemble the message."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/parameterizedlogging"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.Slf4jBestPractices:
      name: "org.openrewrite.java.logging.slf4j.Slf4jBestPractices"
      description: "Applies best practices to logging with SLF4J."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/slf4jbestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-logging-frameworks"
    org.openrewrite.java.logging.slf4j.Slf4jLogShouldBeConstant:
      name: "org.openrewrite.java.logging.slf4j.Slf4jLogShouldBeConstant"
      description: "Logging statements shouldn't begin with `String#format`, calls\
        \ to `toString()`, etc."
      docLink: "https://docs.openrewrite.org/recipes/java/logging/slf4j/slf4jlogshouldbeconstant"
      options: []
      isImperative: true
      artifactId: "rewrite-logging-frameworks"
rewrite-maven:
  artifactId: "rewrite-maven"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.maven.AddAnnotationProcessor:
      name: "org.openrewrite.maven.AddAnnotationProcessor"
      description: "Add an annotation processor to the maven compiler plugin. Will\
        \ not do anything if it already exists. Also doesn't add anything when no\
        \ other annotation processors are defined yet. (Perhaps `ChangePluginConfiguration`\
        \ can be used)."
      docLink: "https://docs.openrewrite.org/recipes/maven/addannotationprocessor"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddCommentToMavenDependency:
      name: "org.openrewrite.maven.AddCommentToMavenDependency"
      description: "Adds a comment as the first element in a `Maven` dependency."
      docLink: "https://docs.openrewrite.org/recipes/maven/addcommenttomavendependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "commentText"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "xPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddDependency:
      name: "org.openrewrite.maven.AddDependency"
      description: "Add a Maven dependency to a `pom.xml` file in the correct scope\
        \ based on where it is used."
      docLink: "https://docs.openrewrite.org/recipes/maven/adddependency"
      options:
      - name: "acceptTransitive"
        type: "Boolean"
        required: false
      - name: "artifactId"
        type: "String"
        required: true
      - name: "classifier"
        type: "String"
        required: false
      - name: "familyPattern"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "onlyIfUsing"
        type: "String"
        required: false
      - name: "optional"
        type: "Boolean"
        required: false
      - name: "releasesOnly"
        type: "Boolean"
        required: false
      - name: "scope"
        type: "String"
        required: false
      - name: "type"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: true
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddDevelocityMavenExtension:
      name: "org.openrewrite.maven.AddDevelocityMavenExtension"
      description: "To integrate the Develocity Maven extension into Maven projects,\
        \ ensure that the `develocity-maven-extension` is added to the `.mvn/extensions.xml`\
        \ file if not already present. Additionally, configure the extension by adding\
        \ the `.mvn/develocity.xml` configuration file."
      docLink: "https://docs.openrewrite.org/recipes/maven/adddevelocitymavenextension"
      options:
      - name: "allowUntrustedServer"
        type: "Boolean"
        required: false
      - name: "fileFingerprints"
        type: "Boolean"
        required: false
      - name: "publishCriteria"
        type: "PublishCriteria"
        required: false
      - name: "server"
        type: "String"
        required: true
      - name: "uploadInBackground"
        type: "Boolean"
        required: false
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddManagedDependency:
      name: "org.openrewrite.maven.AddManagedDependency"
      description: "Add a managed Maven dependency to a `pom.xml` file."
      docLink: "https://docs.openrewrite.org/recipes/maven/addmanageddependency"
      options:
      - name: "addToRootPom"
        type: "Boolean"
        required: false
      - name: "artifactId"
        type: "String"
        required: true
      - name: "classifier"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "onlyIfUsing"
        type: "String"
        required: false
      - name: "releasesOnly"
        type: "Boolean"
        required: false
      - name: "scope"
        type: "String"
        required: false
      - name: "type"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: true
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddParentPom:
      name: "org.openrewrite.maven.AddParentPom"
      description: "Add a parent pom to a Maven pom.xml. Does nothing if a parent\
        \ pom is already present."
      docLink: "https://docs.openrewrite.org/recipes/maven/addparentpom"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "relativePath"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: true
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddPlugin:
      name: "org.openrewrite.maven.AddPlugin"
      description: "Add the specified Maven plugin to the pom.xml."
      docLink: "https://docs.openrewrite.org/recipes/maven/addplugin"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "dependencies"
        type: "String"
        required: false
      - name: "executions"
        type: "String"
        required: false
      - name: "filePattern"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddPluginDependency:
      name: "org.openrewrite.maven.AddPluginDependency"
      description: "Adds the specified dependencies to a Maven plugin. Will not add\
        \ the plugin if it does not already exist in the pom."
      docLink: "https://docs.openrewrite.org/recipes/maven/addplugindependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "pluginArtifactId"
        type: "String"
        required: true
      - name: "pluginGroupId"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddProfile:
      name: "org.openrewrite.maven.AddProfile"
      description: "Add a maven profile to a `pom.xml` file."
      docLink: "https://docs.openrewrite.org/recipes/maven/addprofile"
      options:
      - name: "activation"
        type: "String"
        required: false
      - name: "build"
        type: "String"
        required: false
      - name: "id"
        type: "String"
        required: true
      - name: "properties"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddProperty:
      name: "org.openrewrite.maven.AddProperty"
      description: "Add a new property to the Maven project property. Prefers to add\
        \ the property to the parent if the project has multiple modules."
      docLink: "https://docs.openrewrite.org/recipes/maven/addproperty"
      options:
      - name: "key"
        type: "String"
        required: true
      - name: "preserveExistingValue"
        type: "Boolean"
        required: false
      - name: "trustParent"
        type: "Boolean"
        required: false
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddRepository:
      name: "org.openrewrite.maven.AddRepository"
      description: "Adds a new Maven Repository or updates a matching repository."
      docLink: "https://docs.openrewrite.org/recipes/maven/addrepository"
      options:
      - name: "id"
        type: "String"
        required: true
      - name: "layout"
        type: "String"
        required: false
      - name: "releasesChecksumPolicy"
        type: "String"
        required: false
      - name: "releasesEnabled"
        type: "Boolean"
        required: false
      - name: "releasesUpdatePolicy"
        type: "String"
        required: false
      - name: "repoName"
        type: "String"
        required: false
      - name: "snapshotsChecksumPolicy"
        type: "String"
        required: false
      - name: "snapshotsEnabled"
        type: "Boolean"
        required: false
      - name: "snapshotsUpdatePolicy"
        type: "String"
        required: false
      - name: "type"
        type: "Type"
        required: false
      - name: "url"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.AddRuntimeConfig:
      name: "org.openrewrite.maven.AddRuntimeConfig"
      description: "Add a new configuration option for the Maven runtime if not already\
        \ present."
      docLink: "https://docs.openrewrite.org/recipes/maven/addruntimeconfig"
      options:
      - name: "argument"
        type: "String"
        required: false
      - name: "flag"
        type: "String"
        required: true
      - name: "relativeConfigFileName"
        type: "String"
        required: true
      - name: "separator"
        type: "Separator"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.BestPractices:
      name: "org.openrewrite.maven.BestPractices"
      description: "Applies best practices to Maven POMs."
      docLink: "https://docs.openrewrite.org/recipes/maven/bestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangeDependencyClassifier:
      name: "org.openrewrite.maven.ChangeDependencyClassifier"
      description: "Add or alter the classifier of the specified dependency."
      docLink: "https://docs.openrewrite.org/recipes/maven/changedependencyclassifier"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "changeManagedDependency"
        type: "Boolean"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "newClassifier"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangeDependencyGroupIdAndArtifactId:
      name: "org.openrewrite.maven.ChangeDependencyGroupIdAndArtifactId"
      description: "Change a Maven dependency coordinates. The `newGroupId` or `newArtifactId`\
        \ **MUST** be different from before. Matching `<dependencyManagement>` coordinates\
        \ are also updated if a `newVersion` or `versionPattern` is provided."
      docLink: "https://docs.openrewrite.org/recipes/maven/changedependencygroupidandartifactid"
      options:
      - name: "changeManagedDependency"
        type: "Boolean"
        required: false
      - name: "newArtifactId"
        type: "String"
        required: false
      - name: "newGroupId"
        type: "String"
        required: false
      - name: "newVersion"
        type: "String"
        required: false
      - name: "oldArtifactId"
        type: "String"
        required: true
      - name: "oldGroupId"
        type: "String"
        required: true
      - name: "overrideManagedVersion"
        type: "Boolean"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangeDependencyScope:
      name: "org.openrewrite.maven.ChangeDependencyScope"
      description: "Add or alter the scope of the specified dependency."
      docLink: "https://docs.openrewrite.org/recipes/maven/changedependencyscope"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "newScope"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangeManagedDependencyGroupIdAndArtifactId:
      name: "org.openrewrite.maven.ChangeManagedDependencyGroupIdAndArtifactId"
      description: "Change the groupId, artifactId and optionally the version of a\
        \ specified Maven managed dependency."
      docLink: "https://docs.openrewrite.org/recipes/maven/changemanageddependencygroupidandartifactid"
      options:
      - name: "newArtifactId"
        type: "String"
        required: true
      - name: "newGroupId"
        type: "String"
        required: true
      - name: "newVersion"
        type: "String"
        required: false
      - name: "oldArtifactId"
        type: "String"
        required: true
      - name: "oldGroupId"
        type: "String"
        required: true
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangePackaging:
      name: "org.openrewrite.maven.ChangePackaging"
      description: "Sets the packaging type of Maven projects. Either adds the packaging\
        \ tag if it is missing or changes its context if present."
      docLink: "https://docs.openrewrite.org/recipes/maven/changepackaging"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "oldPackaging"
        type: "String"
        required: false
      - name: "packaging"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangeParentPom:
      name: "org.openrewrite.maven.ChangeParentPom"
      description: "Change the parent pom of a Maven pom.xml. Identifies the parent\
        \ pom to be changed by its groupId and artifactId."
      docLink: "https://docs.openrewrite.org/recipes/maven/changeparentpom"
      options:
      - name: "allowVersionDowngrades"
        type: "Boolean"
        required: false
      - name: "newArtifactId"
        type: "String"
        required: false
      - name: "newGroupId"
        type: "String"
        required: false
      - name: "newRelativePath"
        type: "String"
        required: false
      - name: "newVersion"
        type: "String"
        required: true
      - name: "oldArtifactId"
        type: "String"
        required: true
      - name: "oldGroupId"
        type: "String"
        required: true
      - name: "oldRelativePath"
        type: "String"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangePluginConfiguration:
      name: "org.openrewrite.maven.ChangePluginConfiguration"
      description: "Apply the specified configuration to a Maven plugin. Will not\
        \ add the plugin if it does not already exist in the pom."
      docLink: "https://docs.openrewrite.org/recipes/maven/changepluginconfiguration"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "configuration"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangePluginDependencies:
      name: "org.openrewrite.maven.ChangePluginDependencies"
      description: "Applies the specified dependencies to a Maven plugin. Will not\
        \ add the plugin if it does not already exist in the pom."
      docLink: "https://docs.openrewrite.org/recipes/maven/changeplugindependencies"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "dependencies"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangePluginExecutions:
      name: "org.openrewrite.maven.ChangePluginExecutions"
      description: "Apply the specified executions to a Maven plugin. Will not add\
        \ the plugin if it does not already exist in the pom."
      docLink: "https://docs.openrewrite.org/recipes/maven/changepluginexecutions"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "executions"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangePluginGroupIdAndArtifactId:
      name: "org.openrewrite.maven.ChangePluginGroupIdAndArtifactId"
      description: "Change the groupId and/or the artifactId of a specified Maven\
        \ plugin. Optionally update the plugin version."
      docLink: "https://docs.openrewrite.org/recipes/maven/changeplugingroupidandartifactid"
      options:
      - name: "newArtifactId"
        type: "String"
        required: false
      - name: "newGroupId"
        type: "String"
        required: false
      - name: "newVersion"
        type: "String"
        required: false
      - name: "oldArtifactId"
        type: "String"
        required: true
      - name: "oldGroupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangeProjectVersion:
      name: "org.openrewrite.maven.ChangeProjectVersion"
      description: "Change the project version of a Maven pom.xml. Identifies the\
        \ project to be changed by its groupId and artifactId. If the version is defined\
        \ as a property, this recipe will only change the property value if the property\
        \ exists within the same pom."
      docLink: "https://docs.openrewrite.org/recipes/maven/changeprojectversion"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "newVersion"
        type: "String"
        required: true
      - name: "overrideParentVersion"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ChangePropertyValue:
      name: "org.openrewrite.maven.ChangePropertyValue"
      description: "Changes the specified Maven project property value leaving the\
        \ key intact."
      docLink: "https://docs.openrewrite.org/recipes/maven/changepropertyvalue"
      options:
      - name: "addIfMissing"
        type: "Boolean"
        required: false
      - name: "key"
        type: "String"
        required: true
      - name: "newValue"
        type: "String"
        required: true
      - name: "trustParent"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.EnableDevelocityBuildCache:
      name: "org.openrewrite.maven.EnableDevelocityBuildCache"
      description: "Add Develocity build cache configuration to any `.mvn/` Develocity\
        \ configuration file that lack existing configuration."
      docLink: "https://docs.openrewrite.org/recipes/maven/enabledevelocitybuildcache"
      options:
      - name: "localEnabled"
        type: "String"
        required: false
      - name: "remoteEnabled"
        type: "String"
        required: false
      - name: "remoteStoreEnabled"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ExcludeDependency:
      name: "org.openrewrite.maven.ExcludeDependency"
      description: "Exclude specified dependency from any dependency that transitively\
        \ includes it."
      docLink: "https://docs.openrewrite.org/recipes/maven/excludedependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "scope"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.IncrementProjectVersion:
      name: "org.openrewrite.maven.IncrementProjectVersion"
      description: "Increase Maven project version by incrementing either the major,\
        \ minor, or patch version as defined by [semver](https://semver.org/). Other\
        \ versioning schemes are not supported."
      docLink: "https://docs.openrewrite.org/recipes/maven/incrementprojectversion"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "digit"
        type: "SemverDigit"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ManageDependencies:
      name: "org.openrewrite.maven.ManageDependencies"
      description: "Make existing dependencies managed by moving their version to\
        \ be specified in the dependencyManagement section of the POM."
      docLink: "https://docs.openrewrite.org/recipes/maven/managedependencies"
      options:
      - name: "addToRootPom"
        type: "Boolean"
        required: false
      - name: "artifactPattern"
        type: "String"
        required: false
      - name: "groupPattern"
        type: "String"
        required: true
      - name: "skipModelUpdate"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.ModernizeObsoletePoms:
      name: "org.openrewrite.maven.ModernizeObsoletePoms"
      description: "Very old Maven poms are no longer supported by current versions\
        \ of Maven. This recipe updates poms with `<pomVersion>3</pomVersion>` to\
        \ `<modelVersion>4.0.0</modelVersion>` of the Maven pom schema. This does\
        \ not attempt to upgrade old dependencies or plugins and is best regarded\
        \ as the starting point of a migration rather than an end-point."
      docLink: "https://docs.openrewrite.org/recipes/maven/modernizeobsoletepoms"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.OrderPomElements:
      name: "org.openrewrite.maven.OrderPomElements"
      description: "Order POM elements according to the [recommended](http://maven.apache.org/developers/conventions/code.html#pom-code-convention)\
        \ order."
      docLink: "https://docs.openrewrite.org/recipes/maven/orderpomelements"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RemoveDependency:
      name: "org.openrewrite.maven.RemoveDependency"
      description: "Removes a single dependency from the <dependencies> section of\
        \ the pom.xml."
      docLink: "https://docs.openrewrite.org/recipes/maven/removedependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "scope"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RemoveDuplicateDependencies:
      name: "org.openrewrite.maven.RemoveDuplicateDependencies"
      description: "Removes duplicated dependencies in the `<dependencies>` and `<dependencyManagement>`\
        \ sections of the `pom.xml`."
      docLink: "https://docs.openrewrite.org/recipes/maven/removeduplicatedependencies"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RemoveExclusion:
      name: "org.openrewrite.maven.RemoveExclusion"
      description: "Remove any matching exclusion from any matching dependency."
      docLink: "https://docs.openrewrite.org/recipes/maven/removeexclusion"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "exclusionArtifactId"
        type: "String"
        required: true
      - name: "exclusionGroupId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "onlyIneffective"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RemoveManagedDependency:
      name: "org.openrewrite.maven.RemoveManagedDependency"
      description: "Removes a single managed dependency from the <dependencyManagement><dependencies>\
        \ section of the pom.xml."
      docLink: "https://docs.openrewrite.org/recipes/maven/removemanageddependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "scope"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RemovePlugin:
      name: "org.openrewrite.maven.RemovePlugin"
      description: "Remove the specified Maven plugin from the POM."
      docLink: "https://docs.openrewrite.org/recipes/maven/removeplugin"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RemovePluginDependency:
      name: "org.openrewrite.maven.RemovePluginDependency"
      description: "Removes a dependency from the <dependencies> section of a plugin\
        \ in the pom.xml."
      docLink: "https://docs.openrewrite.org/recipes/maven/removeplugindependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "pluginArtifactId"
        type: "String"
        required: true
      - name: "pluginGroupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RemoveProperty:
      name: "org.openrewrite.maven.RemoveProperty"
      description: "Removes the specified Maven project property from the pom.xml."
      docLink: "https://docs.openrewrite.org/recipes/maven/removeproperty"
      options:
      - name: "propertyName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RemoveRedundantDependencyVersions:
      name: "org.openrewrite.maven.RemoveRedundantDependencyVersions"
      description: "Remove explicitly-specified dependency/plugin versions when a\
        \ parent POM's `dependencyManagement`/`pluginManagement` specifies the version."
      docLink: "https://docs.openrewrite.org/recipes/maven/removeredundantdependencyversions"
      options:
      - name: "artifactPattern"
        type: "String"
        required: false
      - name: "except"
        type: "List"
        required: false
      - name: "groupPattern"
        type: "String"
        required: false
      - name: "onlyIfManagedVersionIs"
        type: "Comparator"
        required: false
      - name: "onlyIfVersionsMatch"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RemoveRepository:
      name: "org.openrewrite.maven.RemoveRepository"
      description: "Removes a matching Maven repository."
      docLink: "https://docs.openrewrite.org/recipes/maven/removerepository"
      options:
      - name: "id"
        type: "String"
        required: false
      - name: "url"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RemoveUnusedProperties:
      name: "org.openrewrite.maven.RemoveUnusedProperties"
      description: "Detect and remove Maven property declarations which do not have\
        \ any usage within the project."
      docLink: "https://docs.openrewrite.org/recipes/maven/removeunusedproperties"
      options:
      - name: "propertyPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.RenamePropertyKey:
      name: "org.openrewrite.maven.RenamePropertyKey"
      description: "Rename the specified Maven project property key leaving the value\
        \ unchanged."
      docLink: "https://docs.openrewrite.org/recipes/maven/renamepropertykey"
      options:
      - name: "newKey"
        type: "String"
        required: true
      - name: "oldKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.UpdateMavenProjectPropertyJavaVersion:
      name: "org.openrewrite.maven.UpdateMavenProjectPropertyJavaVersion"
      description: "The Java version is determined by several project properties,\
        \ including:\n\n * `java.version`\n * `jdk.version`\n * `javaVersion`\n *\
        \ `jdkVersion`\n * `maven.compiler.source`\n * `maven.compiler.target`\n *\
        \ `maven.compiler.release`\n * `release.version`\n\nIf none of these properties\
        \ are in use and the maven compiler plugin is not otherwise configured, adds\
        \ the `maven.compiler.release` property."
      docLink: "https://docs.openrewrite.org/recipes/maven/updatemavenprojectpropertyjavaversion"
      options:
      - name: "version"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.UpdateMavenWrapper:
      name: "org.openrewrite.maven.UpdateMavenWrapper"
      description: "Update the version of Maven used in an existing Maven wrapper."
      docLink: "https://docs.openrewrite.org/recipes/maven/updatemavenwrapper"
      options:
      - name: "addIfMissing"
        type: "Boolean"
        required: false
      - name: "distributionVersion"
        type: "String"
        required: false
      - name: "enforceWrapperChecksumVerification"
        type: "Boolean"
        required: false
      - name: "repositoryUrl"
        type: "String"
        required: false
      - name: "wrapperDistribution"
        type: "String"
        required: false
      - name: "wrapperVersion"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.UpgradeDependencyVersion:
      name: "org.openrewrite.maven.UpgradeDependencyVersion"
      description: "Upgrade the version of a dependency by specifying a group and\
        \ (optionally) an artifact using Node Semver advanced range selectors, allowing\
        \ more precise control over version updates to patch or minor releases."
      docLink: "https://docs.openrewrite.org/recipes/maven/upgradedependencyversion"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "newVersion"
        type: "String"
        required: true
      - name: "overrideManagedVersion"
        type: "Boolean"
        required: false
      - name: "retainVersions"
        type: "List"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.UpgradeParentVersion:
      name: "org.openrewrite.maven.UpgradeParentVersion"
      description: "Set the parent pom version number according to a [version selector](https://docs.openrewrite.org/reference/dependency-version-selectors)\
        \ or to a specific version number."
      docLink: "https://docs.openrewrite.org/recipes/maven/upgradeparentversion"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "newVersion"
        type: "String"
        required: true
      - name: "onlyExternal"
        type: "Boolean"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.UpgradePluginVersion:
      name: "org.openrewrite.maven.UpgradePluginVersion"
      description: "Upgrade the version of a plugin using Node Semver advanced range\
        \ selectors, allowing more precise control over version updates to patch or\
        \ minor releases."
      docLink: "https://docs.openrewrite.org/recipes/maven/upgradepluginversion"
      options:
      - name: "addVersionIfMissing"
        type: "Boolean"
        required: false
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "newVersion"
        type: "String"
        required: true
      - name: "trustParent"
        type: "Boolean"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.UpgradeTransitiveDependencyVersion:
      name: "org.openrewrite.maven.UpgradeTransitiveDependencyVersion"
      description: "Upgrades the version of a transitive dependency in a Maven pom\
        \ file. Leaves direct dependencies unmodified. Can be paired with the regular\
        \ Upgrade Dependency Version recipe to upgrade a dependency everywhere, regardless\
        \ of whether it is direct or transitive."
      docLink: "https://docs.openrewrite.org/recipes/maven/upgradetransitivedependencyversion"
      options:
      - name: "addToRootPom"
        type: "Boolean"
        required: false
      - name: "artifactId"
        type: "String"
        required: true
      - name: "classifier"
        type: "String"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "onlyIfUsing"
        type: "String"
        required: false
      - name: "releasesOnly"
        type: "Boolean"
        required: false
      - name: "scope"
        type: "String"
        required: false
      - name: "type"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: true
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.UseMavenCompilerPluginReleaseConfiguration:
      name: "org.openrewrite.maven.UseMavenCompilerPluginReleaseConfiguration"
      description: "Replaces any explicit `source` or `target` configuration (if present)\
        \ on the `maven-compiler-plugin` with `release`, and updates the `release`\
        \ value if needed. Will not downgrade the Java version if the current version\
        \ is higher."
      docLink: "https://docs.openrewrite.org/recipes/maven/usemavencompilerpluginreleaseconfiguration"
      options:
      - name: "releaseVersion"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.cleanup.DependencyManagementDependencyRequiresVersion:
      name: "org.openrewrite.maven.cleanup.DependencyManagementDependencyRequiresVersion"
      description: "If they don't have a version, they can't possibly affect dependency\
        \ resolution anywhere, and can be safely removed."
      docLink: "https://docs.openrewrite.org/recipes/maven/cleanup/dependencymanagementdependencyrequiresversion"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.cleanup.ExplicitPluginGroupId:
      name: "org.openrewrite.maven.cleanup.ExplicitPluginGroupId"
      description: "Add the default `<groupId>org.apache.maven.plugins</groupId>`\
        \ to plugins for clarity."
      docLink: "https://docs.openrewrite.org/recipes/maven/cleanup/explicitplugingroupid"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.cleanup.ExplicitPluginVersion:
      name: "org.openrewrite.maven.cleanup.ExplicitPluginVersion"
      description: "Add explicit plugin versions to POMs for reproducibility, as [MNG-4173](https://issues.apache.org/jira/browse/MNG-4173)\
        \ removes automatic version resolution for POM plugins."
      docLink: "https://docs.openrewrite.org/recipes/maven/cleanup/explicitpluginversion"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.cleanup.PrefixlessExpressions:
      name: "org.openrewrite.maven.cleanup.PrefixlessExpressions"
      description: "MNG-7404 drops support for prefixless in POMs. This recipe will\
        \ add the `project.` prefix where missing."
      docLink: "https://docs.openrewrite.org/recipes/maven/cleanup/prefixlessexpressions"
      options: []
      isImperative: false
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.DependencyInsight:
      name: "org.openrewrite.maven.search.DependencyInsight"
      description: "Find direct and transitive dependencies matching a group, artifact,\
        \ and scope. Results include dependencies that either directly match or transitively\
        \ include a matching dependency."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/dependencyinsight"
      options:
      - name: "artifactIdPattern"
        type: "String"
        required: true
      - name: "groupIdPattern"
        type: "String"
        required: true
      - name: "onlyDirect"
        type: "Boolean"
        required: false
      - name: "scope"
        type: "String"
        required: false
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.DoesNotIncludeDependency:
      name: "org.openrewrite.maven.search.DoesNotIncludeDependency"
      description: "A precondition which returns false if visiting a Maven pom which\
        \ includes the specified dependency in the classpath of some scope. For compatibility\
        \ with multimodule projects, this should most often be applied as a precondition."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/doesnotincludedependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "onlyDirect"
        type: "Boolean"
        required: false
      - name: "scope"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.EffectiveDependencies:
      name: "org.openrewrite.maven.search.EffectiveDependencies"
      description: "Emit the data of binary dependency relationships."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/effectivedependencies"
      options:
      - name: "scope"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.EffectiveManagedDependencies:
      name: "org.openrewrite.maven.search.EffectiveManagedDependencies"
      description: "Emit the data of binary dependency relationships."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/effectivemanageddependencies"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.EffectiveMavenRepositories:
      name: "org.openrewrite.maven.search.EffectiveMavenRepositories"
      description: "Lists the Maven repositories that would be used for dependency\
        \ resolution, in order of precedence. This includes Maven repositories defined\
        \ in the Maven settings file (and those contributed by active profiles) as\
        \ determined when the LST was produced."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/effectivemavenrepositories"
      options:
      - name: "useMarkers"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.FindDependency:
      name: "org.openrewrite.maven.search.FindDependency"
      description: "Finds first-order dependency uses, i.e. dependencies that are\
        \ defined directly in a project."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/finddependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.FindManagedDependency:
      name: "org.openrewrite.maven.search.FindManagedDependency"
      description: "Finds first-order dependency management entries, i.e. dependencies\
        \ that are defined directly in a project."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/findmanageddependency"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.FindMavenProject:
      name: "org.openrewrite.maven.search.FindMavenProject"
      description: "Maven projects are `pom.xml` files with a `MavenResolutionResult`\
        \ marker."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/findmavenproject"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.FindMavenSettings:
      name: "org.openrewrite.maven.search.FindMavenSettings"
      description: "List the effective maven settings file for the current project."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/findmavensettings"
      options:
      - name: "existenceCheckOnly"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.FindPlugin:
      name: "org.openrewrite.maven.search.FindPlugin"
      description: "Finds a Maven plugin within a pom.xml."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/findplugin"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.FindProperties:
      name: "org.openrewrite.maven.search.FindProperties"
      description: "Finds the specified Maven project properties within a pom.xml."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/findproperties"
      options:
      - name: "propertyPattern"
        type: "String"
        required: true
      - name: "valuePattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.FindRepositoryOrder:
      name: "org.openrewrite.maven.search.FindRepositoryOrder"
      description: "Determine the order in which dependencies will be resolved for\
        \ each `pom.xml` based on its defined repositories and effective `settings.xml`."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/findrepositoryorder"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.search.ParentPomInsight:
      name: "org.openrewrite.maven.search.ParentPomInsight"
      description: "Find Maven parents matching a `groupId` and `artifactId`."
      docLink: "https://docs.openrewrite.org/recipes/maven/search/parentpominsight"
      options:
      - name: "artifactIdPattern"
        type: "String"
        required: true
      - name: "groupIdPattern"
        type: "String"
        required: true
      - name: "recursive"
        type: "Boolean"
        required: false
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.security.UseHttpsForRepositories:
      name: "org.openrewrite.maven.security.UseHttpsForRepositories"
      description: "Use HTTPS for repository URLs."
      docLink: "https://docs.openrewrite.org/recipes/maven/security/usehttpsforrepositories"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
    org.openrewrite.maven.utilities.PrintMavenAsDot:
      name: "org.openrewrite.maven.utilities.PrintMavenAsDot"
      description: "The DOT language format is specified [here](https://graphviz.org/doc/info/lang.html)."
      docLink: "https://docs.openrewrite.org/recipes/maven/utilities/printmavenasdot"
      options: []
      isImperative: true
      artifactId: "rewrite-maven"
rewrite-micrometer:
  artifactId: "rewrite-micrometer"
  version: "0.17.0"
  markdownRecipeDescriptors:
    org.openrewrite.micrometer.TimerToObservation:
      name: "org.openrewrite.micrometer.TimerToObservation"
      description: "Convert Micrometer Timer to Observations."
      docLink: "https://docs.openrewrite.org/recipes/micrometer/timertoobservation"
      options: []
      isImperative: true
      artifactId: "rewrite-micrometer"
    org.openrewrite.micrometer.UpgradeMicrometer:
      name: "org.openrewrite.micrometer.UpgradeMicrometer"
      description: "This recipe will apply changes commonly needed when migrating\
        \ Micrometer."
      docLink: "https://docs.openrewrite.org/recipes/micrometer/upgrademicrometer"
      options: []
      isImperative: false
      artifactId: "rewrite-micrometer"
    org.openrewrite.micrometer.UpgradeMicrometer_1_13:
      name: "org.openrewrite.micrometer.UpgradeMicrometer_1_13"
      description: "Migrate applications to the latest Micrometer 1.13 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions\
        \ as described in the [Micrometer 1.13 migration guide](https://github.com/micrometer-metrics/micrometer/wiki/1.13-Migration-Guide)."
      docLink: "https://docs.openrewrite.org/recipes/micrometer/upgrademicrometer_1_13"
      options: []
      isImperative: false
      artifactId: "rewrite-micrometer"
    org.openrewrite.micrometer.dropwizard.FindDropwizardMetrics:
      name: "org.openrewrite.micrometer.dropwizard.FindDropwizardMetrics"
      description: "Find uses of Dropwizard metrics that could be converted to a more\
        \ modern metrics instrumentation library."
      docLink: "https://docs.openrewrite.org/recipes/micrometer/dropwizard/finddropwizardmetrics"
      options: []
      isImperative: true
      artifactId: "rewrite-micrometer"
    org.openrewrite.micrometer.misk.MigrateEmptyLabelMiskCounter:
      name: "org.openrewrite.micrometer.misk.MigrateEmptyLabelMiskCounter"
      description: "Convert a Misk (Prometheus) counter to a Micrometer counter."
      docLink: "https://docs.openrewrite.org/recipes/micrometer/misk/migrateemptylabelmiskcounter"
      options: []
      isImperative: true
      artifactId: "rewrite-micrometer"
    org.openrewrite.micrometer.misk.MigrateMiskToMicrometer:
      name: "org.openrewrite.micrometer.misk.MigrateMiskToMicrometer"
      description: "This recipe will move Misk metrics to Micrometer, where that is\
        \ possible to do without a loss of fidelity."
      docLink: "https://docs.openrewrite.org/recipes/micrometer/misk/migratemisktomicrometer"
      options: []
      isImperative: false
      artifactId: "rewrite-micrometer"
    org.openrewrite.micrometer.misk.NoExplicitEmptyLabelList:
      name: "org.openrewrite.micrometer.misk.NoExplicitEmptyLabelList"
      description: "`listOf()` is the default argument for the `labels` parameter."
      docLink: "https://docs.openrewrite.org/recipes/micrometer/misk/noexplicitemptylabellist"
      options: []
      isImperative: true
      artifactId: "rewrite-micrometer"
rewrite-micronaut:
  artifactId: "rewrite-micronaut"
  version: "2.19.0"
  markdownRecipeDescriptors:
    org.openrewrite.java.micronaut.AddAnnotationProcessorPath:
      name: "org.openrewrite.java.micronaut.AddAnnotationProcessorPath"
      description: "Add the groupId, artifactId, version, and exclusions of a Maven\
        \ annotation processor path."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/addannotationprocessorpath"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "exclusions"
        type: "List"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "onlyIfUsing"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.AddHttpRequestTypeParameter:
      name: "org.openrewrite.java.micronaut.AddHttpRequestTypeParameter"
      description: "Add an `HttpRequest` type parameter to a class `implements` statement\
        \ for interfaces that have been generically parameterized where they previously\
        \ specified `HttpRequest` explicitly."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/addhttprequesttypeparameter"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.AddMicronautRetryDependencyIfNeeded:
      name: "org.openrewrite.java.micronaut.AddMicronautRetryDependencyIfNeeded"
      description: "This recipe will add the explicit Micronaut Retry dependency if\
        \ needed"
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/addmicronautretrydependencyifneeded"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.AddMicronautWebsocketDependencyIfNeeded:
      name: "org.openrewrite.java.micronaut.AddMicronautWebsocketDependencyIfNeeded"
      description: "This recipe will add the explicit Micronaut Websocket dependency\
        \ if needed"
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/addmicronautwebsocketdependencyifneeded"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.AddSnakeYamlDependencyIfNeeded:
      name: "org.openrewrite.java.micronaut.AddSnakeYamlDependencyIfNeeded"
      description: "This recipe will add the `snakeyaml` dependency to a Micronaut\
        \ 4 application that uses yaml configuration."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/addsnakeyamldependencyifneeded"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.AddTestResourcesClientDependencyIfNeeded:
      name: "org.openrewrite.java.micronaut.AddTestResourcesClientDependencyIfNeeded"
      description: "Add the `micronaut-test-resources-client` dependency to pom.xml\
        \ if `test.resources.client.enabled property=true`."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/addtestresourcesclientdependencyifneeded"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.BeanPropertyCapitalizationStrategy:
      name: "org.openrewrite.java.micronaut.BeanPropertyCapitalizationStrategy"
      description: "As of Micronaut 3.x property names for getters like `getXForwarded()`\
        \ are de-capitalized from `XForwarded` to `xForwarded`."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/beanpropertycapitalizationstrategy"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.ChangeAnnotationProcessorPath:
      name: "org.openrewrite.java.micronaut.ChangeAnnotationProcessorPath"
      description: "Change the groupId, artifactId, and version of a Maven annotation\
        \ processor path."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/changeannotationprocessorpath"
      options:
      - name: "exclusions"
        type: "List"
        required: false
      - name: "newArtifactId"
        type: "String"
        required: false
      - name: "newGroupId"
        type: "String"
        required: false
      - name: "newVersion"
        type: "String"
        required: false
      - name: "oldArtifactId"
        type: "String"
        required: true
      - name: "oldGroupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.CopyNonInheritedAnnotations:
      name: "org.openrewrite.java.micronaut.CopyNonInheritedAnnotations"
      description: "As of Micronaut 3.x only [annotations](https://github.com/micronaut-projects/micronaut-core/blob/3.0.x/src/main/docs/guide/appendix/breaks.adoc#annotation-inheritance)\
        \ that are explicitly meta-annotated with `@Inherited` are inherited from\
        \ parent classes and interfaces."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/copynoninheritedannotations"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.FindPropertiesConfig:
      name: "org.openrewrite.java.micronaut.FindPropertiesConfig"
      description: "Find Micronaut properties configuration files."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/findpropertiesconfig"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.FindYamlConfig:
      name: "org.openrewrite.java.micronaut.FindYamlConfig"
      description: "Find Micronaut yaml configuration files."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/findyamlconfig"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.FixDeprecatedExceptionHandlerConstructors:
      name: "org.openrewrite.java.micronaut.FixDeprecatedExceptionHandlerConstructors"
      description: "Adds `ErrorResponseProcessor` argument to deprecated no-arg `ExceptionHandler`\
        \ constructors."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/fixdeprecatedexceptionhandlerconstructors"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.Micronaut2to3Migration:
      name: "org.openrewrite.java.micronaut.Micronaut2to3Migration"
      description: "This recipe will apply changes required for migrating from Micronaut\
        \ 2 to Micronaut 3."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/micronaut2to3migration"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.Micronaut3to4Migration:
      name: "org.openrewrite.java.micronaut.Micronaut3to4Migration"
      description: "This recipe will apply changes required for migrating from Micronaut\
        \ 3 to Micronaut 4."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/micronaut3to4migration"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.OncePerRequestHttpServerFilterToHttpServerFilter:
      name: "org.openrewrite.java.micronaut.OncePerRequestHttpServerFilterToHttpServerFilter"
      description: "Starting in Micronaut 3.0 all filters are executed once per request.\
        \ Directly implement `HttpServerFilter` instead of extending `OncePerRequestHttpServerFilter`\
        \ and replace any usages of `micronaut.once` attributes with a custom attribute\
        \ name."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/onceperrequesthttpserverfiltertohttpserverfilter"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.ProviderImplementationsToMicronautFactories:
      name: "org.openrewrite.java.micronaut.ProviderImplementationsToMicronautFactories"
      description: "As of Micronaut 3.x the `@Factory` annotation is required for\
        \ creating beans from `javax.inject.Provider get()` implementations."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/providerimplementationstomicronautfactories"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.RemoveAnnotationProcessorPath:
      name: "org.openrewrite.java.micronaut.RemoveAnnotationProcessorPath"
      description: "Remove the Maven annotation processor path that matches the given\
        \ groupId and artifactId."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/removeannotationprocessorpath"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.RemoveUnnecessaryDependencies:
      name: "org.openrewrite.java.micronaut.RemoveUnnecessaryDependencies"
      description: "This recipe will remove dependencies that are no longer explicitly\
        \ needed."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/removeunnecessarydependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.RemoveWithJansiLogbackConfiguration:
      name: "org.openrewrite.java.micronaut.RemoveWithJansiLogbackConfiguration"
      description: "This recipe will remove the withJansi configuration tag from logback.xml."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/removewithjansilogbackconfiguration"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.SubclassesReturnedFromFactoriesNotInjectable:
      name: "org.openrewrite.java.micronaut.SubclassesReturnedFromFactoriesNotInjectable"
      description: "As of Micronaut 3.x It is no longer possible to inject the internal\
        \ implementation type from beans produced via factories. Factory method return\
        \ types are changed to reflect the resolved return type if the method returns\
        \ a single non-null type that does not match the method declaration return\
        \ type."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/subclassesreturnedfromfactoriesnotinjectable"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.TypeRequiresIntrospection:
      name: "org.openrewrite.java.micronaut.TypeRequiresIntrospection"
      description: "In Micronaut 2.x a reflection-based strategy was used to retrieve\
        \ that information if the class was not annotated with `@Introspected`. As\
        \ of Micronaut 3.x it is required to annotate classes with `@Introspected`\
        \ that are used in this way."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/typerequiresintrospection"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateBlockingTaskExecutors:
      name: "org.openrewrite.java.micronaut.UpdateBlockingTaskExecutors"
      description: "This recipe will any usage of TaskExecutors.IO to TaskExecutors.BLOCKING\
        \ in order to be compatible with virtual threads."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updateblockingtaskexecutors"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateBuildPlugins:
      name: "org.openrewrite.java.micronaut.UpdateBuildPlugins"
      description: "This recipe will update the shadow jar plugin to 8.x and the Micronaut\
        \ build plugins to 4.x for a Gradle build."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatebuildplugins"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateBuildToMicronaut4Version:
      name: "org.openrewrite.java.micronaut.UpdateBuildToMicronaut4Version"
      description: "This recipe will update the Micronaut version to 4.x for a Gradle\
        \ or Maven build."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatebuildtomicronaut4version"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateJakartaAnnotations:
      name: "org.openrewrite.java.micronaut.UpdateJakartaAnnotations"
      description: "This recipe will remove jakarta annotations dependency as it is\
        \ a transitive dependency of micronaut-inject, and migrate from javax.annotation\
        \ if needed."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatejakartaannotations"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateMavenAnnotationProcessors:
      name: "org.openrewrite.java.micronaut.UpdateMavenAnnotationProcessors"
      description: "This recipe will update the version of Maven-configured annotation\
        \ processors from Micronaut Core."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatemavenannotationprocessors"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateMicronautData:
      name: "org.openrewrite.java.micronaut.UpdateMicronautData"
      description: "This recipe will make the necessary updates for using Micronaut\
        \ Data with Micronaut Framework 4."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatemicronautdata"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateMicronautEmail:
      name: "org.openrewrite.java.micronaut.UpdateMicronautEmail"
      description: "This recipe will migrate from javax.validation if needed, and\
        \ update packages in for the Postmark integration if needed."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatemicronautemail"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateMicronautPlatformBom:
      name: "org.openrewrite.java.micronaut.UpdateMicronautPlatformBom"
      description: "This recipe will update a Gradle or Maven build to reference the\
        \ Micronaut 4 platform BOM."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatemicronautplatformbom"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateMicronautSecurity:
      name: "org.openrewrite.java.micronaut.UpdateMicronautSecurity"
      description: "This recipe will update imports for relocated classes and update\
        \ configuration files with renamed keys."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatemicronautsecurity"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateMicronautSession:
      name: "org.openrewrite.java.micronaut.UpdateMicronautSession"
      description: "This recipe will update the Micronaut Session dependency if needed"
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatemicronautsession"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateMicronautValidation:
      name: "org.openrewrite.java.micronaut.UpdateMicronautValidation"
      description: "This recipe will add jakarta validation dependency if needed,\
        \ migrate from javax.validation if needed, and update micronaut validation\
        \ dependencies."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatemicronautvalidation"
      options: []
      isImperative: false
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateSecurityPropertiesIfNeeded:
      name: "org.openrewrite.java.micronaut.UpdateSecurityPropertiesIfNeeded"
      description: "This recipe will update relocated security config keys in Micronaut\
        \ configuration property files."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatesecuritypropertiesifneeded"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpdateSecurityYamlIfNeeded:
      name: "org.openrewrite.java.micronaut.UpdateSecurityYamlIfNeeded"
      description: "This recipe will update relocated security config keys in Micronaut\
        \ configuration yaml files."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/updatesecurityyamlifneeded"
      options: []
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpgradeMicronautGradlePropertiesVersion:
      name: "org.openrewrite.java.micronaut.UpgradeMicronautGradlePropertiesVersion"
      description: "Set the gradle.properties version number according to a node-style\
        \ semver selector or to a specific version number."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/upgrademicronautgradlepropertiesversion"
      options:
      - name: "newVersion"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-micronaut"
    org.openrewrite.java.micronaut.UpgradeMicronautMavenPropertyVersion:
      name: "org.openrewrite.java.micronaut.UpgradeMicronautMavenPropertyVersion"
      description: "Set the maven micronaut.version property according to a node-style\
        \ semver selector or to a specific version number."
      docLink: "https://docs.openrewrite.org/recipes/java/micronaut/upgrademicronautmavenpropertyversion"
      options:
      - name: "newVersion"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-micronaut"
rewrite-migrate-java:
  artifactId: "rewrite-migrate-java"
  version: "3.4.0"
  markdownRecipeDescriptors:
    org.openrewrite.java.jspecify.MigrateFromJakartaAnnotationApi:
      name: "org.openrewrite.java.jspecify.MigrateFromJakartaAnnotationApi"
      description: "Migrate from Jakarta annotation API to JSpecify."
      docLink: "https://docs.openrewrite.org/recipes/java/jspecify/migratefromjakartaannotationapi"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.jspecify.MigrateFromJavaxAnnotationApi:
      name: "org.openrewrite.java.jspecify.MigrateFromJavaxAnnotationApi"
      description: "Migrate from javax annotation API to JSpecify."
      docLink: "https://docs.openrewrite.org/recipes/java/jspecify/migratefromjavaxannotationapi"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.jspecify.MigrateFromJetbrainsAnnotations:
      name: "org.openrewrite.java.jspecify.MigrateFromJetbrainsAnnotations"
      description: "Migrate from JetBrains annotations to JSpecify."
      docLink: "https://docs.openrewrite.org/recipes/java/jspecify/migratefromjetbrainsannotations"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.jspecify.MigrateFromSpringFrameworkAnnotations:
      name: "org.openrewrite.java.jspecify.MigrateFromSpringFrameworkAnnotations"
      description: "Migrate from Spring Framework annotations to JSpecify."
      docLink: "https://docs.openrewrite.org/recipes/java/jspecify/migratefromspringframeworkannotations"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.jspecify.MigrateToJspecify:
      name: "org.openrewrite.java.jspecify.MigrateToJspecify"
      description: "This recipe will migrate to JSpecify annotations from various\
        \ other nullability annotation standards."
      docLink: "https://docs.openrewrite.org/recipes/java/jspecify/migratetojspecify"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.AddJDeprScanPlugin:
      name: "org.openrewrite.java.migrate.AddJDeprScanPlugin"
      description: "Add the `JDeprScan` Maven plugin to scan class files for uses\
        \ of deprecated APIs."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/addjdeprscanplugin"
      options:
      - name: "release"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.AddLombokMapstructBinding:
      name: "org.openrewrite.java.migrate.AddLombokMapstructBinding"
      description: "Add the `lombok-mapstruct-binding` annotation processor as needed\
        \ when both MapStruct and Lombok are used."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/addlombokmapstructbinding"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.AddMissingMethodImplementation:
      name: "org.openrewrite.java.migrate.AddMissingMethodImplementation"
      description: "Check for missing methods required by interfaces and adds them."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/addmissingmethodimplementation"
      options:
      - name: "fullyQualifiedClassName"
        type: "String"
        required: true
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "methodTemplateString"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.AddSuppressionForIllegalReflectionWarningsPlugin:
      name: "org.openrewrite.java.migrate.AddSuppressionForIllegalReflectionWarningsPlugin"
      description: "Adds a maven jar plugin that's configured to suppress Illegal\
        \ Reflection Warnings."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/addsuppressionforillegalreflectionwarningsplugin"
      options:
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.ArrayStoreExceptionToTypeNotPresentException:
      name: "org.openrewrite.java.migrate.ArrayStoreExceptionToTypeNotPresentException"
      description: "Replace catch blocks for `ArrayStoreException` around `Class.getAnnotation()`\
        \ with `TypeNotPresentException` to ensure compatibility with Java 11+."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/arraystoreexceptiontotypenotpresentexception"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.BeanDiscovery:
      name: "org.openrewrite.java.migrate.BeanDiscovery"
      description: "Alters beans with missing version attribute to include this attribute\
        \ as well as the bean-discovery-mode=\"all\" attribute to maintain an explicit\
        \ bean archive."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/beandiscovery"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.BeansXmlNamespace:
      name: "org.openrewrite.java.migrate.BeansXmlNamespace"
      description: "Set the `schemaLocation` that corresponds to the `xmlns` set in\
        \ `beans.xml` files."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/beansxmlnamespace"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.CastArraysAsListToList:
      name: "org.openrewrite.java.migrate.CastArraysAsListToList"
      description: "Convert code like `(Integer[]) Arrays.asList(1, 2, 3).toArray()`\
        \ to `Arrays.asList(1, 2, 3).toArray(new Integer[0])`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/castarraysaslisttolist"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.ChangeDefaultKeyStore:
      name: "org.openrewrite.java.migrate.ChangeDefaultKeyStore"
      description: "In Java 11 the default keystore was updated from JKS to PKCS12.\
        \ As a result, applications relying on KeyStore.getDefaultType() may encounter\
        \ issues after migrating, unless their JKS keystore has been converted to\
        \ PKCS12. This recipe returns default key store of `jks` when `KeyStore.getDefaultType()`\
        \ method is called to use the pre Java 11 default keystore."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/changedefaultkeystore"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.ChangeMethodInvocationReturnType:
      name: "org.openrewrite.java.migrate.ChangeMethodInvocationReturnType"
      description: "Changes the return type of a method invocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/changemethodinvocationreturntype"
      options:
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "newReturnType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.DeleteDeprecatedFinalize:
      name: "org.openrewrite.java.migrate.DeleteDeprecatedFinalize"
      description: "The java.desktop module had a few implementations of finalize()\
        \ that did nothing and have been removed. This recipe will remove these methods."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/deletedeprecatedfinalize"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.DeprecatedCountStackFramesMethod:
      name: "org.openrewrite.java.migrate.DeprecatedCountStackFramesMethod"
      description: "`Thread.countStackFrames()` has been removed in Java SE 14 and\
        \ has been changed in this release to unconditionally throw `UnsupportedOperationException`\n\
        \ This recipe removes the usage of this method in your application as long\
        \ as the method is not assigned to a variable.\n For more information on the\
        \ Java SE 14 deprecation of this method, see https://bugs.java.com/bugdatabase/view_bug?bug_id=8205132."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/deprecatedcountstackframesmethod"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.DeprecatedJavaxSecurityCert:
      name: "org.openrewrite.java.migrate.DeprecatedJavaxSecurityCert"
      description: "The `javax.security.cert` package has been deprecated for removal."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/deprecatedjavaxsecuritycert"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.DeprecatedLogRecordThreadID:
      name: "org.openrewrite.java.migrate.DeprecatedLogRecordThreadID"
      description: "Avoid using the deprecated methods in `java.util.logging.LogRecord`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/deprecatedlogrecordthreadid"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.DontOverfetchDto:
      name: "org.openrewrite.java.migrate.DontOverfetchDto"
      description: "Replace method parameters that have DTOs with their data elements\
        \ when only the specified data element is used."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/dontoverfetchdto"
      options:
      - name: "dtoDataElement"
        type: "String"
        required: true
      - name: "dtoType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.IBMJDKtoOracleJDK:
      name: "org.openrewrite.java.migrate.IBMJDKtoOracleJDK"
      description: "This recipe will apply changes commonly needed when upgrading\
        \ Java versions. The solutions provided in this list are solutions necessary\
        \ for migrating from IBM Runtimes to Oracle Runtimes."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/ibmjdktooraclejdk"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.IBMSemeru:
      name: "org.openrewrite.java.migrate.IBMSemeru"
      description: "This recipe will apply changes commonly needed when upgrading\
        \ Java versions. The solutions provided in this list are solutions only available\
        \ in IBM Semeru Runtimes."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/ibmsemeru"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.IllegalArgumentExceptionToAlreadyConnectedException:
      name: "org.openrewrite.java.migrate.IllegalArgumentExceptionToAlreadyConnectedException"
      description: "Replace `IllegalArgumentException` with `AlreadyConnectedException`\
        \ for DatagramChannel.send() to ensure compatibility with Java 11+."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/illegalargumentexceptiontoalreadyconnectedexception"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.InternalBindPackages:
      name: "org.openrewrite.java.migrate.InternalBindPackages"
      description: "Do not use APIs from `com.sun.xml.internal.bind.*` packages."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/internalbindpackages"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.JREDoNotUseSunNetSslAPIs:
      name: "org.openrewrite.java.migrate.JREDoNotUseSunNetSslAPIs"
      description: "Do not use APIs from `com.sun.net.ssl` packages."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jredonotusesunnetsslapis"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.JREDoNotUseSunNetSslInternalSslProvider:
      name: "org.openrewrite.java.migrate.JREDoNotUseSunNetSslInternalSslProvider"
      description: "Do not use the `com.sun.net.ssl.internal.ssl.Provider` class."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jredonotusesunnetsslinternalsslprovider"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.JREDoNotUseSunNetSslInternalWwwProtocol:
      name: "org.openrewrite.java.migrate.JREDoNotUseSunNetSslInternalWwwProtocol"
      description: "Do not use the `com.sun.net.ssl.internal.www.protocol` package."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jredonotusesunnetsslinternalwwwprotocol"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.JREDoNotUseSunNetSslInternalWwwProtocolHttpsHandler:
      name: "org.openrewrite.java.migrate.JREDoNotUseSunNetSslInternalWwwProtocolHttpsHandler"
      description: "Do not use the `com.sun.net.ssl.internal.www.protocol.https.Handler`\
        \ class."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jredonotusesunnetsslinternalwwwprotocolhttpshandler"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.JREJdbcInterfaceNewMethods:
      name: "org.openrewrite.java.migrate.JREJdbcInterfaceNewMethods"
      description: "Add method implementations stubs to classes that implement JDBC\
        \ interfaces."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jrejdbcinterfacenewmethods"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.JREThrowableFinalMethods:
      name: "org.openrewrite.java.migrate.JREThrowableFinalMethods"
      description: "The recipe renames  `getSuppressed()` and `addSuppressed(Throwable\
        \ exception)` methods  in classes that extend `java.lang.Throwable` to `myGetSuppressed`\
        \ and `myAddSuppressed(Throwable)`.These methods were added to Throwable in\
        \ Java 7 and are marked final which cannot be overridden."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jrethrowablefinalmethods"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.JREWrapperInterface:
      name: "org.openrewrite.java.migrate.JREWrapperInterface"
      description: "Add method implementations stubs to classes that implement `java.sql.Wrapper`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jrewrapperinterface"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.Java8toJava11:
      name: "org.openrewrite.java.migrate.Java8toJava11"
      description: "This recipe will apply changes commonly needed when upgrading\
        \ to Java 11. Specifically, for those applications that are built on Java\
        \ 8, this recipe will update and add dependencies on J2EE libraries that are\
        \ no longer directly bundled with the JDK. This recipe will also replace deprecated\
        \ API with equivalents when there is a clear migration strategy. Build files\
        \ will also be updated to use Java 11 as the target/source and plugins will\
        \ be also be upgraded to versions that are compatible with Java 11."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/java8tojava11"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.JpaCacheProperties:
      name: "org.openrewrite.java.migrate.JpaCacheProperties"
      description: "Sets an explicit value for the shared cache mode."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jpacacheproperties"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.Jre17AgentMainPreMainPublic:
      name: "org.openrewrite.java.migrate.Jre17AgentMainPreMainPublic"
      description: "Check for a behavior change in Java agents."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jre17agentmainpremainpublic"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.Krb5LoginModuleClass:
      name: "org.openrewrite.java.migrate.Krb5LoginModuleClass"
      description: "Do not use the `com.ibm.security.auth.module.Krb5LoginModule`\
        \ class."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/krb5loginmoduleclass"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.MXBeanRule:
      name: "org.openrewrite.java.migrate.MXBeanRule"
      description: "Sets visibility of MBean and MXBean interfaces to public."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/mxbeanrule"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.ReferenceCloneMethod:
      name: "org.openrewrite.java.migrate.ReferenceCloneMethod"
      description: "The recipe replaces any clone calls that may resolve to a `java.lang.ref.Reference.clone()`\
        \ or any of its known subclasses: `java.lang.ref.PhantomReference`, `java.lang.ref.SoftReference`,\
        \ and `java.lang.ref.WeakReference` with a constructor call passing in the\
        \ referent and reference queue as parameters."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/referenceclonemethod"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemoveIllegalSemicolons:
      name: "org.openrewrite.java.migrate.RemoveIllegalSemicolons"
      description: "Remove semicolons after package declarations and imports, no longer\
        \ accepted in Java 21 as of [JDK-8027682](https://bugs.openjdk.org/browse/JDK-8027682)."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removeillegalsemicolons"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedFileIOFinalizeMethods:
      name: "org.openrewrite.java.migrate.RemovedFileIOFinalizeMethods"
      description: "The `finalize` method in `java.io.FileInputStream` and `java.io.FileOutputStream`\
        \ is no longer available in Java SE 12 and later. The recipe replaces it with\
        \ the `close` method."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedfileiofinalizemethods"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedJavaXMLWSModuleProvided:
      name: "org.openrewrite.java.migrate.RemovedJavaXMLWSModuleProvided"
      description: "The `java.xml.ws` module was removed in Java11. Websphere Liberty\
        \ provides its own implementation of the module, which can be used by specifying\
        \ the `jaxws-2.2` feature in the server.xml file. This recipe removes the\
        \ `javax.xml.ws` module from the application's build dependency in favor of\
        \ the Websphere Liberty implementation to avoid class loading issues."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedjavaxmlwsmoduleprovided"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedJaxBModuleProvided:
      name: "org.openrewrite.java.migrate.RemovedJaxBModuleProvided"
      description: "The `java.xml.bind` and `java.activation` modules were removed\
        \ in Java11. Websphere Liberty provides its own implementation of the modules,\
        \ which can be used by specifying the `jaxb-2.2` feature in the server.xml\
        \ file. This recipe removes the `javax.xml.bind` and `javax.activation` modules\
        \ from the application's build dependency in favor of the Websphere Liberty\
        \ implementation to avoid class loading issues."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedjaxbmoduleprovided"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedLegacySunJSSEProviderName:
      name: "org.openrewrite.java.migrate.RemovedLegacySunJSSEProviderName"
      description: "The `com.sun.net.ssl.internal.ssl.Provider` provider name was\
        \ removed."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedlegacysunjsseprovidername"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedModifierAndConstantBootstrapsConstructors:
      name: "org.openrewrite.java.migrate.RemovedModifierAndConstantBootstrapsConstructors"
      description: "The `java.lang.reflect.Modifier()` and `java.lang.invoke.ConstantBootstraps()`\
        \ constructors have been removed in Java SE 15 because both classes only contain\
        \ static methods. This recipe converts the usage of all methods in the two\
        \ classes to be  static. See https://docs.oracle.com/en/java/javase/15/migrate/index.html#GUID-233853B8-0782-429E-BEF7-7532EE610E63\
        \ for more information on these changes."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedmodifierandconstantbootstrapsconstructors"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedPolicy:
      name: "org.openrewrite.java.migrate.RemovedPolicy"
      description: "The `javax.security.auth.Policy` class is not available from Java\
        \ SE 11 onwards."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedpolicy"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedRMIConnectorServerCredentialTypesConstant:
      name: "org.openrewrite.java.migrate.RemovedRMIConnectorServerCredentialTypesConstant"
      description: "This recipe replaces the `RMIConnectorServer.CREDENTIAL_TYPES`\
        \ constant with the `RMIConnectorServer.CREDENTIALS_FILTER_PATTERN` constant."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedrmiconnectorservercredentialtypesconstant"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedRuntimeTraceMethods:
      name: "org.openrewrite.java.migrate.RemovedRuntimeTraceMethods"
      description: "The `traceInstructions` and `traceMethodCalls` methods in `java.lang.Runtime`\
        \ were deprecated in Java SE 9 and are no longer available in Java SE 13 and\
        \ later. The recipe removes the invocations of these methods since the method\
        \ invocations do nothing functionally."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedruntimetracemethods"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedSSLSessionGetPeerCertificateChainMethodImpl:
      name: "org.openrewrite.java.migrate.RemovedSSLSessionGetPeerCertificateChainMethodImpl"
      description: "The `javax.net.ssl.SSLSession.getPeerCertificateChain()` method\
        \ implementation was removed from the SunJSSE provider and HTTP client implementation\
        \ in Java SE 15. The default implementation will now throw an `UnsupportedOperationException`.\
        \ Applications using this method should be updated to use the `javax.net.ssl.SSLSession.getPeerCertificates()`\
        \ method instead."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedsslsessiongetpeercertificatechainmethodimpl"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedSecurityManagerMethods:
      name: "org.openrewrite.java.migrate.RemovedSecurityManagerMethods"
      description: "Replace `SecurityManager` methods `checkAwtEventQueueAccess()`,\
        \ `checkSystemClipboardAccess()`, `checkMemberAccess()` and `checkTopLevelWindow()`\
        \ deprecated in Java SE 11 by `checkPermission(new java.security.AllPermission())`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedsecuritymanagermethods"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedSubjectMethods:
      name: "org.openrewrite.java.migrate.RemovedSubjectMethods"
      description: "Replaces the `javax.security.auth.Subject.getSubject()` and `javax.security.auth.Subject.doAs()`\
        \ methods with `javax.security.auth.Subject.current()` and `javax.security.auth.Subject.callAs()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedsubjectmethods"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedToolProviderConstructor:
      name: "org.openrewrite.java.migrate.RemovedToolProviderConstructor"
      description: "The `javax.tools.ToolProvider()` constructor has been removed\
        \ in Java SE 16 since the class only contains static methods. The recipe converts\
        \ `javax.tools.ToolProvider getSystemJavaCompiler()`, `javax.tools.ToolProvider\
        \ getSystemDocumentationTool()` and `javax.tools.ToolProvider getSystemToolClassLoader()`\
        \ to static methods."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedtoolproviderconstructor"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.RemovedZipFinalizeMethods:
      name: "org.openrewrite.java.migrate.RemovedZipFinalizeMethods"
      description: "The `finalize` method in `java.util.zip.ZipFile` is replaced with\
        \ the `close` method and is replaced by the `end` method in\n `java.util.zip.Inflater`\
        \ and `java.util.zip.Deflater` as it is no longer available in Java SE 12\
        \ and later."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/removedzipfinalizemethods"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.ReplaceAWTGetPeerMethod:
      name: "org.openrewrite.java.migrate.ReplaceAWTGetPeerMethod"
      description: "This recipe replaces the use of `getPeer()` method in `java.awt.*`\
        \ classes. `component.getPeer() != null` is replaced with `component.isDisplayable()`\
        \ and `component.getPeer() instanceof LightweightPeer` is replaced with `component.isLightweight()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/replaceawtgetpeermethod"
      options:
      - name: "getPeerMethodPattern"
        type: "String"
        required: false
      - name: "lightweightPeerFQCN"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.ReplaceComSunAWTUtilitiesMethods:
      name: "org.openrewrite.java.migrate.ReplaceComSunAWTUtilitiesMethods"
      description: "This recipe replaces several static calls  in `com.sun.awt.AWTUtilities`\
        \ with the JavaSE 11 equivalent. The methods replaced are `AWTUtilities.isTranslucencySupported()`,\
        \ `AWTUtilities.setWindowOpacity()`, `AWTUtilities.getWindowOpacity()`, `AWTUtilities.getWindowShape()`,\
        \ `AWTUtilities.isWindowOpaque()`, `AWTUtilities.isTranslucencyCapable()`\
        \ and `AWTUtilities.setComponentMixingCutoutShape()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/replacecomsunawtutilitiesmethods"
      options:
      - name: "getAWTIsWindowsTranslucencyPattern"
        type: "String"
        required: false
      - name: "getWindowOpacityPattern"
        type: "String"
        required: false
      - name: "getWindowShapePattern"
        type: "String"
        required: false
      - name: "isTranslucencyCapablePattern"
        type: "String"
        required: false
      - name: "isWindowOpaquePattern"
        type: "String"
        required: false
      - name: "setComponentMixingCutoutShapePattern"
        type: "String"
        required: false
      - name: "setWindowOpacityPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.ReplaceLocalizedStreamMethods:
      name: "org.openrewrite.java.migrate.ReplaceLocalizedStreamMethods"
      description: "Replaces `Runtime.getLocalizedInputStream(InputStream)` and `Runtime.getLocalizedOutputStream(OutputStream)`\
        \ with their direct arguments. This modification is made because the previous\
        \ implementation of `getLocalizedInputStream` and `getLocalizedOutputStream`\
        \ merely returned the arguments provided."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/replacelocalizedstreammethods"
      options:
      - name: "localizedInputStreamMethodMatcher"
        type: "String"
        required: false
      - name: "localizedOutputStreamMethodMatcher"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.ReplaceStringLiteralValue:
      name: "org.openrewrite.java.migrate.ReplaceStringLiteralValue"
      description: "Replace the value of a complete `String` literal."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/replacestringliteralvalue"
      options:
      - name: "newLiteralValue"
        type: "String"
        required: true
      - name: "oldLiteralValue"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.SunNetSslPackageUnavailable:
      name: "org.openrewrite.java.migrate.SunNetSslPackageUnavailable"
      description: "The internal API `com.sun.net.ssl` is removed. The package was\
        \ intended for internal use only and replacement APIs can be found in the\
        \ `javax.net.ssl` package."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/sunnetsslpackageunavailable"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.ThreadStopDestroy:
      name: "org.openrewrite.java.migrate.ThreadStopDestroy"
      description: "The `java.lang.Thread.destroy()` method was never implemented,\
        \ and the `java.lang.Thread.stop(java.lang.Throwable)` method has been unusable\
        \ since Java SE 8. This recipe removes any usage of these methods from your\
        \ application."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/threadstopdestroy"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpdateSdkMan:
      name: "org.openrewrite.java.migrate.UpdateSdkMan"
      description: "Update the SDKMAN JDK version in the `.sdkmanrc` file. Given a\
        \ major release (e.g., 17), the recipe will update the current distribution\
        \ to the current default SDKMAN version of the specified major release. The\
        \ distribution option can be used to specify a specific JVM distribution.\
        \ Note that these must correspond to valid SDKMAN distributions."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/updatesdkman"
      options:
      - name: "newDistribution"
        type: "String"
        required: false
      - name: "newVersion"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradeBuildToJava11:
      name: "org.openrewrite.java.migrate.UpgradeBuildToJava11"
      description: "Updates build files to use Java 11 as the target/source."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradebuildtojava11"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradeBuildToJava17:
      name: "org.openrewrite.java.migrate.UpgradeBuildToJava17"
      description: "Updates build files to use Java 17 as the target/source."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradebuildtojava17"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradeBuildToJava21:
      name: "org.openrewrite.java.migrate.UpgradeBuildToJava21"
      description: "Updates build files to use Java 21 as the target/source."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradebuildtojava21"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradeJavaVersion:
      name: "org.openrewrite.java.migrate.UpgradeJavaVersion"
      description: "Upgrade build plugin configuration to use the specified Java version.\
        \ This recipe changes `java.toolchain.languageVersion` in `build.gradle(.kts)`\
        \ of gradle projects, or maven-compiler-plugin target version and related\
        \ settings. Will not downgrade if the version is newer than the specified\
        \ version."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradejavaversion"
      options:
      - name: "version"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradePluginsForJava11:
      name: "org.openrewrite.java.migrate.UpgradePluginsForJava11"
      description: "Updates plugins to version compatible with Java 11."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradepluginsforjava11"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradePluginsForJava17:
      name: "org.openrewrite.java.migrate.UpgradePluginsForJava17"
      description: "Updates plugins to version compatible with Java 17."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradepluginsforjava17"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradePluginsForJava21:
      name: "org.openrewrite.java.migrate.UpgradePluginsForJava21"
      description: "Updates plugins and dependencies to version compatible with Java\
        \ 21."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradepluginsforjava21"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradeToJava17:
      name: "org.openrewrite.java.migrate.UpgradeToJava17"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Java 17. Specifically, for those applications that are built on Java\
        \ 8, this recipe will update and add dependencies on J2EE libraries that are\
        \ no longer directly bundled with the JDK. This recipe will also replace deprecated\
        \ API with equivalents when there is a clear migration strategy. Build files\
        \ will also be updated to use Java 17 as the target/source and plugins will\
        \ be also be upgraded to versions that are compatible with Java 17."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradetojava17"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradeToJava21:
      name: "org.openrewrite.java.migrate.UpgradeToJava21"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Java 21. This recipe will also replace deprecated API with equivalents\
        \ when there is a clear migration strategy. Build files will also be updated\
        \ to use Java 21 as the target/source and plugins will be also be upgraded\
        \ to versions that are compatible with Java 21."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradetojava21"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradeToJava6:
      name: "org.openrewrite.java.migrate.UpgradeToJava6"
      description: "This recipe will apply changes commonly needed when upgrading\
        \ to Java 6. This recipe will also replace deprecated API with equivalents\
        \ when there is a clear migration strategy."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradetojava6"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradeToJava7:
      name: "org.openrewrite.java.migrate.UpgradeToJava7"
      description: "This recipe will apply changes commonly needed when upgrading\
        \ to Java 7. This recipe will also replace deprecated API with equivalents\
        \ when there is a clear migration strategy."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradetojava7"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UpgradeToJava8:
      name: "org.openrewrite.java.migrate.UpgradeToJava8"
      description: "This recipe will apply changes commonly needed when upgrading\
        \ to Java 8. This recipe will also replace deprecated API with equivalents\
        \ when there is a clear migration strategy."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/upgradetojava8"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UseJavaUtilBase64:
      name: "org.openrewrite.java.migrate.UseJavaUtilBase64"
      description: "Prefer `java.util.Base64` instead of using `sun.misc` in Java\
        \ 8 or higher. `sun.misc` is not exported by the Java module system and accessing\
        \ this class will result in a warning in Java 11 and an error in Java 17."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/usejavautilbase64"
      options:
      - name: "useMimeCoder"
        type: "boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.UseTabsOrSpaces:
      name: "org.openrewrite.java.migrate.UseTabsOrSpaces"
      description: "This is useful for one-off migrations of a codebase that has mixed\
        \ indentation styles, while preserving all other auto-detected formatting\
        \ rules."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/usetabsorspaces"
      options:
      - name: "useTabs"
        type: "boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.cobertura.RemoveCoberturaMavenPlugin:
      name: "org.openrewrite.java.migrate.cobertura.RemoveCoberturaMavenPlugin"
      description: "This recipe will remove Cobertura, as it is not compatible with\
        \ Java 11."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/cobertura/removecoberturamavenplugin"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.concurrent.JavaConcurrentAPIs:
      name: "org.openrewrite.java.migrate.concurrent.JavaConcurrentAPIs"
      description: "The Java concurrent APIs were updated in Java 9 and those changes\
        \ resulted in certain APIs being deprecated. This recipe update an application\
        \ to replace the deprecated APIs with their modern alternatives."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/concurrent/javaconcurrentapis"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.concurrent.MigrateAtomicBooleanWeakCompareAndSetToWeakCompareAndSetPlain:
      name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicBooleanWeakCompareAndSetToWeakCompareAndSetPlain"
      description: "Use `AtomicBoolean#weakCompareAndSetPlain(boolean, boolean)` instead\
        \ of the deprecated `AtomicBoolean#weakCompareAndSet(boolean, boolean)` in\
        \ Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/concurrent/migrateatomicbooleanweakcompareandsettoweakcompareandsetplain"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.concurrent.MigrateAtomicIntegerArrayWeakCompareAndSetToWeakCompareAndSetPlain:
      name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicIntegerArrayWeakCompareAndSetToWeakCompareAndSetPlain"
      description: "Use `AtomicIntegerArray#weakCompareAndSetPlain(int, int, int)`\
        \ instead of the deprecated `AtomicIntegerArray#weakCompareAndSet(int, int,\
        \ int)` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/concurrent/migrateatomicintegerarrayweakcompareandsettoweakcompareandsetplain"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.concurrent.MigrateAtomicIntegerWeakCompareAndSetToWeakCompareAndSetPlain:
      name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicIntegerWeakCompareAndSetToWeakCompareAndSetPlain"
      description: "Use `AtomicInteger#weakCompareAndSetPlain(int, int)` instead of\
        \ the deprecated `AtomicInteger#weakCompareAndSet(int, int)` in Java 9 or\
        \ higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/concurrent/migrateatomicintegerweakcompareandsettoweakcompareandsetplain"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.concurrent.MigrateAtomicLongArrayWeakCompareAndSetToWeakCompareAndSetPlain:
      name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicLongArrayWeakCompareAndSetToWeakCompareAndSetPlain"
      description: "Use `AtomicLongArray#weakCompareAndSetPlain(int, long, long)`\
        \ instead of the deprecated `AtomicLongArray#weakCompareAndSet(int, long,\
        \ long)` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/concurrent/migrateatomiclongarrayweakcompareandsettoweakcompareandsetplain"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.concurrent.MigrateAtomicLongWeakCompareAndSetToWeakCompareAndSetPlain:
      name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicLongWeakCompareAndSetToWeakCompareAndSetPlain"
      description: "Use `AtomicLong#weakCompareAndSetPlain(long, long)` instead of\
        \ the deprecated `AtomicLong#weakCompareAndSet(long, long)` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/concurrent/migrateatomiclongweakcompareandsettoweakcompareandsetplain"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.concurrent.MigrateAtomicReferenceArrayWeakCompareAndSetToWeakCompareAndSetPlain:
      name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicReferenceArrayWeakCompareAndSetToWeakCompareAndSetPlain"
      description: "Use `AtomicReferenceArray#weakCompareAndSetPlain(int, T, T)` instead\
        \ of the deprecated `AtomicReferenceArray#weakCompareAndSet(int, T, T)` in\
        \ Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/concurrent/migrateatomicreferencearrayweakcompareandsettoweakcompareandsetplain"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.concurrent.MigrateAtomicReferenceWeakCompareAndSetToWeakCompareAndSetPlain:
      name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicReferenceWeakCompareAndSetToWeakCompareAndSetPlain"
      description: "Use `AtomicReference#weakCompareAndSetPlain(T, T)` instead of\
        \ the deprecated `AtomicReference#weakCompareAndSet(T, T)` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/concurrent/migrateatomicreferenceweakcompareandsettoweakcompareandsetplain"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuava:
      name: "org.openrewrite.java.migrate.guava.NoGuava"
      description: "Guava filled in important gaps in the Java standard library and\
        \ still does. But at least some of Guava's API surface area is covered by\
        \ the Java standard library now, and some projects may be able to remove Guava\
        \ altogether if they migrate to standard library for these functions."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguava"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaAtomicsNewReference:
      name: "org.openrewrite.java.migrate.guava.NoGuavaAtomicsNewReference"
      description: "Prefer the Java standard library over third-party usage of Guava\
        \ in simple cases like this."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavaatomicsnewreference"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaCreateTempDir:
      name: "org.openrewrite.java.migrate.guava.NoGuavaCreateTempDir"
      description: "Replaces Guava `Files#createTempDir()` with Java `Files#createTempDirectory(..)`.\
        \ Transformations are limited to scopes throwing or catching `java.io.IOException`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavacreatetempdir"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaDirectExecutor:
      name: "org.openrewrite.java.migrate.guava.NoGuavaDirectExecutor"
      description: "`Executor` is a SAM-compatible interface, so `Runnable::run` is\
        \ just as succinct as `MoreExecutors.directExecutor()` but without the third-party\
        \ library requirement."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavadirectexecutor"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaImmutableListOf:
      name: "org.openrewrite.java.migrate.guava.NoGuavaImmutableListOf"
      description: "Replaces `.common.collect.ImmutableList.of(..)` if the returned\
        \ type is immediately down-cast."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavaimmutablelistof"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaImmutableMapOf:
      name: "org.openrewrite.java.migrate.guava.NoGuavaImmutableMapOf"
      description: "Replaces `.common.collect.ImmutableMap.of(..)` if the returned\
        \ type is immediately down-cast."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavaimmutablemapof"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaImmutableSetOf:
      name: "org.openrewrite.java.migrate.guava.NoGuavaImmutableSetOf"
      description: "Replaces `.common.collect.ImmutableSet.of(..)` if the returned\
        \ type is immediately down-cast."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavaimmutablesetof"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaJava11:
      name: "org.openrewrite.java.migrate.guava.NoGuavaJava11"
      description: "Guava filled in important gaps in the Java standard library and\
        \ still does. But at least some of Guava's API surface area is covered by\
        \ the Java standard library now, and some projects may be able to remove Guava\
        \ altogether if they migrate to standard library for these functions."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavajava11"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaJava21:
      name: "org.openrewrite.java.migrate.guava.NoGuavaJava21"
      description: "Guava filled in important gaps in the Java standard library and\
        \ still does. But at least some of Guava's API surface area is covered by\
        \ the Java standard library now, and some projects may be able to remove Guava\
        \ altogether if they migrate to standard library for these functions."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavajava21"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaListsNewArrayList:
      name: "org.openrewrite.java.migrate.guava.NoGuavaListsNewArrayList"
      description: "Prefer the Java standard library over third-party usage of Guava\
        \ in simple cases like this."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavalistsnewarraylist"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaListsNewCopyOnWriteArrayList:
      name: "org.openrewrite.java.migrate.guava.NoGuavaListsNewCopyOnWriteArrayList"
      description: "Prefer the Java standard library over third-party usage of Guava\
        \ in simple cases like this."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavalistsnewcopyonwritearraylist"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaListsNewLinkedList:
      name: "org.openrewrite.java.migrate.guava.NoGuavaListsNewLinkedList"
      description: "Prefer the Java standard library over third-party usage of Guava\
        \ in simple cases like this."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavalistsnewlinkedlist"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaMapsNewHashMap:
      name: "org.openrewrite.java.migrate.guava.NoGuavaMapsNewHashMap"
      description: "Prefer the Java standard library over third-party usage of Guava\
        \ in simple cases like this."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavamapsnewhashmap"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaMapsNewLinkedHashMap:
      name: "org.openrewrite.java.migrate.guava.NoGuavaMapsNewLinkedHashMap"
      description: "Prefer the Java standard library over third-party usage of Guava\
        \ in simple cases like this."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavamapsnewlinkedhashmap"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaMapsNewTreeMap:
      name: "org.openrewrite.java.migrate.guava.NoGuavaMapsNewTreeMap"
      description: "Prefer the Java standard library over third-party usage of Guava\
        \ in simple cases like this."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavamapsnewtreemap"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaOptionalFromJavaUtil:
      name: "org.openrewrite.java.migrate.guava.NoGuavaOptionalFromJavaUtil"
      description: "Replaces `com.google.common.base.Optional#fromJavaUtil(java.util.Optional)`\
        \ with argument."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavaoptionalfromjavautil"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaOptionalToJavaUtil:
      name: "org.openrewrite.java.migrate.guava.NoGuavaOptionalToJavaUtil"
      description: "Remove calls to `com.google.common.base.Optional#toJavaUtil()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavaoptionaltojavautil"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaPrimitiveAsList:
      name: "org.openrewrite.java.migrate.guava.NoGuavaPrimitiveAsList"
      description: "Migrate from Guava `com.google.common.primitives.* asList(..)`\
        \ to `Arrays.asList(..)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavaprimitiveaslist"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaRefasterRecipes:
      name: "org.openrewrite.java.migrate.guava.NoGuavaRefasterRecipes"
      description: "Recipes that migrate from Guava to Java, using Refaster style\
        \ templates for cases beyond what declarative recipes can cover."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavarefasterrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaRefasterRecipes$PreconditionsCheckNotNullToObjectsRequireNonNullRecipe:
      name: "org.openrewrite.java.migrate.guava.NoGuavaRefasterRecipes$PreconditionsCheckNotNullToObjectsRequireNonNullRecipe"
      description: "Migrate from Guava `Preconditions.checkNotNull` to Java 8 `java.util.Objects.requireNonNull`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavarefasterrecipesusdpreconditionschecknotnulltoobjectsrequirenonnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    ? org.openrewrite.java.migrate.guava.NoGuavaRefasterRecipes$PreconditionsCheckNotNullWithMessageToObjectsRequireNonNullMessageTypeObjectRecipe
    : name: "org.openrewrite.java.migrate.guava.NoGuavaRefasterRecipes$PreconditionsCheckNotNullWithMessageToObjectsRequireNonNullMessageTypeObjectRecipe"
      description: "Migrate from Guava `Preconditions.checkNotNull` to Java 8 `java.util.Objects.requireNonNull`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavarefasterrecipesusdpreconditionschecknotnullwithmessagetoobjectsrequirenonnullmessagetypeobjectrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaRefasterRecipes$PreconditionsCheckNotNullWithMessageToObjectsRequireNonNullRecipe:
      name: "org.openrewrite.java.migrate.guava.NoGuavaRefasterRecipes$PreconditionsCheckNotNullWithMessageToObjectsRequireNonNullRecipe"
      description: "Migrate from Guava `Preconditions.checkNotNull` to Java 8 `java.util.Objects.requireNonNull`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavarefasterrecipesusdpreconditionschecknotnullwithmessagetoobjectsrequirenonnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaSetsNewConcurrentHashSet:
      name: "org.openrewrite.java.migrate.guava.NoGuavaSetsNewConcurrentHashSet"
      description: "Prefer the Java standard library over third-party usage of Guava\
        \ in simple cases like this."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavasetsnewconcurrenthashset"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaSetsNewHashSet:
      name: "org.openrewrite.java.migrate.guava.NoGuavaSetsNewHashSet"
      description: "Prefer the Java standard library over third-party usage of Guava\
        \ in simple cases like this."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavasetsnewhashset"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoGuavaSetsNewLinkedHashSet:
      name: "org.openrewrite.java.migrate.guava.NoGuavaSetsNewLinkedHashSet"
      description: "Prefer the Java standard library over third-party usage of Guava\
        \ in simple cases like this."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/noguavasetsnewlinkedhashset"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.NoMapsAndSetsWithExpectedSize:
      name: "org.openrewrite.java.migrate.guava.NoMapsAndSetsWithExpectedSize"
      description: "Prefer Java 19+ methods to create Maps and Sets of an expected\
        \ size instead of using Guava methods."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/nomapsandsetswithexpectedsize"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferCharCompare:
      name: "org.openrewrite.java.migrate.guava.PreferCharCompare"
      description: "Prefer `java.lang.Char#compare` instead of using `com.google.common.primitives.Chars#compare`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/prefercharcompare"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferIntegerCompare:
      name: "org.openrewrite.java.migrate.guava.PreferIntegerCompare"
      description: "Prefer `java.lang.Integer#compare` instead of using `com.google.common.primitives.Ints#compare`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferintegercompare"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferIntegerCompareUnsigned:
      name: "org.openrewrite.java.migrate.guava.PreferIntegerCompareUnsigned"
      description: "Prefer `java.lang.Integer#compareUnsigned` instead of using `com.google.common.primitives.UnsignedInts#compare`\
        \ or `com.google.common.primitives.UnsignedInts#compareUnsigned`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferintegercompareunsigned"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferIntegerDivideUnsigned:
      name: "org.openrewrite.java.migrate.guava.PreferIntegerDivideUnsigned"
      description: "Prefer `java.lang.Integer#divideUnsigned` instead of using `com.google.common.primitives.UnsignedInts#divide`\
        \ or `com.google.common.primitives.UnsignedInts#divideUnsigned`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferintegerdivideunsigned"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferIntegerParseUnsignedInt:
      name: "org.openrewrite.java.migrate.guava.PreferIntegerParseUnsignedInt"
      description: "Prefer `java.lang.Integer#parseUnsignedInt` instead of using `com.google.common.primitives.UnsignedInts#parseUnsignedInt`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferintegerparseunsignedint"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferIntegerRemainderUnsigned:
      name: "org.openrewrite.java.migrate.guava.PreferIntegerRemainderUnsigned"
      description: "Prefer `java.lang.Integer#remainderUnsigned` instead of using\
        \ `com.google.common.primitives.UnsignedInts#remainderUnsigned`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferintegerremainderunsigned"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaNioCharsetStandardCharsets:
      name: "org.openrewrite.java.migrate.guava.PreferJavaNioCharsetStandardCharsets"
      description: "Prefer `java.nio.charset.StandardCharsets` instead of using `com.google.common.base.Charsets`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavaniocharsetstandardcharsets"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaStringJoin:
      name: "org.openrewrite.java.migrate.guava.PreferJavaStringJoin"
      description: "Replaces supported calls to `com.google.common.base.Joiner#join()`\
        \ with `java.lang.String#join()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavastringjoin"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilCollectionsSynchronizedNavigableMap:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilCollectionsSynchronizedNavigableMap"
      description: "Prefer `java.util.Collections#synchronizedNavigableMap` instead\
        \ of using `com.google.common.collect.Maps#synchronizedNavigableMap`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautilcollectionssynchronizednavigablemap"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilCollectionsUnmodifiableNavigableMap:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilCollectionsUnmodifiableNavigableMap"
      description: "Prefer `java.util.Collections#unmodifiableNavigableMap` instead\
        \ of using `com.google.common.collect.Maps#unmodifiableNavigableMap`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautilcollectionsunmodifiablenavigablemap"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilFunction:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilFunction"
      description: "Prefer `java.util.function.Function` instead of using `com.google.common.base.Function`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautilfunction"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilObjectsEquals:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilObjectsEquals"
      description: "Prefer `java.util.Objects#equals` instead of using `com.google.common.base.Objects#equal`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautilobjectsequals"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilObjectsHashCode:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilObjectsHashCode"
      description: "Prefer `java.util.Objects#hash` instead of using `com.google.common.base.Objects#hashCode`\
        \ or `com.google.common.base.Objects hash(..)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautilobjectshashcode"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilObjectsRequireNonNullElse:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilObjectsRequireNonNullElse"
      description: "Prefer `java.util.Objects#requireNonNullElse` instead of using\
        \ `com.google.common.base.MoreObjects#firstNonNull`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautilobjectsrequirenonnullelse"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilOptional:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilOptional"
      description: "Prefer `java.util.Optional` instead of using `com.google.common.base.Optional`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautiloptional"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilOptionalOrElseNull:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilOptionalOrElseNull"
      description: "Replaces `com.google.common.base.Optional#orNull()` with `java.util.Optional#orElse(null)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautiloptionalorelsenull"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilOptionalOrSupplier:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilOptionalOrSupplier"
      description: "Prefer `java.util.Optional#or(Supplier<T extends java.util.Optional<T>>)`\
        \ over `com.google.common.base.Optional#or(com.google.common.base.Optional)."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautiloptionalorsupplier"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilPredicate:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilPredicate"
      description: "Prefer `java.util.function.Predicate` instead of using `com.google.common.base.Predicate`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautilpredicate"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferJavaUtilSupplier:
      name: "org.openrewrite.java.migrate.guava.PreferJavaUtilSupplier"
      description: "Prefer `java.util.function.Supplier` instead of using `com.google.common.base.Supplier`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferjavautilsupplier"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferLongCompare:
      name: "org.openrewrite.java.migrate.guava.PreferLongCompare"
      description: "Prefer `java.lang.Long#compare` instead of using `com.google.common.primitives.Longs#compare`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferlongcompare"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferLongCompareUnsigned:
      name: "org.openrewrite.java.migrate.guava.PreferLongCompareUnsigned"
      description: "Prefer `java.lang.Long#compareUnsigned` instead of using `com.google.common.primitives.UnsignedLongs#compare`\
        \ or `com.google.common.primitives.UnsignedLongs#compareUnsigned`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferlongcompareunsigned"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferLongDivideUnsigned:
      name: "org.openrewrite.java.migrate.guava.PreferLongDivideUnsigned"
      description: "Prefer `java.lang.Long#divideUnsigned` instead of using `com.google.common.primitives.UnsignedLongs#divide`\
        \ or `com.google.common.primitives.UnsignedLongs#divideUnsigned`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferlongdivideunsigned"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferLongParseUnsignedLong:
      name: "org.openrewrite.java.migrate.guava.PreferLongParseUnsignedLong"
      description: "Prefer `java.lang.Long#parseUnsignedInt` instead of using `com.google.common.primitives.UnsignedLongs#parseUnsignedInt`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferlongparseunsignedlong"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferLongRemainderUnsigned:
      name: "org.openrewrite.java.migrate.guava.PreferLongRemainderUnsigned"
      description: "Prefer `java.lang.Long#remainderUnsigned` instead of using `com.google.common.primitives.UnsignedLongs#remainderUnsigned`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/preferlongremainderunsigned"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferMathAddExact:
      name: "org.openrewrite.java.migrate.guava.PreferMathAddExact"
      description: "Prefer `java.lang.Math#addExact` instead of using `com.google.common.math.IntMath#checkedAdd`\
        \ or `com.google.common.math.IntMath#addExact`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/prefermathaddexact"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferMathClamp:
      name: "org.openrewrite.java.migrate.guava.PreferMathClamp"
      description: "Prefer `java.lang.Math#clamp` instead of using `com.google.common.primitives.*#constrainToRange`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/prefermathclamp"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferMathMultiplyExact:
      name: "org.openrewrite.java.migrate.guava.PreferMathMultiplyExact"
      description: "Prefer `java.lang.Math#multiplyExact` instead of using `com.google.common.primitives.IntMath#checkedMultiply`\
        \ or `com.google.common.primitives.IntMath#multiplyExact`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/prefermathmultiplyexact"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferMathSubtractExact:
      name: "org.openrewrite.java.migrate.guava.PreferMathSubtractExact"
      description: "Prefer `java.lang.Math#subtractExact` instead of using `com.google.common.primitives.IntMath#checkedSubtract`\
        \ or `com.google.common.primitives.IntMath#subtractExact`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/prefermathsubtractexact"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.guava.PreferShortCompare:
      name: "org.openrewrite.java.migrate.guava.PreferShortCompare"
      description: "Prefer `java.lang.Short#compare` instead of using `com.google.common.primitives.Shorts#compare`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/guava/prefershortcompare"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.io.ReplaceFileInOrOutputStreamFinalizeWithClose:
      name: "org.openrewrite.java.migrate.io.ReplaceFileInOrOutputStreamFinalizeWithClose"
      description: "Replace invocations of the deprecated `finalize()` method on `FileInputStream`\
        \ and `FileOutputStream` with `close()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/io/replacefileinoroutputstreamfinalizewithclose"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jacoco.UpgradeJaCoCo:
      name: "org.openrewrite.java.migrate.jacoco.UpgradeJaCoCo"
      description: "This recipe will upgrade JaCoCo to the latest patch version, which\
        \ traditionally advertises full backwards compatibility for older Java versions."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jacoco/upgradejacoco"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.ApplicationPathWildcardNoLongerAccepted:
      name: "org.openrewrite.java.migrate.jakarta.ApplicationPathWildcardNoLongerAccepted"
      description: "Remove trailing `/*` from `jakarta.ws.rs.ApplicationPath` values."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/applicationpathwildcardnolongeraccepted"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.BeanValidationMessages:
      name: "org.openrewrite.java.migrate.jakarta.BeanValidationMessages"
      description: "Migrate `javax.validation.constraints` messages found in Java\
        \ files to `jakarta.validation.constraints` equivalents."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/beanvalidationmessages"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.DeprecatedCDIAPIsRemoved40:
      name: "org.openrewrite.java.migrate.jakarta.DeprecatedCDIAPIsRemoved40"
      description: "Deprecated APIs have been removed in CDI 4.0. This recipe removes\
        \ and updates the corresponding deprecated methods."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/deprecatedcdiapisremoved40"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.EhcacheJavaxToJakarta:
      name: "org.openrewrite.java.migrate.jakarta.EhcacheJavaxToJakarta"
      description: "Java EE has been rebranded to Jakarta EE.  This recipe replaces\
        \ existing Ehcache dependencies with their counterparts that are compatible\
        \ with Jakarta EE 9."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/ehcachejavaxtojakarta"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.Faces2xMigrationToJakarta4x:
      name: "org.openrewrite.java.migrate.jakarta.Faces2xMigrationToJakarta4x"
      description: "Jakarta EE 10 uses Faces 4.0 a major upgrade to Jakarta packages\
        \ and XML namespaces."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/faces2xmigrationtojakarta4x"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.FacesJNDINamesChanged:
      name: "org.openrewrite.java.migrate.jakarta.FacesJNDINamesChanged"
      description: "The `jsf/ClientSideSecretKey` JNDI name has been renamed to `faces/ClientSideSecretKey`,\
        \ and the `jsf/FlashSecretKey` JNDI name has been renamed to `faces/FlashSecretKey`.\
        \ The JNDI keys that have been renamed are updated to allow use of the keys."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/facesjndinameschanged"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.FacesManagedBeansRemoved:
      name: "org.openrewrite.java.migrate.jakarta.FacesManagedBeansRemoved"
      description: "This recipe substitutes Faces Managed Beans, which were deprecated\
        \ in JavaServer Faces 2.3 and have been removed from Jakarta Faces 4.0."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/facesmanagedbeansremoved"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JacksonJavaxToJakarta:
      name: "org.openrewrite.java.migrate.jakarta.JacksonJavaxToJakarta"
      description: "Java EE has been rebranded to Jakarta EE.  This recipe replaces\
        \ existing Jackson dependencies with their counterparts that are compatible\
        \ with Jakarta EE 9."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/jacksonjavaxtojakarta"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JakartaEE10:
      name: "org.openrewrite.java.migrate.jakarta.JakartaEE10"
      description: "These recipes help with the Migration to Jakarta EE 10, flagging\
        \ and updating deprecated methods."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/jakartaee10"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JakartaFacesEcmaScript:
      name: "org.openrewrite.java.migrate.jakarta.JakartaFacesEcmaScript"
      description: "Convert JSF to Faces values inside JavaScript,TypeScript, and\
        \ Properties files."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/jakartafacesecmascript"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JakartaFacesXhtml:
      name: "org.openrewrite.java.migrate.jakarta.JakartaFacesXhtml"
      description: "Find and replace legacy JSF namespaces and javax references with\
        \ Jakarta Faces values in XHTML files."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/jakartafacesxhtml"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxActivationMigrationToJakartaActivation:
      name: "org.openrewrite.java.migrate.jakarta.JavaxActivationMigrationToJakartaActivation"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxactivationmigrationtojakartaactivation"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxAnnotationMigrationToJakartaAnnotation:
      name: "org.openrewrite.java.migrate.jakarta.JavaxAnnotationMigrationToJakartaAnnotation"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxannotationmigrationtojakartaannotation"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxAuthenticationMigrationToJakartaAuthentication:
      name: "org.openrewrite.java.migrate.jakarta.JavaxAuthenticationMigrationToJakartaAuthentication"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxauthenticationmigrationtojakartaauthentication"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxAuthorizationMigrationToJakartaAuthorization:
      name: "org.openrewrite.java.migrate.jakarta.JavaxAuthorizationMigrationToJakartaAuthorization"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxauthorizationmigrationtojakartaauthorization"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxBatchMigrationToJakartaBatch:
      name: "org.openrewrite.java.migrate.jakarta.JavaxBatchMigrationToJakartaBatch"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxbatchmigrationtojakartabatch"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxBeanValidationXmlToJakartaBeanValidationXml:
      name: "org.openrewrite.java.migrate.jakarta.JavaxBeanValidationXmlToJakartaBeanValidationXml"
      description: "Java EE has been rebranded to Jakarta EE, necessitating an XML\
        \ namespace relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxbeanvalidationxmltojakartabeanvalidationxml"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxBeansXmlToJakartaBeansXml:
      name: "org.openrewrite.java.migrate.jakarta.JavaxBeansXmlToJakartaBeansXml"
      description: "Java EE has been rebranded to Jakarta EE, necessitating an XML\
        \ namespace relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxbeansxmltojakartabeansxml"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxDecoratorToJakartaDecorator:
      name: "org.openrewrite.java.migrate.jakarta.JavaxDecoratorToJakartaDecorator"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxdecoratortojakartadecorator"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxEEApiToJakarta:
      name: "org.openrewrite.java.migrate.jakarta.JavaxEEApiToJakarta"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxeeapitojakarta"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxEjbJarXmlToJakartaEjbJarXml:
      name: "org.openrewrite.java.migrate.jakarta.JavaxEjbJarXmlToJakartaEjbJarXml"
      description: "Java EE has been rebranded to Jakarta EE, necessitating an XML\
        \ namespace relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxejbjarxmltojakartaejbjarxml"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxEjbToJakartaEjb:
      name: "org.openrewrite.java.migrate.jakarta.JavaxEjbToJakartaEjb"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxejbtojakartaejb"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxElToJakartaEl:
      name: "org.openrewrite.java.migrate.jakarta.JavaxElToJakartaEl"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxeltojakartael"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxEnterpriseToJakartaEnterprise:
      name: "org.openrewrite.java.migrate.jakarta.JavaxEnterpriseToJakartaEnterprise"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxenterprisetojakartaenterprise"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxFacesConfigXmlToJakartaFacesConfigXml:
      name: "org.openrewrite.java.migrate.jakarta.JavaxFacesConfigXmlToJakartaFacesConfigXml"
      description: "Java EE has been rebranded to Jakarta EE, necessitating an XML\
        \ namespace relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxfacesconfigxmltojakartafacesconfigxml"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxFacesTagLibraryXmlToJakartaFacesTagLibraryXml:
      name: "org.openrewrite.java.migrate.jakarta.JavaxFacesTagLibraryXmlToJakartaFacesTagLibraryXml"
      description: "Java EE has been rebranded to Jakarta EE, necessitating an XML\
        \ namespace relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxfacestaglibraryxmltojakartafacestaglibraryxml"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxFacesToJakartaFaces:
      name: "org.openrewrite.java.migrate.jakarta.JavaxFacesToJakartaFaces"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxfacestojakartafaces"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxInjectMigrationToJakartaInject:
      name: "org.openrewrite.java.migrate.jakarta.JavaxInjectMigrationToJakartaInject"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxinjectmigrationtojakartainject"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxInterceptorToJakartaInterceptor:
      name: "org.openrewrite.java.migrate.jakarta.JavaxInterceptorToJakartaInterceptor"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxinterceptortojakartainterceptor"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxJmsToJakartaJms:
      name: "org.openrewrite.java.migrate.jakarta.JavaxJmsToJakartaJms"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxjmstojakartajms"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxJsonToJakartaJson:
      name: "org.openrewrite.java.migrate.jakarta.JavaxJsonToJakartaJson"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxjsontojakartajson"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxJwsToJakartaJws:
      name: "org.openrewrite.java.migrate.jakarta.JavaxJwsToJakartaJws"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxjwstojakartajws"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxMailToJakartaMail:
      name: "org.openrewrite.java.migrate.jakarta.JavaxMailToJakartaMail"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxmailtojakartamail"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxMigrationToJakarta:
      name: "org.openrewrite.java.migrate.jakarta.JavaxMigrationToJakarta"
      description: "Jakarta EE 9 is the first version of Jakarta EE that uses the\
        \ new `jakarta` namespace."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxmigrationtojakarta"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxOrmXmlToJakartaOrmXml:
      name: "org.openrewrite.java.migrate.jakarta.JavaxOrmXmlToJakartaOrmXml"
      description: "Java EE has been rebranded to Jakarta EE, necessitating an XML\
        \ namespace relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxormxmltojakartaormxml"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxPersistenceToJakartaPersistence:
      name: "org.openrewrite.java.migrate.jakarta.JavaxPersistenceToJakartaPersistence"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxpersistencetojakartapersistence"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxPersistenceXmlToJakartaPersistenceXml:
      name: "org.openrewrite.java.migrate.jakarta.JavaxPersistenceXmlToJakartaPersistenceXml"
      description: "Java EE has been rebranded to Jakarta EE, necessitating an XML\
        \ namespace relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxpersistencexmltojakartapersistencexml"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxResourceToJakartaResource:
      name: "org.openrewrite.java.migrate.jakarta.JavaxResourceToJakartaResource"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxresourcetojakartaresource"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxSecurityToJakartaSecurity:
      name: "org.openrewrite.java.migrate.jakarta.JavaxSecurityToJakartaSecurity"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxsecuritytojakartasecurity"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxServletToJakartaServlet:
      name: "org.openrewrite.java.migrate.jakarta.JavaxServletToJakartaServlet"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxservlettojakartaservlet"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxToJakartaCdiExtensions:
      name: "org.openrewrite.java.migrate.jakarta.JavaxToJakartaCdiExtensions"
      description: "Rename `javax.enterprise.inject.spi.Extension` to `jakarta.enterprise.inject.spi.Extension`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxtojakartacdiextensions"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxTransactionMigrationToJakartaTransaction:
      name: "org.openrewrite.java.migrate.jakarta.JavaxTransactionMigrationToJakartaTransaction"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxtransactionmigrationtojakartatransaction"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxValidationMigrationToJakartaValidation:
      name: "org.openrewrite.java.migrate.jakarta.JavaxValidationMigrationToJakartaValidation"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxvalidationmigrationtojakartavalidation"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxWebFragmentXmlToJakartaWebFragmentXml:
      name: "org.openrewrite.java.migrate.jakarta.JavaxWebFragmentXmlToJakartaWebFragmentXml"
      description: "Java EE has been rebranded to Jakarta EE, necessitating an XML\
        \ namespace relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxwebfragmentxmltojakartawebfragmentxml"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxWebXmlToJakartaWebXml:
      name: "org.openrewrite.java.migrate.jakarta.JavaxWebXmlToJakartaWebXml"
      description: "Java EE has been rebranded to Jakarta EE, necessitating an XML\
        \ namespace relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxwebxmltojakartawebxml"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxWebsocketToJakartaWebsocket:
      name: "org.openrewrite.java.migrate.jakarta.JavaxWebsocketToJakartaWebsocket"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxwebsockettojakartawebsocket"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxWsToJakartaWs:
      name: "org.openrewrite.java.migrate.jakarta.JavaxWsToJakartaWs"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxwstojakartaws"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxXmlBindMigrationToJakartaXmlBind:
      name: "org.openrewrite.java.migrate.jakarta.JavaxXmlBindMigrationToJakartaXmlBind"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxxmlbindmigrationtojakartaxmlbind"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxXmlSoapToJakartaXmlSoap:
      name: "org.openrewrite.java.migrate.jakarta.JavaxXmlSoapToJakartaXmlSoap"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxxmlsoaptojakartaxmlsoap"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JavaxXmlWsMigrationToJakartaXmlWs:
      name: "org.openrewrite.java.migrate.jakarta.JavaxXmlWsMigrationToJakartaXmlWs"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/javaxxmlwsmigrationtojakartaxmlws"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.JohnzonJavaxToJakarta:
      name: "org.openrewrite.java.migrate.jakarta.JohnzonJavaxToJakarta"
      description: "Java EE has been rebranded to Jakarta EE.  This recipe replaces\
        \ existing Johnzon dependencies with their counterparts that are compatible\
        \ with Jakarta EE 9."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/johnzonjavaxtojakarta"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.MigrationToJakarta10Apis:
      name: "org.openrewrite.java.migrate.jakarta.MigrationToJakarta10Apis"
      description: "Jakarta EE 10 updates some apis compared to Jakarta EE 9."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/migrationtojakarta10apis"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.RemovalsServletJakarta10:
      name: "org.openrewrite.java.migrate.jakarta.RemovalsServletJakarta10"
      description: "This recipe replaces the classes and methods deprecated in Jakarta\
        \ Servlet 6.0."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/removalsservletjakarta10"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.RemoveBeanIsNullable:
      name: "org.openrewrite.java.migrate.jakarta.RemoveBeanIsNullable"
      description: "`Bean.isNullable()` has been removed in CDI 4.0.0, and now always\
        \ returns `false`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/removebeanisnullable"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.RemoveJakartaAnnotationDependency:
      name: "org.openrewrite.java.migrate.jakarta.RemoveJakartaAnnotationDependency"
      description: "Counteract the `jakarta.annotation-api` added by `org.openrewrite.java.migrate.javax.AddCommonAnnotationsDependencies`\
        \ for Spring Boot applications."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/removejakartaannotationdependency"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.RemovedIsParmetersProvidedMethod:
      name: "org.openrewrite.java.migrate.jakarta.RemovedIsParmetersProvidedMethod"
      description: "Expression Language prior to 5.0 provides the deprecated MethodExpression.isParmetersProvided()\
        \ method, with the word 'parameter' misspelled in the method name. This method\
        \ is unavailable in Jakarta Expression Language 5.0. Use the correctly spelled\
        \ MethodExpression.isParametersProvided() method instead."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/removedisparmetersprovidedmethod"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.RemovedJakartaFacesExpressionLanguageClasses:
      name: "org.openrewrite.java.migrate.jakarta.RemovedJakartaFacesExpressionLanguageClasses"
      description: "Several classes were removed and replaced in Jakarta Faces 4.0.\
        \ The only Object definition not removed in the `jakarta.faces.el` package\
        \ is the CompositeComponentExpressionHolder interface."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/removedjakartafacesexpressionlanguageclasses"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.RemovedJakartaFacesResourceResolver:
      name: "org.openrewrite.java.migrate.jakarta.RemovedJakartaFacesResourceResolver"
      description: "The `ResourceResolver` class was removed in Jakarta Faces 4.0.\
        \ The functionality provided by that class can be replaced by using the `jakarta.faces.application.ResourceHandler`\
        \ class."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/removedjakartafacesresourceresolver"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.RemovedSOAPElementFactory:
      name: "org.openrewrite.java.migrate.jakarta.RemovedSOAPElementFactory"
      description: "XML Web Services prior to 4.0 provides the deprecated SOAPElementFactory\
        \ class, which is removed in XML Web Services 4.0. The recommended replacement\
        \ is to use jakarta.xml.soap.SOAPFactory to create SOAPElements."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/removedsoapelementfactory"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.RemovedStateManagerMethods:
      name: "org.openrewrite.java.migrate.jakarta.RemovedStateManagerMethods"
      description: "Methods that were removed from the `jakarta.faces.application.StateManager`\
        \ and `javax.faces.application.StateManager` classes in Jakarta Faces 4.0\
        \ are replaced by `jakarta.faces.view.StateManagementStrategy` or `javax.faces.view.StateManagementStrategy`\
        \ based on Jakarta10 migration in Faces 4.0."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/removedstatemanagermethods"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.RemovedUIComponentConstant:
      name: "org.openrewrite.java.migrate.jakarta.RemovedUIComponentConstant"
      description: "Replace `jakarta.faces.component.UIComponent.CURRENT_COMPONENT`\
        \ and `CURRENT_COMPOSITE_COMPONENT` constants with `jakarta.faces.component.UIComponent.getCurrentComponent()`\
        \ and `getCurrentCompositeComponent()`. that were added in JSF 2.0."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/removeduicomponentconstant"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.RestAssuredJavaxToJakarta:
      name: "org.openrewrite.java.migrate.jakarta.RestAssuredJavaxToJakarta"
      description: "Java EE has been rebranded to Jakarta EE.  This recipe replaces\
        \ existing RestAssured dependencies with their counterparts that are compatible\
        \ with Jakarta EE 9."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/restassuredjavaxtojakarta"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.ServletCookieBehaviorChangeRFC6265:
      name: "org.openrewrite.java.migrate.jakarta.ServletCookieBehaviorChangeRFC6265"
      description: "Jakarta Servlet methods have been deprecated for removal in Jakarta\
        \ Servlet 6.0 to align with RFC 6265. In addition, the behavior of these methods\
        \ has been changed so the setters no longer have any effect, the getComment\
        \ methods return null, and the getVersion method returns 0. The deprecated\
        \ methods are removed."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/servletcookiebehaviorchangerfc6265"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.UpdateAddAnnotatedTypes:
      name: "org.openrewrite.java.migrate.jakarta.UpdateAddAnnotatedTypes"
      description: "`BeforeBeanDiscovery.addAnnotatedType(AnnotatedType)` is deprecated\
        \ in CDI 1.1. It is Replaced by `BeforeBeanDiscovery.addAnnotatedType(AnnotatedType,\
        \ String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/updateaddannotatedtypes"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.UpdateApacheWSSecurityPackages:
      name: "org.openrewrite.java.migrate.jakarta.UpdateApacheWSSecurityPackages"
      description: "Java EE has been rebranded to Jakarta EE.  This recipe replaces\
        \ Apache security packages to migrate to Apache `wss4j`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/updateapachewssecuritypackages"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.UpdateBeanManagerMethods:
      name: "org.openrewrite.java.migrate.jakarta.UpdateBeanManagerMethods"
      description: " Updates `BeanManager.fireEvent()` or `BeanManager.createInjectionTarget()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/updatebeanmanagermethods"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.UpdateGetRealPath:
      name: "org.openrewrite.java.migrate.jakarta.UpdateGetRealPath"
      description: "Updates `getRealPath()` for `jakarta.servlet.ServletRequest` and\
        \ `jakarta.servlet.ServletRequestWrapper` to use `ServletContext.getRealPath(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/updategetrealpath"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.UpdateJakartaAnnotations2:
      name: "org.openrewrite.java.migrate.jakarta.UpdateJakartaAnnotations2"
      description: "Update Jakarta EE annotation Dependencies to 2.1.x."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/updatejakartaannotations2"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.UpdateJakartaFacesApi4:
      name: "org.openrewrite.java.migrate.jakarta.UpdateJakartaFacesApi4"
      description: "Update Jakarta EE Java Faces Dependencies to 4.0.x."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/updatejakartafacesapi4"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.UpdateJakartaPlatform10:
      name: "org.openrewrite.java.migrate.jakarta.UpdateJakartaPlatform10"
      description: "Update Jakarta EE Platform Dependencies to 10.0.0."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/updatejakartaplatform10"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.UpdateJakartaXmlWsEE10:
      name: "org.openrewrite.java.migrate.jakarta.UpdateJakartaXmlWsEE10"
      description: "Update Jakarta EE XML Web Services Dependencies for EE 10."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/updatejakartaxmlwsee10"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.UpgradeFacesOpenSourceLibraries:
      name: "org.openrewrite.java.migrate.jakarta.UpgradeFacesOpenSourceLibraries"
      description: "Upgrade PrimeFaces, OmniFaces, and MyFaces libraries to Jakarta\
        \ EE10 versions."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/upgradefacesopensourcelibraries"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.jakarta.WsWsocServerContainerDeprecation:
      name: "org.openrewrite.java.migrate.jakarta.WsWsocServerContainerDeprecation"
      description: "Deprecated `WsWsocServerContainer.doUpgrade(..)` is replaced by\
        \ the Jakarta WebSocket 2.1 specification `ServerContainer.upgradeHttpToWebSocket(..)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/jakarta/wswsocservercontainerdeprecation"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javaee6:
      name: "org.openrewrite.java.migrate.javaee6"
      description: "These recipes help with the Migration to Java EE 6, flagging and\
        \ updating deprecated methods."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javaee6"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javaee7:
      name: "org.openrewrite.java.migrate.javaee7"
      description: "These recipes help with the Migration to Java EE 7, flagging and\
        \ updating deprecated methods."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javaee7"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javaee7.OpenJPAPersistenceProvider:
      name: "org.openrewrite.java.migrate.javaee7.OpenJPAPersistenceProvider"
      description: "When migrating  to EclipseLink, using OpenJPA providers in EclipseLink\
        \ results in runtime errors. To resolve these errors,  the recipe removes\
        \ the flagged OpenJPA provider from the persistence.xml."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javaee7/openjpapersistenceprovider"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javaee8:
      name: "org.openrewrite.java.migrate.javaee8"
      description: "These recipes help with the Migration to Java EE 8, flagging and\
        \ updating deprecated methods."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javaee8"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javaee8.ApacheDefaultProvider:
      name: "org.openrewrite.java.migrate.javaee8.ApacheDefaultProvider"
      description: "This recipe flags any `org.apache.bval.jsr*` (bval 1.1) and `org.apache.bval.jsr303*`\
        \ (bval 1.0) package references in validation.xml deployment descriptors.\
        \ Bean Validation 2.0 and later use the Hibernate Validator implementation\
        \ instead of the Apache BVal implementation which was used for Bean Validation\
        \ 1.0 and 1.1."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javaee8/apachedefaultprovider"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javaee8.ServletIsRequestedSessionIdFromURL:
      name: "org.openrewrite.java.migrate.javaee8.ServletIsRequestedSessionIdFromURL"
      description: "The  method `HttpServletRequestWrapper.isRequestedSessionIdFromUrl()`\
        \ is deprecated in JavaEE8 and is replaced by `HttpServletRequestWrapper.isRequestedSessionIdFromURL()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javaee8/servletisrequestedsessionidfromurl"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddColumnAnnotation:
      name: "org.openrewrite.java.migrate.javax.AddColumnAnnotation"
      description: "When an attribute is annotated with `@ElementCollection`, a separate\
        \ table is created for the attribute that includes the attribute \nID and\
        \ value. In OpenJPA, the column for the annotated attribute is named element,\
        \ whereas EclipseLink names the column based on \nthe name of the attribute.\
        \ To remain compatible with tables that were created with OpenJPA, add a `@Column`\
        \ annotation with the name \nattribute set to element."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addcolumnannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddCommonAnnotationsDependencies:
      name: "org.openrewrite.java.migrate.javax.AddCommonAnnotationsDependencies"
      description: "Add the necessary `annotation-api` dependency from Jakarta EE\
        \ 8 to maintain compatibility with Java version 11 or greater."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addcommonannotationsdependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddDefaultConstructorToEntityClass:
      name: "org.openrewrite.java.migrate.javax.AddDefaultConstructorToEntityClass"
      description: "When a Java Persistence API (JPA) entity class has a constructor\
        \ with arguments, the class must also have a default, no-argument constructor.\
        \ The OpenJPA implementation automatically generates the no-argument constructor,\
        \ but the EclipseLink implementation does not."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/adddefaultconstructortoentityclass"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddInjectDependencies:
      name: "org.openrewrite.java.migrate.javax.AddInjectDependencies"
      description: "Add the necessary `inject-api` dependency from Jakarta EE 8 to\
        \ maintain compatibility with Java version 11 or greater."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addinjectdependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddJaxbDependencies:
      name: "org.openrewrite.java.migrate.javax.AddJaxbDependencies"
      description: "This recipe will add explicit dependencies for Jakarta EE 8 when\
        \ a Java 8 application is using JAXB. Any existing dependencies will be upgraded\
        \ to the latest version of Jakarta EE 8. The artifacts are moved to Jakarta\
        \ EE 8 version 2.x which allows for the continued use of the `javax.xml.bind`\
        \ namespace. Running a full javax to Jakarta migration using `org.openrewrite.java.migrate.jakarta.JavaxMigrationToJakarta`\
        \ will update to versions greater than 3.x which necessitates the package\
        \ change as well."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addjaxbdependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddJaxbRuntime:
      name: "org.openrewrite.java.migrate.javax.AddJaxbRuntime"
      description: "Update build files to use the latest JAXB runtime from Jakarta\
        \ EE 8 to maintain compatibility with Java version 11 or greater. The recipe\
        \ will add a JAXB run-time, in Gradle `compileOnly`+`testImplementation` and\
        \ Maven `provided` scope, to any project that has a transitive dependency\
        \ on the JAXB API. **The resulting dependencies still use the `javax` namespace,\
        \ despite the move to the Jakarta artifact**."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addjaxbruntime"
      options:
      - name: "runtime"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddJaxwsDependencies:
      name: "org.openrewrite.java.migrate.javax.AddJaxwsDependencies"
      description: "This recipe will add explicit dependencies for Jakarta EE 8 when\
        \ a Java 8 application is using JAX-WS. Any existing dependencies will be\
        \ upgraded to the latest version of Jakarta EE 8. The artifacts are moved\
        \ to Jakarta EE 8 but the application can continue to use the `javax.xml.bind`\
        \ namespace."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addjaxwsdependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddJaxwsRuntime:
      name: "org.openrewrite.java.migrate.javax.AddJaxwsRuntime"
      description: "Update build files to use the latest JAX-WS runtime from Jakarta\
        \ EE 8 to maintain compatibility with Java version 11 or greater. The recipe\
        \ will add a JAX-WS run-time, in Gradle `compileOnly`+`testImplementation`\
        \ and Maven `provided` scope, to any project that has a transitive dependency\
        \ on the JAX-WS API. **The resulting dependencies still use the `javax` namespace,\
        \ despite the move to the Jakarta artifact**."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addjaxwsruntime"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddJaxwsRuntime$AddJaxwsRuntimeGradle:
      name: "org.openrewrite.java.migrate.javax.AddJaxwsRuntime$AddJaxwsRuntimeGradle"
      description: "Update Gradle build files to use the latest JAX-WS runtime from\
        \ Jakarta EE 8 to maintain compatibility with Java version 11 or greater.\
        \  The recipe will add a JAX-WS run-time, in `compileOnly`+`testImplementation`\
        \ configurations, to any project that has a transitive dependency on the JAX-WS\
        \ API. **The resulting dependencies still use the `javax` namespace, despite\
        \ the move to the Jakarta artifact**."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addjaxwsruntimeusdaddjaxwsruntimegradle"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddJaxwsRuntime$AddJaxwsRuntimeMaven:
      name: "org.openrewrite.java.migrate.javax.AddJaxwsRuntime$AddJaxwsRuntimeMaven"
      description: "Update maven build files to use the latest JAX-WS runtime from\
        \ Jakarta EE 8 to maintain compatibility with Java version 11 or greater.\
        \  The recipe will add a JAX-WS run-time, in `provided` scope, to any project\
        \ that has a transitive dependency on the JAX-WS API. **The resulting dependencies\
        \ still use the `javax` namespace, despite the move to the Jakarta artifact**."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addjaxwsruntimeusdaddjaxwsruntimemaven"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddScopeToInjectedClass:
      name: "org.openrewrite.java.migrate.javax.AddScopeToInjectedClass"
      description: "Finds member variables annotated with `@Inject' and applies `@Dependent`\
        \ scope annotation to the variable's type."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addscopetoinjectedclass"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddTableGenerator:
      name: "org.openrewrite.java.migrate.javax.AddTableGenerator"
      description: "Adds missing `@TableGenerator` annotation and updates the `@GeneratedValue`\
        \ annotation values when it uses automatically generated values."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addtablegenerator"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddTransientAnnotationToCollections:
      name: "org.openrewrite.java.migrate.javax.AddTransientAnnotationToCollections"
      description: "In OpenJPA, attributes that inherit from the `java.util.Collection<E>`\
        \ interface are not a default persistent type, so these attributes are not\
        \ persisted unless they are annotated. EclipseLink has a different default\
        \ behavior and attempts to persist these attributes to the database. To keep\
        \ the OpenJPA behavior of ignoring unannotated collection attributes, add\
        \ the `javax.persistence.Transient` annotation to these attributes in EclipseLink."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addtransientannotationtocollections"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddTransientAnnotationToEntity:
      name: "org.openrewrite.java.migrate.javax.AddTransientAnnotationToEntity"
      description: "In OpenJPA, attributes that are themselves entity classes are\
        \ not persisted by default. EclipseLink has a different default behavior and\
        \ tries to persist these attributes to the database. To keep the OpenJPA behavior\
        \ of ignoring unannotated entity attributes, add the `javax.persistence.Transient`\
        \ annotation to these attributes in EclipseLink."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addtransientannotationtoentity"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.AddTransientAnnotationToPrivateAccessor:
      name: "org.openrewrite.java.migrate.javax.AddTransientAnnotationToPrivateAccessor"
      description: "According to the JPA 2.1 specification, when property access is\
        \ used, the property accessor methods must be public or protected. OpenJPA\
        \ ignores any private accessor methods, whereas EclipseLink persists those\
        \ attributes. To ignore private accessor methods in EclipseLink, the methods\
        \ must have a `@Transient` annotation."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/addtransientannotationtoprivateaccessor"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.HttpSessionInvalidate:
      name: "org.openrewrite.java.migrate.javax.HttpSessionInvalidate"
      description: "Do not rely on HttpSession `invalidate` method for programmatic\
        \ security logout. Add the HttpServletRequest `logout` method which was introduced\
        \ in Java EE 6 as part of the Servlet 3.0 specification."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/httpsessioninvalidate"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.JavaxLangModelUtil:
      name: "org.openrewrite.java.migrate.javax.JavaxLangModelUtil"
      description: "Certain `javax.lang.model.util` APIs have become deprecated and\
        \ their usages changed, necessitating usage changes."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/javaxlangmodelutil"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.JavaxManagementMonitorAPIs:
      name: "org.openrewrite.java.migrate.javax.JavaxManagementMonitorAPIs"
      description: "Certain `javax.management.monitor` APIs have become deprecated\
        \ and their usages changed, necessitating usage changes."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/javaxmanagementmonitorapis"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.JavaxXmlStreamAPIs:
      name: "org.openrewrite.java.migrate.javax.JavaxXmlStreamAPIs"
      description: "Certain `javax.xml.stream` APIs have become deprecated and their\
        \ usages changed, necessitating usage changes."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/javaxxmlstreamapis"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateAbstractAnnotationValueVisitor6To9:
      name: "org.openrewrite.java.migrate.javax.MigrateAbstractAnnotationValueVisitor6To9"
      description: "Use `javax.lang.model.util.AbstractAnnotationValueVisitor9` instead\
        \ of the deprecated `javax.lang.model.util.AbstractAnnotationValueVisitor6`\
        \ in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migrateabstractannotationvaluevisitor6to9"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateAbstractElementVisitor6To9:
      name: "org.openrewrite.java.migrate.javax.MigrateAbstractElementVisitor6To9"
      description: "Use `javax.lang.model.util.AbstractElementVisitor9` instead of\
        \ the deprecated `javax.lang.model.util.AbstractElementVisitor6` in Java 9\
        \ or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migrateabstractelementvisitor6to9"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateAbstractTypeVisitor6To9:
      name: "org.openrewrite.java.migrate.javax.MigrateAbstractTypeVisitor6To9"
      description: "Use `javax.lang.model.util.AbstractTypeVisitor9` instead of the\
        \ deprecated `javax.lang.model.util.AbstractTypeVisitor6` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migrateabstracttypevisitor6to9"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateCounterMonitorSetThresholdToSetInitThreshold:
      name: "org.openrewrite.java.migrate.javax.MigrateCounterMonitorSetThresholdToSetInitThreshold"
      description: "Use `javax.management.monitor.CounterMonitor#setInitThreshold`\
        \ instead of the deprecated `javax.management.monitor.CounterMonitor#setThreshold`\
        \ in JMX 1.2 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migratecountermonitorsetthresholdtosetinitthreshold"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateElementKindVisitor6To9:
      name: "org.openrewrite.java.migrate.javax.MigrateElementKindVisitor6To9"
      description: "Use `javax.lang.model.util.ElementKindVisitor9` instead of the\
        \ deprecated `javax.lang.model.util.ElementKindVisitor6` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migrateelementkindvisitor6to9"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateElementScanner6To9:
      name: "org.openrewrite.java.migrate.javax.MigrateElementScanner6To9"
      description: "Use `javax.lang.model.util.ElementScanner9` instead of the deprecated\
        \ `javax.lang.model.util.ElementScanner6` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migrateelementscanner6to9"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateSimpleAnnotationValueVisitor6To9:
      name: "org.openrewrite.java.migrate.javax.MigrateSimpleAnnotationValueVisitor6To9"
      description: "Use `javax.lang.model.util.SimpleAnnotationValueVisitor9` instead\
        \ of the deprecated `javax.lang.model.util.SimpleAnnotationValueVisitor6`\
        \ in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migratesimpleannotationvaluevisitor6to9"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateSimpleElementVisitor6To9:
      name: "org.openrewrite.java.migrate.javax.MigrateSimpleElementVisitor6To9"
      description: "Use `javax.lang.model.util.SimpleElementVisitor9` instead of the\
        \ deprecated `javax.lang.model.util.SimpleElementVisitor6` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migratesimpleelementvisitor6to9"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateSimpleTypeVisitor6To9:
      name: "org.openrewrite.java.migrate.javax.MigrateSimpleTypeVisitor6To9"
      description: "Use `javax.lang.model.util.SimpleTypeVisitor9` instead of the\
        \ deprecated `javax.lang.model.util.SimpleTypeVisitor6` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migratesimpletypevisitor6to9"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateTypeKindVisitor6To9:
      name: "org.openrewrite.java.migrate.javax.MigrateTypeKindVisitor6To9"
      description: "Use `javax.lang.model.util.TypeKindVisitor9` instead of the deprecated\
        \ `javax.lang.model.util.TypeKindVisitor6` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migratetypekindvisitor6to9"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateXMLEventFactoryNewInstanceToNewFactory:
      name: "org.openrewrite.java.migrate.javax.MigrateXMLEventFactoryNewInstanceToNewFactory"
      description: "Use `javax.xml.stream.XMLEventFactory#newFactory` instead of the\
        \ deprecated `javax.xml.stream.XMLEventFactory#newInstance` in Java 7 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migratexmleventfactorynewinstancetonewfactory"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateXMLInputFactoryNewInstanceToNewFactory:
      name: "org.openrewrite.java.migrate.javax.MigrateXMLInputFactoryNewInstanceToNewFactory"
      description: "Use `javax.xml.stream.XMLInputFactory#newFactory` instead of the\
        \ deprecated `javax.xml.stream.XMLInputFactory#newInstance` in Java 7 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migratexmlinputfactorynewinstancetonewfactory"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.MigrateXMLOutputFactoryNewInstanceToNewFactory:
      name: "org.openrewrite.java.migrate.javax.MigrateXMLOutputFactoryNewInstanceToNewFactory"
      description: "Use `javax.xml.stream.XMLOutputFactory#newFactory` instead of\
        \ the deprecated `javax.xml.stream.XMLOutputFactory#newInstance` in Java 7\
        \ or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/migratexmloutputfactorynewinstancetonewfactory"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.RemoveEmbeddableId:
      name: "org.openrewrite.java.migrate.javax.RemoveEmbeddableId"
      description: "According to the Java Persistence API (JPA) specification, if\
        \ an entity defines an attribute with an `@EmbeddedId` annotation, the embeddable\
        \ class cannot contain an attribute with an `@Id` annotation. If both the\
        \ `@EmbeddedId` annotation and the `@Id` annotation are defined, OpenJPA ignores\
        \ the `@Id` annotation, whereas EclipseLink throws an exception."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/removeembeddableid"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.RemoveTemporalAnnotation:
      name: "org.openrewrite.java.migrate.javax.RemoveTemporalAnnotation"
      description: "OpenJPA persists the fields of attributes of type `java.sql.Date`,\
        \ `java.sql.Time`, or `java.sql.Timestamp` that have a `javax.persistence.Temporal`\
        \ annotation, whereas EclipseLink throws an exception. Remove the `@Temporal`\
        \ annotation so the behavior in EclipseLink will match the behavior in OpenJPA."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/removetemporalannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.UseJoinColumnForMapping:
      name: "org.openrewrite.java.migrate.javax.UseJoinColumnForMapping"
      description: "In OpenJPA, when a relationship attribute has either a `@OneToOne`\
        \ or a `@ManyToOne` annotation with a `@Column` annotation, the `@Column`\
        \ annotation is treated as a `@JoinColumn` annotation. EclipseLink throws\
        \ an exception that indicates that the entity class must use `@JoinColumn`\
        \ instead of `@Column` to map a relationship attribute."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/usejoincolumnformapping"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.javax.openJPAToEclipseLink:
      name: "org.openrewrite.java.migrate.javax.openJPAToEclipseLink"
      description: "These recipes help migrate Java Persistence applications using\
        \ OpenJPA to EclipseLink JPA."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/javax/openjpatoeclipselink"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.joda.JodaTimeRecipe:
      name: "org.openrewrite.java.migrate.joda.JodaTimeRecipe"
      description: "Prefer the Java standard library over third-party usage of Joda\
        \ Time."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/joda/jodatimerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.joda.NoJodaTime:
      name: "org.openrewrite.java.migrate.joda.NoJodaTime"
      description: "Before Java 8, Java lacked a robust date and time library, leading\
        \ to the widespread use of Joda-Time to fill this gap. With the release of\
        \ Java 8, the `java.time` package was introduced, incorporating most of Joda-Time's\
        \ concepts. Features deemed too specialized or bulky for `java.time` were\
        \ included in the ThreeTen-Extra library.  This recipe migrates Joda-Time\
        \ types to `java.time` and `threeten-extra` types."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/joda/nojodatime"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.ExplicitRecordImport:
      name: "org.openrewrite.java.migrate.lang.ExplicitRecordImport"
      description: "Add explicit import for `Record` classes when upgrading past Java\
        \ 14+, to avoid conflicts with `java.lang.Record`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/explicitrecordimport"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.JavaLangAPIs:
      name: "org.openrewrite.java.migrate.lang.JavaLangAPIs"
      description: "Certain Java lang APIs have become deprecated and their usages\
        \ changed, necessitating usage changes."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/javalangapis"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.MigrateCharacterIsJavaLetterOrDigitToIsJavaIdentifierPart:
      name: "org.openrewrite.java.migrate.lang.MigrateCharacterIsJavaLetterOrDigitToIsJavaIdentifierPart"
      description: "Use `Character#isJavaIdentifierPart(char)` instead of the deprecated\
        \ `Character#isJavaLetterOrDigit(char)` in Java 1.1 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/migratecharacterisjavaletterordigittoisjavaidentifierpart"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.MigrateCharacterIsJavaLetterToIsJavaIdentifierStart:
      name: "org.openrewrite.java.migrate.lang.MigrateCharacterIsJavaLetterToIsJavaIdentifierStart"
      description: "Use `Character#isJavaIdentifierStart(char)` instead of the deprecated\
        \ `Character#isJavaLetter(char)` in Java 1.1 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/migratecharacterisjavalettertoisjavaidentifierstart"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.MigrateCharacterIsSpaceToIsWhitespace:
      name: "org.openrewrite.java.migrate.lang.MigrateCharacterIsSpaceToIsWhitespace"
      description: "Use `Character#isWhitespace(char)` instead of the deprecated `Character#isSpace(char)`\
        \ in Java 1.1 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/migratecharacterisspacetoiswhitespace"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.MigrateClassLoaderDefineClass:
      name: "org.openrewrite.java.migrate.lang.MigrateClassLoaderDefineClass"
      description: "Use `ClassLoader#defineClass(String, byte[], int, int)` instead\
        \ of the deprecated `ClassLoader#defineClass(byte[], int, int)` in Java 1.1\
        \ or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/migrateclassloaderdefineclass"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.MigrateClassNewInstanceToGetDeclaredConstructorNewInstance:
      name: "org.openrewrite.java.migrate.lang.MigrateClassNewInstanceToGetDeclaredConstructorNewInstance"
      description: "Use `Class#getDeclaredConstructor().newInstance()` instead of\
        \ the deprecated `Class#newInstance()` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/migrateclassnewinstancetogetdeclaredconstructornewinstance"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.MigrateRuntimeVersionMajorToFeature:
      name: "org.openrewrite.java.migrate.lang.MigrateRuntimeVersionMajorToFeature"
      description: "Use `Runtime.Version#feature()` instead of the deprecated `Runtime.Version#major()`\
        \ in Java 10 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/migrateruntimeversionmajortofeature"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.MigrateRuntimeVersionMinorToInterim:
      name: "org.openrewrite.java.migrate.lang.MigrateRuntimeVersionMinorToInterim"
      description: "Use `Runtime.Version#interim()` instead of the deprecated `Runtime.Version#minor()`\
        \ in Java 10 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/migrateruntimeversionminortointerim"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.MigrateRuntimeVersionSecurityToUpdate:
      name: "org.openrewrite.java.migrate.lang.MigrateRuntimeVersionSecurityToUpdate"
      description: "Use `Runtime.Version#update()` instead of the deprecated `Runtime.Version#security()`\
        \ in Java 10 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/migrateruntimeversionsecuritytoupdate"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.MigrateSecurityManagerMulticast:
      name: "org.openrewrite.java.migrate.lang.MigrateSecurityManagerMulticast"
      description: "Use `SecurityManager#checkMulticast(InetAddress)` instead of the\
        \ deprecated `SecurityManager#checkMulticast(InetAddress, byte)` in Java 1.4\
        \ or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/migratesecuritymanagermulticast"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.StringFormatted:
      name: "org.openrewrite.java.migrate.lang.StringFormatted"
      description: "Prefer `String.formatted(Object...)` over `String.format(String,\
        \ Object...)` in Java 17 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/stringformatted"
      options:
      - name: "addParentheses"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.StringRulesRecipes:
      name: "org.openrewrite.java.migrate.lang.StringRulesRecipes"
      description: "A collection of rules for refactoring methods called on `String`\
        \ instances in Java code."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/stringrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.StringRulesRecipes$IndexOfCharRecipe:
      name: "org.openrewrite.java.migrate.lang.StringRulesRecipes$IndexOfCharRecipe"
      description: "Replace `String.indexOf(char ch, int fromIndex)` with `String.indexOf(char)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/stringrulesrecipesusdindexofcharrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.StringRulesRecipes$IndexOfStringRecipe:
      name: "org.openrewrite.java.migrate.lang.StringRulesRecipes$IndexOfStringRecipe"
      description: "Replace `String.indexOf(String str, int fromIndex)` with `String.indexOf(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/stringrulesrecipesusdindexofstringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.StringRulesRecipes$RedundantCallRecipe:
      name: "org.openrewrite.java.migrate.lang.StringRulesRecipes$RedundantCallRecipe"
      description: "Replace redundant `substring(..)` and `toString()` method calls\
        \ with the `String` self."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/stringrulesrecipesusdredundantcallrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.StringRulesRecipes$UseEqualsIgnoreCaseRecipe:
      name: "org.openrewrite.java.migrate.lang.StringRulesRecipes$UseEqualsIgnoreCaseRecipe"
      description: "Replace `String` equality comparisons involving `.toLowerCase()`\
        \ or `.toUpperCase()` with `String.equalsIgnoreCase(String anotherString)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/stringrulesrecipesusduseequalsignorecaserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.ThreadStopUnsupported:
      name: "org.openrewrite.java.migrate.lang.ThreadStopUnsupported"
      description: "`Thread.resume()`, `Thread.stop()`, and `Thread.suspend()` always\
        \ throws a `new UnsupportedOperationException` in Java 21+. This recipe makes\
        \ that explicit, as the migration is more complicated.See https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\
        \ ."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/threadstopunsupported"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.UseStringIsEmptyRecipe:
      name: "org.openrewrite.java.migrate.lang.UseStringIsEmptyRecipe"
      description: "Replace `0 < s.length()` and `s.length() != 0` with `!s.isEmpty()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/usestringisemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.UseTextBlocks:
      name: "org.openrewrite.java.migrate.lang.UseTextBlocks"
      description: "Text blocks are easier to read than concatenated strings."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/usetextblocks"
      options:
      - name: "convertStringsWithoutNewlines"
        type: "boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.UseVar:
      name: "org.openrewrite.java.migrate.lang.UseVar"
      description: "Apply local variable type inference (`var`) for primitives and\
        \ objects. These recipes can cause unused imports, be advised to run `org.openrewrite.java.RemoveUnusedImports\
        \ afterwards."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/usevar"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.var.UseVarForGenericMethodInvocations:
      name: "org.openrewrite.java.migrate.lang.var.UseVarForGenericMethodInvocations"
      description: "Apply `var` to variables initialized by invocations of Generic\
        \ Methods. This recipe ignores generic factory methods without parameters,\
        \ because open rewrite cannot handle them correctly ATM."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/var/usevarforgenericmethodinvocations"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.var.UseVarForGenericsConstructors:
      name: "org.openrewrite.java.migrate.lang.var.UseVarForGenericsConstructors"
      description: "Apply `var` to generics variables initialized by constructor calls."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/var/usevarforgenericsconstructors"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.var.UseVarForObject:
      name: "org.openrewrite.java.migrate.lang.var.UseVarForObject"
      description: "Try to apply local variable type inference `var` to variables\
        \ containing Objects where possible. This recipe will not touch variable declarations\
        \ with generics or initializers containing ternary operators."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/var/usevarforobject"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lang.var.UseVarForPrimitive:
      name: "org.openrewrite.java.migrate.lang.var.UseVarForPrimitive"
      description: "Try to apply local variable type inference `var` to primitive\
        \ variables where possible. This recipe will not touch variable declarations\
        \ with initializers containing ternary operators."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lang/var/usevarforprimitive"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.logging.JavaLoggingAPIs:
      name: "org.openrewrite.java.migrate.logging.JavaLoggingAPIs"
      description: "Certain Java logging APIs have become deprecated and their usages\
        \ changed, necessitating usage changes."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/logging/javaloggingapis"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.logging.MigrateGetLoggingMXBeanToGetPlatformMXBean:
      name: "org.openrewrite.java.migrate.logging.MigrateGetLoggingMXBeanToGetPlatformMXBean"
      description: "Use `ManagementFactory#getPlatformMXBean(PlatformLoggingMXBean.class)`\
        \ instead of the deprecated `LogManager#getLoggingMXBean()` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/logging/migrategetloggingmxbeantogetplatformmxbean"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.logging.MigrateInterfaceLoggingMXBeanToPlatformLoggingMXBean:
      name: "org.openrewrite.java.migrate.logging.MigrateInterfaceLoggingMXBeanToPlatformLoggingMXBean"
      description: "Use `java.lang.management.PlatformLoggingMXBean` instead of the\
        \ deprecated `java.util.logging.LoggingMXBean` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/logging/migrateinterfaceloggingmxbeantoplatformloggingmxbean"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.logging.MigrateLogRecordSetMillisToSetInstant:
      name: "org.openrewrite.java.migrate.logging.MigrateLogRecordSetMillisToSetInstant"
      description: "Use `LogRecord#setInstant(Instant)` instead of the deprecated\
        \ `LogRecord#setMillis(long)` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/logging/migratelogrecordsetmillistosetinstant"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.logging.MigrateLoggerGlobalToGetGlobal:
      name: "org.openrewrite.java.migrate.logging.MigrateLoggerGlobalToGetGlobal"
      description: "The preferred way to get the global logger object is via the call\
        \ `Logger#getGlobal()` over direct field access to `java.util.logging.Logger.global`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/logging/migrateloggerglobaltogetglobal"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.logging.MigrateLoggerLogrbToUseResourceBundle:
      name: "org.openrewrite.java.migrate.logging.MigrateLoggerLogrbToUseResourceBundle"
      description: "Use `Logger#logrb(.., ResourceBundle bundleName, ..)` instead\
        \ of the deprecated `java.util.logging.Logger#logrb(.., String bundleName,\
        \ ..)` in Java 8 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/logging/migrateloggerlogrbtouseresourcebundle"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.LombokBestPractices:
      name: "org.openrewrite.java.migrate.lombok.LombokBestPractices"
      description: "Applies all recipes that enforce best practices for using Lombok."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/lombokbestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.LombokValToFinalVar:
      name: "org.openrewrite.java.migrate.lombok.LombokValToFinalVar"
      description: "Prefer the Java standard library's `final var` and `var` over\
        \ third-party usage of Lombok's `lombok.val` and `lombok.var` in Java 10 or\
        \ higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/lombokvaltofinalvar"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.LombokValueToRecord:
      name: "org.openrewrite.java.migrate.lombok.LombokValueToRecord"
      description: "Convert Lombok `@Value` annotated classes to standard Java Records."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/lombokvaluetorecord"
      options:
      - name: "useExactToString"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.UpdateLombokToJava11:
      name: "org.openrewrite.java.migrate.lombok.UpdateLombokToJava11"
      description: "Update Lombok dependency to a version that is compatible with\
        \ Java 11 and migrate experimental Lombok types that have been promoted."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/updatelomboktojava11"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.UseLombokGetter:
      name: "org.openrewrite.java.migrate.lombok.UseLombokGetter"
      description: "Convert trivial getter methods to `@Getter` annotations on their\
        \ respective fields."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/uselombokgetter"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.UseLombokSetter:
      name: "org.openrewrite.java.migrate.lombok.UseLombokSetter"
      description: "Convert trivial setter methods to `@Setter` annotations on their\
        \ respective fields."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/uselomboksetter"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.UseNoArgsConstructor:
      name: "org.openrewrite.java.migrate.lombok.UseNoArgsConstructor"
      description: "Prefer the Lombok `@NoArgsConstructor` annotation over explicitly\
        \ written out constructors."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/usenoargsconstructor"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.log.UseCommonsLog:
      name: "org.openrewrite.java.migrate.lombok.log.UseCommonsLog"
      description: "Prefer the lombok annotation `@CommonsLog` over explicitly written\
        \ out `org.apache.commons.logging.Log` fields."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/log/usecommonslog"
      options:
      - name: "fieldName"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.log.UseJBossLog:
      name: "org.openrewrite.java.migrate.lombok.log.UseJBossLog"
      description: "Prefer the lombok annotation `@JBossLog` over explicitly written\
        \ out `org.jboss.logging.Logger` fields."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/log/usejbosslog"
      options:
      - name: "fieldName"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.log.UseLog:
      name: "org.openrewrite.java.migrate.lombok.log.UseLog"
      description: "Prefer the lombok annotation `@Log` over explicitly written out\
        \ `java.util.logging.Logger` fields."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/log/uselog"
      options:
      - name: "fieldName"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.log.UseLog4j2:
      name: "org.openrewrite.java.migrate.lombok.log.UseLog4j2"
      description: "Prefer the lombok annotation `@Log4j2` over explicitly written\
        \ out `org.apache.logging.log4j.Logger` fields."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/log/uselog4j2"
      options:
      - name: "fieldName"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.log.UseLombokLogAnnotations:
      name: "org.openrewrite.java.migrate.lombok.log.UseLombokLogAnnotations"
      description: "Applies all recipes that replace logger declarations with class\
        \ level annotations."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/log/uselomboklogannotations"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.lombok.log.UseSlf4j:
      name: "org.openrewrite.java.migrate.lombok.log.UseSlf4j"
      description: "Prefer the lombok annotation `@Slf4` over explicitly written out\
        \ `org.slf4j.Logger` fields."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/lombok/log/useslf4j"
      options:
      - name: "fieldName"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.maven.UpdateMavenProjectPropertyJavaVersion:
      name: "org.openrewrite.java.migrate.maven.UpdateMavenProjectPropertyJavaVersion"
      description: "The Java version is determined by several project properties,\
        \ including:\n\n * `java.version`\n * `jdk.version`\n * `javaVersion`\n *\
        \ `jdkVersion`\n * `maven.compiler.source`\n * `maven.compiler.target`\n *\
        \ `maven.compiler.release`\n * `release.version`\n\nIf none of these properties\
        \ are in use and the maven compiler plugin is not otherwise configured, adds\
        \ the `maven.compiler.release` property."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/maven/updatemavenprojectpropertyjavaversion"
      options:
      - name: "version"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.maven.UseMavenCompilerPluginReleaseConfiguration:
      name: "org.openrewrite.java.migrate.maven.UseMavenCompilerPluginReleaseConfiguration"
      description: "Replaces any explicit `source` or `target` configuration (if present)\
        \ on the `maven-compiler-plugin` with `release`, and updates the `release`\
        \ value if needed. Will not downgrade the Java version if the current version\
        \ is higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/maven/usemavencompilerpluginreleaseconfiguration"
      options:
      - name: "releaseVersion"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.metrics.SimplifyMicrometerMeterTags:
      name: "org.openrewrite.java.migrate.metrics.SimplifyMicrometerMeterTags"
      description: "Use the simplest method to add new tags."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/metrics/simplifymicrometermetertags"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.net.JavaNetAPIs:
      name: "org.openrewrite.java.migrate.net.JavaNetAPIs"
      description: "Certain Java networking APIs have become deprecated and their\
        \ usages changed, necessitating usage changes."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/net/javanetapis"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.net.MigrateHttpURLConnectionHttpServerErrorToHttpInternalError:
      name: "org.openrewrite.java.migrate.net.MigrateHttpURLConnectionHttpServerErrorToHttpInternalError"
      description: "Use `java.net.HttpURLConnection.HTTP_INTERNAL_ERROR` instead of\
        \ the deprecated `java.net.HttpURLConnection.HTTP_SERVER_ERROR`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/net/migratehttpurlconnectionhttpservererrortohttpinternalerror"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.net.MigrateMulticastSocketGetTTLToGetTimeToLive:
      name: "org.openrewrite.java.migrate.net.MigrateMulticastSocketGetTTLToGetTimeToLive"
      description: "Use `java.net.MulticastSocket#getTimeToLive()` instead of the\
        \ deprecated `java.net.MulticastSocket#getTTL()` in Java 1.2 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/net/migratemulticastsocketgetttltogettimetolive"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.net.MigrateMulticastSocketSetTTLToSetTimeToLive:
      name: "org.openrewrite.java.migrate.net.MigrateMulticastSocketSetTTLToSetTimeToLive"
      description: "Use `java.net.MulticastSocket#setTimeToLive(int)` instead of the\
        \ deprecated `java.net.MulticastSocket#setTTL(byte)` in Java 1.2 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/net/migratemulticastsocketsetttltosettimetolive"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.net.MigrateURLDecoderDecode:
      name: "org.openrewrite.java.migrate.net.MigrateURLDecoderDecode"
      description: "Use `java.net.URLDecoder#decode(String, StandardCharsets.UTF_8)`\
        \ instead of the deprecated `java.net.URLDecoder#decode(String)` in Java 10\
        \ or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/net/migrateurldecoderdecode"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.net.MigrateURLEncoderEncode:
      name: "org.openrewrite.java.migrate.net.MigrateURLEncoderEncode"
      description: "Use `java.net.URLEncoder#encode(String, StandardCharsets.UTF_8)`\
        \ instead of the deprecated `java.net.URLEncoder#encode(String)` in Java 10\
        \ or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/net/migrateurlencoderencode"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.net.URLConstructorToURICreate:
      name: "org.openrewrite.java.migrate.net.URLConstructorToURICreate"
      description: "Converts `new URL(String)` constructor to `URI.create(String).toURL()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/net/urlconstructortouricreate"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.net.URLConstructorsToNewURI:
      name: "org.openrewrite.java.migrate.net.URLConstructorsToNewURI"
      description: "Converts `new URL(String, ..)` constructors to `new URI(String,\
        \ ..).toURL()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/net/urlconstructorstonewuri"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.nio.file.PathsGetToPathOf:
      name: "org.openrewrite.java.migrate.nio.file.PathsGetToPathOf"
      description: "The `java.nio.file.Paths.get` method was introduced in Java SE\
        \ 7. The `java.nio.file.Path.of` method was introduced in Java SE 11. This\
        \ recipe replaces all usages of `Paths.get` with `Path.of` for consistency."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/nio/file/pathsgettopathof"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.search.AboutJavaVersion:
      name: "org.openrewrite.java.migrate.search.AboutJavaVersion"
      description: "A diagnostic for studying the distribution of Java language version\
        \ levels (both source and target compatibility across files and source sets)."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/search/aboutjavaversion"
      options:
      - name: "whenUsesType"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.search.FindDataUsedOnDto:
      name: "org.openrewrite.java.migrate.search.FindDataUsedOnDto"
      description: "Find data elements used on DTOs. This is useful to provide information\
        \ where data over-fetching may be a problem."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/search/finddatausedondto"
      options:
      - name: "dtoType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.search.FindDtoOverfetching:
      name: "org.openrewrite.java.migrate.search.FindDtoOverfetching"
      description: "Find methods that have 'opportunities' for improvement."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/search/finddtooverfetching"
      options:
      - name: "dtoType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.search.FindInternalJavaxApis:
      name: "org.openrewrite.java.migrate.search.FindInternalJavaxApis"
      description: "The libraries that define these APIs will have to be migrated\
        \ before any of the repositories that use them."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/search/findinternaljavaxapis"
      options:
      - name: "methodPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.search.FindJavaVersion:
      name: "org.openrewrite.java.migrate.search.FindJavaVersion"
      description: "Finds Java versions in use."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/search/findjavaversion"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.search.PlanJavaMigration:
      name: "org.openrewrite.java.migrate.search.PlanJavaMigration"
      description: "Study the set of Java versions and associated tools in use across\
        \ many repositories."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/search/planjavamigration"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.sql.JavaSqlAPIs:
      name: "org.openrewrite.java.migrate.sql.JavaSqlAPIs"
      description: "Certain Java sql APIs have become deprecated and their usages\
        \ changed, necessitating usage changes."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/sql/javasqlapis"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.sql.MigrateDriverManagerSetLogStream:
      name: "org.openrewrite.java.migrate.sql.MigrateDriverManagerSetLogStream"
      description: "Use `DriverManager#setLogWriter(java.io.PrintWriter)` instead\
        \ of the deprecated `DriverManager#setLogStream(java.io.PrintStream)` in Java\
        \ 1.2 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/sql/migratedrivermanagersetlogstream"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.IteratorNext:
      name: "org.openrewrite.java.migrate.util.IteratorNext"
      description: "Replace `SequencedCollection.iterator().next()` with `getFirst()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/iteratornext"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.JavaUtilAPIs:
      name: "org.openrewrite.java.migrate.util.JavaUtilAPIs"
      description: "Certain java util APIs have been introduced and are favored over\
        \ previous APIs."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/javautilapis"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.ListFirstAndLast:
      name: "org.openrewrite.java.migrate.util.ListFirstAndLast"
      description: "Replace `list.get(0)` with `list.getFirst()`, `list.get(list.size()\
        \ - 1)` with `list.getLast()`, and similar for `add(int, E)` and `remove(int)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/listfirstandlast"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.MigrateCollectionsSingletonList:
      name: "org.openrewrite.java.migrate.util.MigrateCollectionsSingletonList"
      description: "Prefer `List.of(..)` instead of using `Collections.singletonList()`\
        \ in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/migratecollectionssingletonlist"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.MigrateCollectionsSingletonMap:
      name: "org.openrewrite.java.migrate.util.MigrateCollectionsSingletonMap"
      description: "Prefer `Map.Of(..)` instead of using `Collections.singletonMap()`\
        \ in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/migratecollectionssingletonmap"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.MigrateCollectionsSingletonSet:
      name: "org.openrewrite.java.migrate.util.MigrateCollectionsSingletonSet"
      description: "Prefer `Set.Of(..)` instead of using `Collections.singleton()`\
        \ in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/migratecollectionssingletonset"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.MigrateCollectionsUnmodifiableList:
      name: "org.openrewrite.java.migrate.util.MigrateCollectionsUnmodifiableList"
      description: "Prefer `List.Of(..)` instead of using `unmodifiableList(java.util.Arrays\
        \ asList(<args>))` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/migratecollectionsunmodifiablelist"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.MigrateCollectionsUnmodifiableSet:
      name: "org.openrewrite.java.migrate.util.MigrateCollectionsUnmodifiableSet"
      description: "Prefer `Set.Of(..)` instead of using `unmodifiableSet(java.util.Set(java.util.Arrays\
        \ asList(<args>)))` in Java 9 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/migratecollectionsunmodifiableset"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.OptionalNotEmptyToIsPresent:
      name: "org.openrewrite.java.migrate.util.OptionalNotEmptyToIsPresent"
      description: "Prefer `Optional.isPresent()` instead of using `!Optional.isEmpty()`\
        \ in Java 11 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/optionalnotemptytoispresent"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.OptionalNotPresentToIsEmpty:
      name: "org.openrewrite.java.migrate.util.OptionalNotPresentToIsEmpty"
      description: "Prefer `Optional.isEmpty()` instead of using `!Optional.isPresent()`\
        \ in Java 11 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/optionalnotpresenttoisempty"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.OptionalStreamRecipe:
      name: "org.openrewrite.java.migrate.util.OptionalStreamRecipe"
      description: "Migrate Java 8 `Optional<Stream>.filter(Optional::isPresent).map(Optional::get)`\
        \ to Java 11 `.flatMap(Optional::stream)`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/optionalstreamrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.RemoveFinalizerFromZip:
      name: "org.openrewrite.java.migrate.util.RemoveFinalizerFromZip"
      description: "Remove invocations of finalize() deprecated invocations from Deflater,\
        \ Inflater, ZipFile."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/removefinalizerfromzip"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.ReplaceMathRandomWithThreadLocalRandomRecipe:
      name: "org.openrewrite.java.migrate.util.ReplaceMathRandomWithThreadLocalRandomRecipe"
      description: "Replace `java.lang.Math random()` with `ThreadLocalRandom nextDouble()`\
        \ to reduce contention."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/replacemathrandomwiththreadlocalrandomrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.ReplaceStreamCollectWithToList:
      name: "org.openrewrite.java.migrate.util.ReplaceStreamCollectWithToList"
      description: "Replace `Stream.collect(Collectors.toUnmodifiableList())` with\
        \ Java 16+ `Stream.toList()`. Also replaces `Stream.collect(Collectors.toList())`\
        \ if `convertToList` is set to `true`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/replacestreamcollectwithtolist"
      options:
      - name: "convertToList"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.SequencedCollection:
      name: "org.openrewrite.java.migrate.util.SequencedCollection"
      description: "Replace older code patterns with `SequencedCollection` methods,\
        \ as per https://openjdk.org/jeps/431."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/sequencedcollection"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.StreamFindFirst:
      name: "org.openrewrite.java.migrate.util.StreamFindFirst"
      description: "For SequencedCollections, use `collection.getFirst()` instead\
        \ of `collection.stream().findFirst().orElseThrow()`."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/streamfindfirst"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.UseEnumSetOf:
      name: "org.openrewrite.java.migrate.util.UseEnumSetOf"
      description: "Prefer `EnumSet of(..)` instead of using `Set of(..)` when the\
        \ arguments are enums in Java 5 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/useenumsetof"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.UseLocaleOf:
      name: "org.openrewrite.java.migrate.util.UseLocaleOf"
      description: "Prefer `Locale.of(..)` over `new Locale(..)` in Java 19 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/uselocaleof"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.java.migrate.util.UseMapOf:
      name: "org.openrewrite.java.migrate.util.UseMapOf"
      description: "Prefer `Map.of(..)` instead of using `java.util.Map#put(..)` in\
        \ Java 10 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/migrate/util/usemapof"
      options: []
      isImperative: true
      artifactId: "rewrite-migrate-java"
    org.openrewrite.scala.migrate.UpgradeScala_2_12:
      name: "org.openrewrite.scala.migrate.UpgradeScala_2_12"
      description: "Upgrade the Scala version for compatibility with newer Java versions."
      docLink: "https://docs.openrewrite.org/recipes/scala/migrate/upgradescala_2_12"
      options: []
      isImperative: false
      artifactId: "rewrite-migrate-java"
rewrite-nodejs:
  artifactId: "rewrite-nodejs"
  version: "0.19.0"
  markdownRecipeDescriptors:
    org.openrewrite.nodejs.DependencyVulnerabilityCheck:
      name: "org.openrewrite.nodejs.DependencyVulnerabilityCheck"
      description: "This software composition analysis (SCA) tool detects and upgrades\
        \ dependencies with publicly disclosed vulnerabilities. This recipe both generates\
        \ a report of vulnerable dependencies and upgrades to newer versions with\
        \ fixes. This recipe **only** upgrades to the latest **patch** version.  If\
        \ a minor or major upgrade is required to reach the fixed version, this recipe\
        \ will not make any changes. Vulnerability information comes from the [GitHub\
        \ Security Advisory Database](https://docs.github.com/en/code-security/security-advisories/global-security-advisories/about-the-github-advisory-database),\
        \ which aggregates vulnerability data from several public databases, including\
        \ the [National Vulnerability Database](https://nvd.nist.gov/) maintained\
        \ by the United States government. Dependencies following [Semantic Versioning](https://semver.org/)\
        \ will see their _patch_ version updated where applicable."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/dependencyvulnerabilitycheck"
      options:
      - name: "addMarkers"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.UpgradeDependencyVersion:
      name: "org.openrewrite.nodejs.UpgradeDependencyVersion"
      description: "Upgrade matching Node.js direct dependencies."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/upgradedependencyversion"
      options:
      - name: "namePattern"
        type: "String"
        required: true
      - name: "version"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.DatabaseInteractionInsights:
      name: "org.openrewrite.nodejs.search.DatabaseInteractionInsights"
      description: "Discover which popular javascript database interaction libraries\
        \ (Sequelize, TypeORM, Mongoose, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/databaseinteractioninsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.DependencyInsight:
      name: "org.openrewrite.nodejs.search.DependencyInsight"
      description: "Identify the direct and transitive Node.js dependencies used in\
        \ a project."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/dependencyinsight"
      options:
      - name: "namePattern"
        type: "String"
        required: true
      - name: "onlyDirect"
        type: "Boolean"
        required: false
      - name: "version"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.FindNodeProjects:
      name: "org.openrewrite.nodejs.search.FindNodeProjects"
      description: "Find Node.js projects and summarize data about them."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/findnodeprojects"
      options: []
      isImperative: true
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.FormHandlingInsights:
      name: "org.openrewrite.nodejs.search.FormHandlingInsights"
      description: "Discover which popular javascript form handling libraries (Formik,\
        \ React Hook Form, Yup, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/formhandlinginsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.LintingFormattingInsights:
      name: "org.openrewrite.nodejs.search.LintingFormattingInsights"
      description: "Discover which popular javascript linting and formatting libraries\
        \ (ESLint, Prettier, Stylelint, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/lintingformattinginsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.RealTimeCommunicationInsights:
      name: "org.openrewrite.nodejs.search.RealTimeCommunicationInsights"
      description: "Discover which popular javascript real-time communication libraries\
        \ (Socket.io, Ws, SockJS, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/realtimecommunicationinsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.SecurityInsights:
      name: "org.openrewrite.nodejs.search.SecurityInsights"
      description: "Discover which popular javascript security libraries (Helmet,\
        \ Cors, Bcrypt, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/securityinsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.ServerSideFrameworksInsights:
      name: "org.openrewrite.nodejs.search.ServerSideFrameworksInsights"
      description: "Discover which popular javascript server-side frameworks (Express,\
        \ Koa, Hapi, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/serversideframeworksinsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.StateManagementInsights:
      name: "org.openrewrite.nodejs.search.StateManagementInsights"
      description: "Discover which popular javascript state management libraries (Redux,\
        \ MobX, Vuex, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/statemanagementinsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.TaskRunnersBuildToolsInsights:
      name: "org.openrewrite.nodejs.search.TaskRunnersBuildToolsInsights"
      description: "Discover which popular javascript task runners and build tools\
        \ (Webpack, Parcel, Gulp, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/taskrunnersbuildtoolsinsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.TestingInsights:
      name: "org.openrewrite.nodejs.search.TestingInsights"
      description: "Discover which popular javascript testing libraries (Jest, Mocha,\
        \ Chai, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/testinginsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.UIInsights:
      name: "org.openrewrite.nodejs.search.UIInsights"
      description: "Discover which popular javascript UI libraries (React, Vue.js,\
        \ Angular, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/uiinsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
    org.openrewrite.nodejs.search.UtilityInsights:
      name: "org.openrewrite.nodejs.search.UtilityInsights"
      description: "Discover which popular javascript utility libraries (Lodash, Moment.js,\
        \ Date-fns, etc.) are being used in your projects."
      docLink: "https://docs.openrewrite.org/recipes/nodejs/search/utilityinsights"
      options: []
      isImperative: false
      artifactId: "rewrite-nodejs"
rewrite-okhttp:
  artifactId: "rewrite-okhttp"
  version: "0.11.0"
  markdownRecipeDescriptors:
    org.openrewrite.okhttp.ReorderRequestBodyCreateArguments:
      name: "org.openrewrite.okhttp.ReorderRequestBodyCreateArguments"
      description: "Reorder the arguments of `RequestBody.create()` to put the `MediaType`\
        \ argument after the `String` body."
      docLink: "https://docs.openrewrite.org/recipes/okhttp/reorderrequestbodycreatearguments"
      options: []
      isImperative: false
      artifactId: "rewrite-okhttp"
    org.openrewrite.okhttp.UpgradeOkHttp4:
      name: "org.openrewrite.okhttp.UpgradeOkHttp4"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to OkHttp 4.x."
      docLink: "https://docs.openrewrite.org/recipes/okhttp/upgradeokhttp4"
      options: []
      isImperative: false
      artifactId: "rewrite-okhttp"
    org.openrewrite.okhttp.UpgradeOkHttp4Dependencies:
      name: "org.openrewrite.okhttp.UpgradeOkHttp4Dependencies"
      description: "Migrate OkHttp dependencies to 4.x."
      docLink: "https://docs.openrewrite.org/recipes/okhttp/upgradeokhttp4dependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-okhttp"
    org.openrewrite.okhttp.UpgradeOkHttp5:
      name: "org.openrewrite.okhttp.UpgradeOkHttp5"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to OkHttp 5.x."
      docLink: "https://docs.openrewrite.org/recipes/okhttp/upgradeokhttp5"
      options: []
      isImperative: false
      artifactId: "rewrite-okhttp"
    org.openrewrite.okhttp.UpgradeOkHttp5Dependencies:
      name: "org.openrewrite.okhttp.UpgradeOkHttp5Dependencies"
      description: "Migrate OkHttp dependencies to 5.x."
      docLink: "https://docs.openrewrite.org/recipes/okhttp/upgradeokhttp5dependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-okhttp"
    org.openrewrite.okio.UpgradeOkio3:
      name: "org.openrewrite.okio.UpgradeOkio3"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Okio 3.x."
      docLink: "https://docs.openrewrite.org/recipes/okio/upgradeokio3"
      options: []
      isImperative: false
      artifactId: "rewrite-okhttp"
    org.openrewrite.okio.UpgradeOkio3Dependencies:
      name: "org.openrewrite.okio.UpgradeOkio3Dependencies"
      description: "Migrate Okio dependencies to 3.x."
      docLink: "https://docs.openrewrite.org/recipes/okio/upgradeokio3dependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-okhttp"
rewrite-openapi:
  artifactId: "rewrite-openapi"
  version: "0.16.0"
  markdownRecipeDescriptors:
    org.openrewrite.openapi.swagger.ConvertApiResponseCodesToStrings:
      name: "org.openrewrite.openapi.swagger.ConvertApiResponseCodesToStrings"
      description: "Convert API response codes to strings."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/convertapiresponsecodestostrings"
      options: []
      isImperative: true
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.MigrateApiImplicitParam:
      name: "org.openrewrite.openapi.swagger.MigrateApiImplicitParam"
      description: "Migrate `@ApiImplicitParam` to `@Parameter`."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/migrateapiimplicitparam"
      options: []
      isImperative: true
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.MigrateApiImplicitParamsToParameters:
      name: "org.openrewrite.openapi.swagger.MigrateApiImplicitParamsToParameters"
      description: "Converts `@ApiImplicitParams` to `@Parameters` and the `@ApiImplicitParam`\
        \ annotation to `@Parameter` and converts the directly mappable attributes\
        \ and removes the others."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/migrateapiimplicitparamstoparameters"
      options: []
      isImperative: false
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.MigrateApiModelPropertyToSchema:
      name: "org.openrewrite.openapi.swagger.MigrateApiModelPropertyToSchema"
      description: "Converts the `@ApiModelProperty` annotation to `@Schema` and converts\
        \ the \"value\" attribute to \"description\"."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/migrateapimodelpropertytoschema"
      options: []
      isImperative: false
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.MigrateApiModelToSchema:
      name: "org.openrewrite.openapi.swagger.MigrateApiModelToSchema"
      description: "Converts the `@ApiModel` annotation to `@Schema` and converts\
        \ the \"value\" attribute to \"name\"."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/migrateapimodeltoschema"
      options: []
      isImperative: false
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.MigrateApiOperationToOperation:
      name: "org.openrewrite.openapi.swagger.MigrateApiOperationToOperation"
      description: "Converts the `@ApiOperation` annotation to `@Operation` and converts\
        \ the directly mappable attributes and removes the others."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/migrateapioperationtooperation"
      options: []
      isImperative: false
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.MigrateApiParamDefaultValue:
      name: "org.openrewrite.openapi.swagger.MigrateApiParamDefaultValue"
      description: "Migrate `@ApiParam(defaultValue)` to `@Parameter(schema = @Schema(defaultValue))`."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/migrateapiparamdefaultvalue"
      options: []
      isImperative: true
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.MigrateApiParamToParameter:
      name: "org.openrewrite.openapi.swagger.MigrateApiParamToParameter"
      description: "Converts the `@ApiParam` annotation to `@Parameter` and converts\
        \ the directly mappable attributes."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/migrateapiparamtoparameter"
      options: []
      isImperative: false
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.MigrateApiResponsesToApiResponses:
      name: "org.openrewrite.openapi.swagger.MigrateApiResponsesToApiResponses"
      description: "Changes the namespace of the `@ApiResponses` and `@ApiResponse`\
        \ annotations and converts its attributes (ex. code -> responseCode, message\
        \ -> description)."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/migrateapiresponsestoapiresponses"
      options: []
      isImperative: false
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.MigrateApiToTag:
      name: "org.openrewrite.openapi.swagger.MigrateApiToTag"
      description: "Converts `@Api` to `@Tag` annotation and converts the directly\
        \ mappable attributes and removes the others."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/migrateapitotag"
      options: []
      isImperative: true
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.MigrateSwaggerDefinitionToOpenAPIDefinition:
      name: "org.openrewrite.openapi.swagger.MigrateSwaggerDefinitionToOpenAPIDefinition"
      description: "Migrate from `@SwaggerDefinition` to `@OpenAPIDefinition`."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/migrateswaggerdefinitiontoopenapidefinition"
      options: []
      isImperative: true
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.SwaggerToOpenAPI:
      name: "org.openrewrite.openapi.swagger.SwaggerToOpenAPI"
      description: "Migrate from Swagger to OpenAPI."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/swaggertoopenapi"
      options: []
      isImperative: false
      artifactId: "rewrite-openapi"
    org.openrewrite.openapi.swagger.UseJakartaSwaggerArtifacts:
      name: "org.openrewrite.openapi.swagger.UseJakartaSwaggerArtifacts"
      description: "Migrate from javax Swagger artifacts to Jakarta versions."
      docLink: "https://docs.openrewrite.org/recipes/openapi/swagger/usejakartaswaggerartifacts"
      options: []
      isImperative: false
      artifactId: "rewrite-openapi"
rewrite-properties:
  artifactId: "rewrite-properties"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.properties.AddProperty:
      name: "org.openrewrite.properties.AddProperty"
      description: "Adds a new property to a property file. Attempts to place the\
        \ new property in alphabetical order by the property keys. Whitespace before\
        \ and after the `=` must be included in the property and value."
      docLink: "https://docs.openrewrite.org/recipes/properties/addproperty"
      options:
      - name: "comment"
        type: "String"
        required: false
      - name: "delimiter"
        type: "String"
        required: false
      - name: "property"
        type: "String"
        required: true
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-properties"
    org.openrewrite.properties.AddPropertyComment:
      name: "org.openrewrite.properties.AddPropertyComment"
      description: "Add a new comment before a property key if not already present,\
        \ optionally commenting out the property."
      docLink: "https://docs.openrewrite.org/recipes/properties/addpropertycomment"
      options:
      - name: "comment"
        type: "String"
        required: true
      - name: "commentOutProperty"
        type: "Boolean"
        required: false
      - name: "propertyKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-properties"
    org.openrewrite.properties.ChangePropertyKey:
      name: "org.openrewrite.properties.ChangePropertyKey"
      description: "Change a property key leaving the value intact."
      docLink: "https://docs.openrewrite.org/recipes/properties/changepropertykey"
      options:
      - name: "newPropertyKey"
        type: "String"
        required: true
      - name: "oldPropertyKey"
        type: "String"
        required: true
      - name: "regex"
        type: "Boolean"
        required: false
      - name: "relaxedBinding"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-properties"
    org.openrewrite.properties.ChangePropertyValue:
      name: "org.openrewrite.properties.ChangePropertyValue"
      description: "Change a property value leaving the key intact."
      docLink: "https://docs.openrewrite.org/recipes/properties/changepropertyvalue"
      options:
      - name: "newValue"
        type: "String"
        required: true
      - name: "oldValue"
        type: "String"
        required: false
      - name: "propertyKey"
        type: "String"
        required: true
      - name: "regex"
        type: "Boolean"
        required: false
      - name: "relaxedBinding"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-properties"
    org.openrewrite.properties.CreatePropertiesFile:
      name: "org.openrewrite.properties.CreatePropertiesFile"
      description: "Create a new Properties file."
      docLink: "https://docs.openrewrite.org/recipes/properties/createpropertiesfile"
      options:
      - name: "fileContents"
        type: "String"
        required: false
      - name: "overwriteExisting"
        type: "Boolean"
        required: false
      - name: "relativeFileName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-properties"
    org.openrewrite.properties.DeleteProperty:
      name: "org.openrewrite.properties.DeleteProperty"
      description: "Deletes key/value pairs from properties files."
      docLink: "https://docs.openrewrite.org/recipes/properties/deleteproperty"
      options:
      - name: "propertyKey"
        type: "String"
        required: true
      - name: "relaxedBinding"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-properties"
    org.openrewrite.properties.search.FindProperties:
      name: "org.openrewrite.properties.search.FindProperties"
      description: "Finds occurrences of a property key."
      docLink: "https://docs.openrewrite.org/recipes/properties/search/findproperties"
      options:
      - name: "propertyKey"
        type: "String"
        required: true
      - name: "relaxedBinding"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-properties"
rewrite-quarkus:
  artifactId: "rewrite-quarkus"
  version: "2.16.0"
  markdownRecipeDescriptors:
    org.openrewrite.quarkus.AddQuarkusProperty:
      name: "org.openrewrite.quarkus.AddQuarkusProperty"
      description: "Add a Quarkus configuration property to an existing configuration\
        \ file if it does not already exist in that file."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/addquarkusproperty"
      options:
      - name: "comment"
        type: "String"
        required: false
      - name: "pathExpressions"
        type: "List"
        required: false
      - name: "profile"
        type: "String"
        required: false
      - name: "property"
        type: "String"
        required: true
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.ChangeQuarkusPropertyKey:
      name: "org.openrewrite.quarkus.ChangeQuarkusPropertyKey"
      description: "Change the key of a property in Quarkus configuration files."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/changequarkuspropertykey"
      options:
      - name: "changeAllProfiles"
        type: "Boolean"
        required: false
      - name: "newPropertyKey"
        type: "String"
        required: true
      - name: "oldPropertyKey"
        type: "String"
        required: true
      - name: "pathExpressions"
        type: "List"
        required: false
      - name: "profile"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.ChangeQuarkusPropertyValue:
      name: "org.openrewrite.quarkus.ChangeQuarkusPropertyValue"
      description: "Change the value of a property in Quarkus configuration files."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/changequarkuspropertyvalue"
      options:
      - name: "changeAllProfiles"
        type: "Boolean"
        required: false
      - name: "newValue"
        type: "String"
        required: true
      - name: "oldValue"
        type: "String"
        required: false
      - name: "pathExpressions"
        type: "List"
        required: false
      - name: "profile"
        type: "String"
        required: false
      - name: "propertyKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.ConfigPropertiesToConfigMapping:
      name: "org.openrewrite.quarkus.ConfigPropertiesToConfigMapping"
      description: "Migrate Quarkus configuration classes annotated with `@ConfigProperties`\
        \ to the equivalent Smallrye `@ConfigMapping`."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/configpropertiestoconfigmapping"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.ConfigureQuarkusMavenPluginWithReasonableDefaults:
      name: "org.openrewrite.quarkus.ConfigureQuarkusMavenPluginWithReasonableDefaults"
      description: "Configures the `quarkus-maven-plugin` with reasonable defaults,\
        \ such as default activated `goals` and `<extensions>` configuration."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/configurequarkusmavenpluginwithreasonabledefaults"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.DeleteQuarkusProperty:
      name: "org.openrewrite.quarkus.DeleteQuarkusProperty"
      description: "Delete a property from Quarkus configuration files."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/deletequarkusproperty"
      options:
      - name: "deleteFromAllProfiles"
        type: "Boolean"
        required: false
      - name: "oldValue"
        type: "String"
        required: false
      - name: "pathExpressions"
        type: "List"
        required: false
      - name: "profile"
        type: "String"
        required: false
      - name: "propertyKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.MigrateQuarkusMavenPluginNativeImageGoal:
      name: "org.openrewrite.quarkus.MigrateQuarkusMavenPluginNativeImageGoal"
      description: "Migrates the `quarkus-maven-plugin` deprecated `native-image`\
        \ goal. If the `native-image` goal needs to be removed, this adds `<quarkus.package.type>native</quarkus.package.type>`\
        \ to the `native` profile `properties` section, given the `native` profile\
        \ exists in the `pom.xml`."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/migratequarkusmavenpluginnativeimagegoal"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.MultiTransformHotStreamToMultiHotStream:
      name: "org.openrewrite.quarkus.MultiTransformHotStreamToMultiHotStream"
      description: "Replace Mutiny API usages of `multi.transform().toHotStream()`\
        \ with `multi.toHotStream()`."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/multitransformhotstreamtomultihotstream"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.Quarkus1to1_13Migration:
      name: "org.openrewrite.quarkus.Quarkus1to1_13Migration"
      description: "Migrates Quarkus 1.11 to 1.13."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/quarkus1to1_13migration"
      options: []
      isImperative: false
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.migrate.javaee.AddQuarkus2Dependencies:
      name: "org.openrewrite.quarkus.migrate.javaee.AddQuarkus2Dependencies"
      description: "Add Quarkus 2 dependencies to the project."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/migrate/javaee/addquarkus2dependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.migrate.javaee.AddQuarkus2MavenPlugins:
      name: "org.openrewrite.quarkus.migrate.javaee.AddQuarkus2MavenPlugins"
      description: "Upgrade Standard JavaEE dependencies to Quarkus 2 dependencies."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/migrate/javaee/addquarkus2mavenplugins"
      options: []
      isImperative: false
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.migrate.javaee.JavaEEtoQuarkus2CodeMigration:
      name: "org.openrewrite.quarkus.migrate.javaee.JavaEEtoQuarkus2CodeMigration"
      description: "Migrate Standard JavaEE Code to Quarkus 2."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/migrate/javaee/javaeetoquarkus2codemigration"
      options: []
      isImperative: false
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.migrate.javaee.JavaEEtoQuarkus2Migration:
      name: "org.openrewrite.quarkus.migrate.javaee.JavaEEtoQuarkus2Migration"
      description: "These recipes help with the migration of a JavaEE application\
        \ using EJBs and Hibernate to Quarkus 2. Additional transformations like JSF,\
        \ JMS, Quarkus Tests may be necessary."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/migrate/javaee/javaeetoquarkus2migration"
      options: []
      isImperative: false
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.migrate.javaee.RemoveJavaEEDependencies:
      name: "org.openrewrite.quarkus.migrate.javaee.RemoveJavaEEDependencies"
      description: "Remove JavaEE dependencies from the project."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/migrate/javaee/removejavaeedependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.quarkus2.GrpcServiceAnnotationToGrpcClient:
      name: "org.openrewrite.quarkus.quarkus2.GrpcServiceAnnotationToGrpcClient"
      description: "The `@GrpcService` annotation is replaced with `@GrpcClient` in\
        \ Quarkus 2.x. Removes the optional `@GrpcClient.value()` unless the service\
        \ name is different from the name of annotated element."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/quarkus2/grpcserviceannotationtogrpcclient"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.quarkus2.Quarkus1to2Migration:
      name: "org.openrewrite.quarkus.quarkus2.Quarkus1to2Migration"
      description: "Migrates Quarkus 1.x to 2.x."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/quarkus2/quarkus1to2migration"
      options: []
      isImperative: false
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.quarkus2.RemoveAvroMavenPlugin:
      name: "org.openrewrite.quarkus.quarkus2.RemoveAvroMavenPlugin"
      description: "Removes the `avro-maven-plugin` if the `quarkus-maven-plugin`\
        \ is found in the project's `pom.xml`. Avro has been integrated with the Quarkus\
        \ code generation mechanism. This replaces the need to use the Avro plugin."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/quarkus2/removeavromavenplugin"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.quarkus2.UseIdentifierOnDefaultKafkaBroker:
      name: "org.openrewrite.quarkus.quarkus2.UseIdentifierOnDefaultKafkaBroker"
      description: "Use `@io.smallrye.common.annotation.Identifier` on default kafka\
        \ broker configuration."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/quarkus2/useidentifierondefaultkafkabroker"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.quarkus2.UsePanacheEntityBaseStaticMethods:
      name: "org.openrewrite.quarkus.quarkus2.UsePanacheEntityBaseStaticMethods"
      description: "The `getEntityManager()` and the `flush()` methods of `PanacheEntityBase`\
        \ are now static methods."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/quarkus2/usepanacheentitybasestaticmethods"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.quarkus2.UsePanacheEntityBaseUniT:
      name: "org.openrewrite.quarkus.quarkus2.UsePanacheEntityBaseUniT"
      description: "The `persist()` and `persistAndFlush()` methods now return an\
        \ `Uni<T extends PanacheEntityBase>` instead of an `Uni<Void>` to allow chaining\
        \ the methods."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/quarkus2/usepanacheentitybaseunit"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.quarkus2.UseReactivePanacheMongoEntityBaseUniT:
      name: "org.openrewrite.quarkus.quarkus2.UseReactivePanacheMongoEntityBaseUniT"
      description: "The `persist()`, `update()`, and `persistOrUpdate()` methods now\
        \ return a `Uni<T extends ReactivePanacheMongoEntityBase>` instead of a `Uni<Void>`\
        \ to allow chaining the methods."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/quarkus2/usereactivepanachemongoentitybaseunit"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.search.FindQuarkusProfiles:
      name: "org.openrewrite.quarkus.search.FindQuarkusProfiles"
      description: "Search the properties for existing Quarkus profiles."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/search/findquarkusprofiles"
      options: []
      isImperative: true
      artifactId: "rewrite-quarkus"
    org.openrewrite.quarkus.search.FindQuarkusProperties:
      name: "org.openrewrite.quarkus.search.FindQuarkusProperties"
      description: "Finds occurrences of a Quarkus property key."
      docLink: "https://docs.openrewrite.org/recipes/quarkus/search/findquarkusproperties"
      options:
      - name: "pathExpressions"
        type: "List"
        required: false
      - name: "profile"
        type: "String"
        required: false
      - name: "propertyKey"
        type: "String"
        required: true
      - name: "searchAllProfiles"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-quarkus"
rewrite-reactive-streams:
  artifactId: "rewrite-reactive-streams"
  version: "0.11.0"
  markdownRecipeDescriptors:
    org.openrewrite.reactive.reactor.ReactorBestPractices:
      name: "org.openrewrite.reactive.reactor.ReactorBestPractices"
      description: "This recipe applies best practices for using Reactor."
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorbestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorDoAfterSuccessOrErrorToTap:
      name: "org.openrewrite.reactive.reactor.ReactorDoAfterSuccessOrErrorToTap"
      description: "As of reactor-core 3.5 the `doAfterSuccessOrError` method is removed,\
        \ this recipe replaces it with the `tap` operator."
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactordoaftersuccessorerrortotap"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCacheToSinkRecipes:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCacheToSinkRecipes"
      description: "As of 3.5 Processors are deprecated and Sinks are preferred."
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcachetosinkrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCacheToSinkRecipes$ReplayProcessorCacheDefaultToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCacheToSinkRecipes$ReplayProcessorCacheDefaultToSinkRecipe"
      description: "As of 3.5 ReplayProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcachetosinkrecipesusdreplayprocessorcachedefaulttosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCacheToSinkRecipes$ReplayProcessorCacheToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCacheToSinkRecipes$ReplayProcessorCacheToSinkRecipe"
      description: "As of 3.5 ReplayProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcachetosinkrecipesusdreplayprocessorcachetosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes"
      description: "As of 3.5 Processors are deprecated and Sinks are preferred."
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$DirectProcessorCreateToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$DirectProcessorCreateToSinkRecipe"
      description: "As of 3.5 DirectProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusddirectprocessorcreatetosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$EmitterProcessorCreateBooleanToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$EmitterProcessorCreateBooleanToSinkRecipe"
      description: "As of 3.5 EmitterProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdemitterprocessorcreatebooleantosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$EmitterProcessorCreateIntBooleanToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$EmitterProcessorCreateIntBooleanToSinkRecipe"
      description: "As of 3.5 EmitterProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdemitterprocessorcreateintbooleantosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$EmitterProcessorCreateIntToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$EmitterProcessorCreateIntToSinkRecipe"
      description: "As of 3.5 EmitterProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdemitterprocessorcreateinttosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$EmitterProcessorCreateToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$EmitterProcessorCreateToSinkRecipe"
      description: "As of 3.5 EmitterProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdemitterprocessorcreatetosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$MonoProcessorCreateToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$MonoProcessorCreateToSinkRecipe"
      description: "As of 3.5 MonoProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdmonoprocessorcreatetosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateIntLiteralFalseToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateIntLiteralFalseToSinkRecipe"
      description: "As of 3.5 ReplayProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdreplayprocessorcreateintliteralfalsetosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateIntLiteralTrueToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateIntLiteralTrueToSinkRecipe"
      description: "As of 3.5 ReplayProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdreplayprocessorcreateintliteraltruetosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateIntToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateIntToSinkRecipe"
      description: "As of 3.5 ReplayProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdreplayprocessorcreateinttosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateSizeAndTimeoutSchedulerToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateSizeAndTimeoutSchedulerToSinkRecipe"
      description: "As of 3.5 ReplayProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdreplayprocessorcreatesizeandtimeoutschedulertosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateSizeAndTimeoutToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateSizeAndTimeoutToSinkRecipe"
      description: "As of 3.5 ReplayProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdreplayprocessorcreatesizeandtimeouttosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateTimeoutSchedulerToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateTimeoutSchedulerToSinkRecipe"
      description: "As of 3.5 ReplayProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdreplayprocessorcreatetimeoutschedulertosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateTimeoutToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateTimeoutToSinkRecipe"
      description: "As of 3.5 ReplayProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdreplayprocessorcreatetimeouttosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$ReplayProcessorCreateToSinkRecipe"
      description: "As of 3.5 ReplayProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdreplayprocessorcreatetosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$UnicastProcessorCreateQueueConsumerDisposableToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$UnicastProcessorCreateQueueConsumerDisposableToSinkRecipe"
      description: "As of 3.5 UnicastProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdunicastprocessorcreatequeueconsumerdisposabletosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$UnicastProcessorCreateQueueDisposableToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$UnicastProcessorCreateQueueDisposableToSinkRecipe"
      description: "As of 3.5 UnicastProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdunicastprocessorcreatequeuedisposabletosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$UnicastProcessorCreateQueueToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$UnicastProcessorCreateQueueToSinkRecipe"
      description: "As of 3.5 UnicastProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdunicastprocessorcreatequeuetosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$UnicastProcessorCreateToSinkRecipe:
      name: "org.openrewrite.reactive.reactor.ReactorProcessorCreateToSinkRecipes$UnicastProcessorCreateToSinkRecipe"
      description: "As of 3.5 UnicastProcessor is deprecated and Sinks are preferred"
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/reactorprocessorcreatetosinkrecipesusdunicastprocessorcreatetosinkrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-reactive-streams"
    org.openrewrite.reactive.reactor.UpgradeReactor_3_5:
      name: "org.openrewrite.reactive.reactor.UpgradeReactor_3_5"
      description: "Adopt to [breaking changes in Reactor 3.5](https://projectreactor.io/docs/core/3.4.26/api/deprecated-list.html)."
      docLink: "https://docs.openrewrite.org/recipes/reactive/reactor/upgradereactor_3_5"
      options: []
      isImperative: false
      artifactId: "rewrite-reactive-streams"
rewrite-rewrite:
  artifactId: "rewrite-rewrite"
  version: "0.2.0"
  markdownRecipeDescriptors:
    org.openrewrite.recipes.JavaRecipeBestPractices:
      name: "org.openrewrite.recipes.JavaRecipeBestPractices"
      description: "Best practices for Java recipe development."
      docLink: "https://docs.openrewrite.org/recipes/recipes/javarecipebestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-rewrite"
    org.openrewrite.recipes.RecipeNullabilityBestPractices:
      name: "org.openrewrite.recipes.RecipeNullabilityBestPractices"
      description: "Use JSpecify nullable annotations; drop Nonnull annotations; use\
        \ `NullMarked` on `package-info.java` instead."
      docLink: "https://docs.openrewrite.org/recipes/recipes/recipenullabilitybestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-rewrite"
    org.openrewrite.recipes.RecipeTestingBestPractices:
      name: "org.openrewrite.recipes.RecipeTestingBestPractices"
      description: "Best practices for testing recipes."
      docLink: "https://docs.openrewrite.org/recipes/recipes/recipetestingbestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-rewrite"
    org.openrewrite.recipes.rewrite.OpenRewriteRecipeBestPractices:
      name: "org.openrewrite.recipes.rewrite.OpenRewriteRecipeBestPractices"
      description: "Best practices for OpenRewrite recipe development."
      docLink: "https://docs.openrewrite.org/recipes/recipes/rewrite/openrewriterecipebestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-rewrite"
rewrite-spring:
  artifactId: "rewrite-spring"
  version: "0.3.2"
  markdownRecipeDescriptors:
    io.moderne.java.spring.boot3.AddValidToConfigurationPropertiesFields:
      name: "io.moderne.java.spring.boot3.AddValidToConfigurationPropertiesFields"
      description: "In Spring Boot 3.4, validation of `@ConfigurationProperties` classes\
        \ annotated with `@Validated` now follows the Bean Validation specification,\
        \ only cascading to nested properties if the corresponding field is annotated\
        \ with `@Valid`. The recipe will add a `@Valid` annotation to each field which\
        \ has a type that has a field which is annotated with a `jakarta.validation.constraints.*`\
        \ annotation."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/addvalidtoconfigurationpropertiesfields"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.CommentDeprecations:
      name: "io.moderne.java.spring.boot3.CommentDeprecations"
      description: "Spring Boot 3.4 deprecates methods that are not commonly used\
        \ or need manual interaction."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/commentdeprecations"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.CommentOnMockAndSpyBeansInConfigSpring34:
      name: "io.moderne.java.spring.boot3.CommentOnMockAndSpyBeansInConfigSpring34"
      description: "As stated in [Spring Docs](https://docs.spring.io/spring-framework/reference/testing/annotations/integration-spring/annotation-mockitobean.html)\
        \ `@MockitoSpyBean` and `@MockitoBean` will only work in tests, explicitly\
        \ not in `@Configuration` annotated classes."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/commentonmockandspybeansinconfigspring34"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.ConditionalOnAvailableEndpointMigrationSpring34:
      name: "io.moderne.java.spring.boot3.ConditionalOnAvailableEndpointMigrationSpring34"
      description: "Migrate `@ConditionalOnAvailableEndpoint(EndpointExposure.CLOUD_FOUNDRY)`\
        \ to `@ConditionalOnAvailableEndpoint(EndpointExposure.WEB)` for Spring Boot\
        \ 3.4."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/conditionalonavailableendpointmigrationspring34"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.MigrateEndpointAccessValueSpring34:
      name: "io.moderne.java.spring.boot3.MigrateEndpointAccessValueSpring34"
      description: "Migrate manage endpoint access value from `false` to `none` and\
        \ `true` to `read-only`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/migrateendpointaccessvaluespring34"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.MigrateEndpointAnnotationAccessValueSpring34:
      name: "io.moderne.java.spring.boot3.MigrateEndpointAnnotationAccessValueSpring34"
      description: "Since Spring Boot 3.4 the `@Endpoint` access configuration values\
        \ are no longer `true|false` but `none|read-only|unrestricted`"
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/migrateendpointannotationaccessvaluespring34"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.RemoveReplaceNoneFromAutoConfigureTestDatabase:
      name: "io.moderne.java.spring.boot3.RemoveReplaceNoneFromAutoConfigureTestDatabase"
      description: "`Replace.NONE` is the default value for `@AutoConfigureTestDatabase`\
        \ since Spring Boot 3.4."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/removereplacenonefromautoconfiguretestdatabase"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.SpringBoot3BestPractices:
      name: "io.moderne.java.spring.boot3.SpringBoot3BestPractices"
      description: "Applies best practices to Spring Boot 3.4+ applications."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/springboot3bestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.SpringBootManagementEndpointProperties_3_4:
      name: "io.moderne.java.spring.boot3.SpringBootManagementEndpointProperties_3_4"
      description: "Migrate the settings for Management Endpoint Security from `true`|`false`\
        \ to `read-only`|`none`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/springbootmanagementendpointproperties_3_4"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.SpringBootProperties_3_4:
      name: "io.moderne.java.spring.boot3.SpringBootProperties_3_4"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/springbootproperties_3_4"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.UpgradeGradle7Spring34:
      name: "io.moderne.java.spring.boot3.UpgradeGradle7Spring34"
      description: "Spring Boot 3.4 requires Gradle 7.6.4."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgradegradle7spring34"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.UpgradeGradle8Spring34:
      name: "io.moderne.java.spring.boot3.UpgradeGradle8Spring34"
      description: "Spring Boot 3.4 requires Gradle 8.4+."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgradegradle8spring34"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.UpgradeMyBatisToSpringBoot_3_4:
      name: "io.moderne.java.spring.boot3.UpgradeMyBatisToSpringBoot_3_4"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 3.4."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_3_4"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.boot3.UpgradeSpringBoot_3_4:
      name: "io.moderne.java.spring.boot3.UpgradeSpringBoot_3_4"
      description: "Migrate applications to the latest Spring Boot 3.4 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions.\
        \ This recipe will also chain additional framework migrations (Spring Framework,\
        \ Spring Data, etc) that are required as part of the migration to Spring Boot\
        \ 3.4."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgradespringboot_3_4"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.cloud2024.DependencyUpgrades:
      name: "io.moderne.java.spring.cloud2024.DependencyUpgrades"
      description: "Upgrade dependencies to Spring Cloud 2024 from prior 2023.x version."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/cloud2024/dependencyupgrades"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.cloud2024.UpgradeSpringCloud_2024:
      name: "io.moderne.java.spring.cloud2024.UpgradeSpringCloud_2024"
      description: "Migrate applications to the latest Spring Cloud 2024 (Leyton)\
        \ release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/cloud2024/upgradespringcloud_2024"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.framework.UpgradeSpringFramework_6_2:
      name: "io.moderne.java.spring.framework.UpgradeSpringFramework_6_2"
      description: "Migrate applications to the latest Spring Framework 6.2 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/upgradespringframework_6_2"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    io.moderne.java.spring.security6.UpgradeSpringSecurity_6_4:
      name: "io.moderne.java.spring.security6.UpgradeSpringSecurity_6_4"
      description: "Migrate applications to the latest Spring Security 6.4 release.\
        \ This recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/upgradespringsecurity_6_4"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.gradle.spring.AddSpringDependencyManagementPlugin:
      name: "org.openrewrite.gradle.spring.AddSpringDependencyManagementPlugin"
      description: "Prior to Spring Boot 2.0 the dependency management plugin was\
        \ applied automatically as part of the overall spring boot plugin. Afterwards\
        \ the dependency-management plugin must be applied explicitly, or Gradle's\
        \ `platform()` feature may be used instead. This recipe makes usage of io-spring.dependency-management\
        \ explicit in anticipation of upgrade to Spring Boot 2.0 or later."
      docLink: "https://docs.openrewrite.org/recipes/gradle/spring/addspringdependencymanagementplugin"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.AddSpringProperty:
      name: "org.openrewrite.java.spring.AddSpringProperty"
      description: "Add a spring configuration property to a configuration file if\
        \ it does not already exist in that file."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/addspringproperty"
      options:
      - name: "comment"
        type: "String"
        required: false
      - name: "pathExpressions"
        type: "List"
        required: false
      - name: "property"
        type: "String"
        required: true
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.ChangeMethodParameter:
      name: "org.openrewrite.java.spring.ChangeMethodParameter"
      description: "Change parameter type for a method declaration, identified by\
        \ a method pattern."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/changemethodparameter"
      options:
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "parameterIndex"
        type: "Integer"
        required: true
      - name: "parameterType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.ChangeSpringPropertyKey:
      name: "org.openrewrite.java.spring.ChangeSpringPropertyKey"
      description: "Change spring application property keys existing in either Properties\
        \ or Yaml files."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/changespringpropertykey"
      options:
      - name: "except"
        type: "List"
        required: false
      - name: "newPropertyKey"
        type: "String"
        required: true
      - name: "oldPropertyKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.ChangeSpringPropertyValue:
      name: "org.openrewrite.java.spring.ChangeSpringPropertyValue"
      description: "Change spring application property values existing in either Properties\
        \ or Yaml files."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/changespringpropertyvalue"
      options:
      - name: "newValue"
        type: "String"
        required: true
      - name: "oldValue"
        type: "String"
        required: false
      - name: "propertyKey"
        type: "String"
        required: true
      - name: "regex"
        type: "Boolean"
        required: false
      - name: "relaxedBinding"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.CommentOutSpringPropertyKey:
      name: "org.openrewrite.java.spring.CommentOutSpringPropertyKey"
      description: "Add comment to specified Spring properties, and comment out the\
        \ property."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/commentoutspringpropertykey"
      options:
      - name: "comment"
        type: "String"
        required: true
      - name: "propertyKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.DeleteSpringProperty:
      name: "org.openrewrite.java.spring.DeleteSpringProperty"
      description: "Delete a spring configuration property from any configuration\
        \ file that contains a matching key."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/deletespringproperty"
      options:
      - name: "propertyKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.ExpandProperties:
      name: "org.openrewrite.java.spring.ExpandProperties"
      description: "Expand YAML properties to not use the dot syntax shortcut."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/expandproperties"
      options:
      - name: "sourceFileMask"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.ImplicitWebAnnotationNames:
      name: "org.openrewrite.java.spring.ImplicitWebAnnotationNames"
      description: "Removes implicit web annotation names."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/implicitwebannotationnames"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.NoAutowiredOnConstructor:
      name: "org.openrewrite.java.spring.NoAutowiredOnConstructor"
      description: "Spring can infer an autowired constructor when there is a single\
        \ constructor on the bean. This recipe removes unneeded `@Autowired` annotations\
        \ on constructors."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/noautowiredonconstructor"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.NoRepoAnnotationOnRepoInterface:
      name: "org.openrewrite.java.spring.NoRepoAnnotationOnRepoInterface"
      description: "Removes superfluous `@Repository` annotation from Spring Data\
        \ `Repository` sub-interfaces."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/norepoannotationonrepointerface"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.NoRequestMappingAnnotation:
      name: "org.openrewrite.java.spring.NoRequestMappingAnnotation"
      description: "Replace method declaration `@RequestMapping` annotations with\
        \ `@GetMapping`, `@PostMapping`, etc. when possible."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/norequestmappingannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.PropertiesToKebabCase:
      name: "org.openrewrite.java.spring.PropertiesToKebabCase"
      description: "Normalize Spring properties to use lowercase and hyphen-separated\
        \ syntax. For example, changing `spring.main.showBanner` to `spring.main.show-banner`.\
        \ With [Spring's relaxed binding](https://docs.spring.io/spring-boot/docs/2.5.6/reference/html/features.html#features.external-config.typesafe-configuration-properties.relaxed-binding),\
        \ `kebab-case` may be used in properties files and still be converted to configuration\
        \ beans. Note, an exception to this is the case of `@Value`, which is match-sensitive.\
        \ For example, `@Value(\"${anExampleValue}\")` will not match `an-example-value`.\
        \ [The Spring reference documentation recommends using `kebab-case` for properties\
        \ where possible](https://docs.spring.io/spring-boot/docs/2.5.6/reference/html/features.html#features.external-config.typesafe-configuration-properties.relaxed-binding)."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/propertiestokebabcase"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.RenameBean:
      name: "org.openrewrite.java.spring.RenameBean"
      description: "Renames a Spring bean, both declaration and references."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/renamebean"
      options:
      - name: "newName"
        type: "String"
        required: true
      - name: "oldName"
        type: "String"
        required: true
      - name: "type"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.SeparateApplicationYamlByProfile:
      name: "org.openrewrite.java.spring.SeparateApplicationYamlByProfile"
      description: "The Spring team's recommendation is to separate profile properties\
        \ into their own YAML files now."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/separateapplicationyamlbyprofile"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.UpdateApiManifest:
      name: "org.openrewrite.java.spring.UpdateApiManifest"
      description: "Keep a consolidated manifest of the API endpoints that this application\
        \ exposes up-to-date."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/updateapimanifest"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.amqp.UseTlsAmqpConnectionString:
      name: "org.openrewrite.java.spring.amqp.UseTlsAmqpConnectionString"
      description: "Use TLS for AMQP connection strings."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/amqp/usetlsamqpconnectionstring"
      options:
      - name: "oldPort"
        type: "Integer"
        required: true
      - name: "pathExpressions"
        type: "List"
        required: false
      - name: "port"
        type: "Integer"
        required: true
      - name: "propertyKey"
        type: "String"
        required: false
      - name: "tlsPropertyKey"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.batch.ListenerSupportClassToInterface:
      name: "org.openrewrite.java.spring.batch.ListenerSupportClassToInterface"
      description: "As of 5.0 `*Listener` interfaces default methods (made possible\
        \ by a Java 8 baseline) can be implemented directly without the need for the\
        \ adapter."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/batch/listenersupportclasstointerface"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.batch.MigrateItemWriterWrite:
      name: "org.openrewrite.java.spring.batch.MigrateItemWriterWrite"
      description: "`JobBuilderFactory` was deprecated in spring-batch 5.x: replaced\
        \ by `JobBuilder`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/batch/migrateitemwriterwrite"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.batch.MigrateJobBuilderFactory:
      name: "org.openrewrite.java.spring.batch.MigrateJobBuilderFactory"
      description: "`JobBuilderFactory` was deprecated in spring-batch 5.x. It is\
        \ replaced by `JobBuilder`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/batch/migratejobbuilderfactory"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.batch.MigrateStepBuilderFactory:
      name: "org.openrewrite.java.spring.batch.MigrateStepBuilderFactory"
      description: "`StepBuilderFactory` was deprecated in spring-batch 5.x. It is\
        \ replaced by `StepBuilder`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/batch/migratestepbuilderfactory"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.batch.RemoveDefaultBatchConfigurer:
      name: "org.openrewrite.java.spring.batch.RemoveDefaultBatchConfigurer"
      description: "Remove `extends DefaultBatchConfigurer` and `@Override` from associated\
        \ methods."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/batch/removedefaultbatchconfigurer"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.batch.ReplaceSupportClassWithItsInterface:
      name: "org.openrewrite.java.spring.batch.ReplaceSupportClassWithItsInterface"
      description: "As of spring-batch 5.x Listeners has default methods (made possible\
        \ by a Java 8 baseline) and can be implemented directly without the need for\
        \ this adapter."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/batch/replacesupportclasswithitsinterface"
      options:
      - name: "fullyQualifiedClassName"
        type: "String"
        required: true
      - name: "fullyQualifiedInterfaceName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.batch.SpringBatch4To5Migration:
      name: "org.openrewrite.java.spring.batch.SpringBatch4To5Migration"
      description: "Migrate applications built on Spring Batch 4.3 to the latest Spring\
        \ Batch 5.0 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/batch/springbatch4to5migration"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.batch.UpgradeSkipPolicyParameterType:
      name: "org.openrewrite.java.spring.batch.UpgradeSkipPolicyParameterType"
      description: "The `skipCount` parameter in `org.springframework.batch.core.step.skip.SkipPolicy#shouldSkip`\
        \ has been changed from `int` to `long`, this recipe updates the parameter\
        \ type in the implementing classes."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/batch/upgradeskippolicyparametertype"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.AddConfigurationAnnotationIfBeansPresent:
      name: "org.openrewrite.java.spring.boot2.AddConfigurationAnnotationIfBeansPresent"
      description: "Class having `@Bean` annotation over any methods but missing `@Configuration`\
        \ annotation over the declaring class would have `@Configuration` annotation\
        \ added."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/addconfigurationannotationifbeanspresent"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.ChangeEmbeddedServletContainerCustomizer:
      name: "org.openrewrite.java.spring.boot2.ChangeEmbeddedServletContainerCustomizer"
      description: "Find any classes implementing `EmbeddedServletContainerCustomizer`\
        \ and change the interface to `WebServerFactoryCustomizer<ConfigurableServletWebServerFactory>`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/changeembeddedservletcontainercustomizer"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.ConditionalOnBeanAnyNestedCondition:
      name: "org.openrewrite.java.spring.boot2.ConditionalOnBeanAnyNestedCondition"
      description: "Migrate multi-condition `@ConditionalOnBean` annotations to `AnyNestedCondition`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/conditionalonbeananynestedcondition"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.DatabaseComponentAndBeanInitializationOrdering:
      name: "org.openrewrite.java.spring.boot2.DatabaseComponentAndBeanInitializationOrdering"
      description: "Beans of certain well-known types, such as `JdbcTemplate`, will\
        \ be ordered so that they are initialized after the database has been initialized.\
        \ If you have a bean that works with the `DataSource` directly, annotate its\
        \ class or `@Bean` method with `@DependsOnDatabaseInitialization` to ensure\
        \ that it too is initialized after the database has been initialized. See\
        \ the [release notes](https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.5-Release-Notes#initialization-ordering)\
        \ for more."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/databasecomponentandbeaninitializationordering"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.GetErrorAttributes:
      name: "org.openrewrite.java.spring.boot2.GetErrorAttributes"
      description: "`ErrorAttributes#getErrorAttributes(WebRequest, boolean)` was\
        \ deprecated in Spring Boot 2.3."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/geterrorattributes"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.HeadersConfigurerLambdaDsl:
      name: "org.openrewrite.java.spring.boot2.HeadersConfigurerLambdaDsl"
      description: "Converts `HeadersConfigurer` chained call from Spring Security\
        \ pre 5.2.x into new lambda DSL style calls and removes `and()` methods."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/headersconfigurerlambdadsl"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.HttpSecurityLambdaDsl:
      name: "org.openrewrite.java.spring.boot2.HttpSecurityLambdaDsl"
      description: "Converts `HttpSecurity` chained call from Spring Security pre\
        \ 5.2.x into new lambda DSL style calls and removes `and()` methods."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/httpsecuritylambdadsl"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MaybeAddJavaxValidationApi:
      name: "org.openrewrite.java.spring.boot2.MaybeAddJavaxValidationApi"
      description: "Conditional on the application using a version of Spring Boot\
        \ which uses javax but provides a hibernate-validator version which exports\
        \ the jakarta.validation-api instead"
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/maybeaddjavaxvalidationapi"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MaybeAddSpringBootStarterActuator:
      name: "org.openrewrite.java.spring.boot2.MaybeAddSpringBootStarterActuator"
      description: "Replace deprecated `micrometer-spring-legacy` with `spring-boot-starter-actuator`"
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/maybeaddspringbootstarteractuator"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MergeBootstrapYamlWithApplicationYaml:
      name: "org.openrewrite.java.spring.boot2.MergeBootstrapYamlWithApplicationYaml"
      description: "In Spring Boot 2.4, support for `bootstrap.yml` was removed. It's\
        \ properties should be merged with `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/mergebootstrapyamlwithapplicationyaml"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateActuatorMediaTypeToApiVersion:
      name: "org.openrewrite.java.spring.boot2.MigrateActuatorMediaTypeToApiVersion"
      description: "Spring Boot `ActuatorMediaType` was deprecated in 2.5 in favor\
        \ of `ApiVersion#getProducedMimeType()`. Replace `MediaType.parseMediaType(ActuatorMediaType.Vx_JSON)`\
        \ with `MediaType.asMediaType(ApiVersion.Vx.getProducedMimeType())`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migrateactuatormediatypetoapiversion"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateApplicationHealthIndicatorToPingHealthIndicator:
      name: "org.openrewrite.java.spring.boot2.MigrateApplicationHealthIndicatorToPingHealthIndicator"
      description: "`org.springframework.boot.actuate.health.ApplicationHealthIndicator`\
        \ was deprecated in 2.2."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migrateapplicationhealthindicatortopinghealthindicator"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateConfigurationPropertiesBindingPostProcessorValidatorBeanName:
      name: "org.openrewrite.java.spring.boot2.MigrateConfigurationPropertiesBindingPostProcessorValidatorBeanName"
      description: "Replaces field and static access of `ConfigurationPropertiesBindingPostProcessor.VALIDATOR_BEAN_NAME`\
        \ with `EnableConfigurationProperties.VALIDATOR_BEAN_NAME`. Deprecated in\
        \ 2.2.x."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migrateconfigurationpropertiesbindingpostprocessorvalidatorbeanname"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateDatabaseCredentials:
      name: "org.openrewrite.java.spring.boot2.MigrateDatabaseCredentials"
      description: "If you currently define a `spring.flyway.url` or `spring.liquibase.url`\
        \ you may need to provide additional username and password properties. In\
        \ earlier versions of Spring Boot, these settings were derived from `spring.datasource`\
        \ properties but this turned out to be problematic for people that provided\
        \ their own `DataSource` beans."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migratedatabasecredentials"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateDiskSpaceHealthIndicatorConstructor:
      name: "org.openrewrite.java.spring.boot2.MigrateDiskSpaceHealthIndicatorConstructor"
      description: "`DiskSpaceHealthIndicator(File, long)` was deprecated in Spring\
        \ Data 2.1 for removal in 2.2."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migratediskspacehealthindicatorconstructor"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateErrorControllerPackageName:
      name: "org.openrewrite.java.spring.boot2.MigrateErrorControllerPackageName"
      description: "Use `org.springframework.boot.web.servlet.error.ErrorController`\
        \ instead of the deprecated `org.springframework.boot.autoconfigure.web.ErrorController`\
        \ in Spring Boot 2.0 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migrateerrorcontrollerpackagename"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateErrorPropertiesIncludeStackTraceConstants:
      name: "org.openrewrite.java.spring.boot2.MigrateErrorPropertiesIncludeStackTraceConstants"
      description: "`ErrorProperties#IncludeStacktrace.ON_TRACE_PARAM` was deprecated\
        \ in 2.3.x and removed in 2.5.0."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migrateerrorpropertiesincludestacktraceconstants"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateHibernateConstraintsToJavax:
      name: "org.openrewrite.java.spring.boot2.MigrateHibernateConstraintsToJavax"
      description: "Use `javax.validation.constraints` instead of the deprecated `org.hibernate.validator.constraints`\
        \ in Spring Boot 2.0 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migratehibernateconstraintstojavax"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateHsqlEmbeddedDatabaseConnection:
      name: "org.openrewrite.java.spring.boot2.MigrateHsqlEmbeddedDatabaseConnection"
      description: "Spring-Boot `EmbeddedDatabaseConnection.HSQL` was deprecated in\
        \ favor of `EmbeddedDatabaseConnection.HSQLDB` in 2.4."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migratehsqlembeddeddatabaseconnection"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateHttpMessageConvertersPackageName:
      name: "org.openrewrite.java.spring.boot2.MigrateHttpMessageConvertersPackageName"
      description: "Use `org.springframework.boot.autoconfigure.http.HttpMessageConverters`\
        \ instead of the deprecated `org.springframework.boot.autoconfigure.web.HttpMessageConverters`\
        \ in Spring Boot 2.0 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migratehttpmessageconverterspackagename"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateLocalServerPortAnnotation:
      name: "org.openrewrite.java.spring.boot2.MigrateLocalServerPortAnnotation"
      description: "Updates the package and adds the necessary dependency if `LocalServerPort`\
        \ is in use. The package of `LocalServerPort` was changed in Spring Boot 2.0,\
        \ necessitating changes."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migratelocalserverportannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateLoggingSystemPropertyConstants:
      name: "org.openrewrite.java.spring.boot2.MigrateLoggingSystemPropertyConstants"
      description: "Replaces field and static access of deprecated fields in `LoggingSystemProperties`\
        \ with the recommendations from `LogbackLoggingSystemProperties`. Deprecated\
        \ in 2.4.x and removed in 2.6.0."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migrateloggingsystempropertyconstants"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateMultipartConfigFactory:
      name: "org.openrewrite.java.spring.boot2.MigrateMultipartConfigFactory"
      description: "Methods to set `DataSize` with primitive arguments were deprecated\
        \ in 2.1 and removed in 2.2."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migratemultipartconfigfactory"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateRestClientBuilderCustomizerPackageName:
      name: "org.openrewrite.java.spring.boot2.MigrateRestClientBuilderCustomizerPackageName"
      description: "`org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientBuilderCustomizer`\
        \ was deprecated in 2.3."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migraterestclientbuildercustomizerpackagename"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateRestTemplateBuilderBasicAuthorization:
      name: "org.openrewrite.java.spring.boot2.MigrateRestTemplateBuilderBasicAuthorization"
      description: "`RestTemplateBuilder#basicAuthorization` was deprecated in 2.1."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migrateresttemplatebuilderbasicauthorization"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateRestTemplateBuilderTimeoutByInt:
      name: "org.openrewrite.java.spring.boot2.MigrateRestTemplateBuilderTimeoutByInt"
      description: "`RestTemplateBuilder#setConnectTimeout(int)` and `RestTemplateBuilder#setReadTimeout(int)`\
        \ were deprecated in Spring Boot 2.1."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migrateresttemplatebuildertimeoutbyint"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateSpringBootServletInitializerPackageName:
      name: "org.openrewrite.java.spring.boot2.MigrateSpringBootServletInitializerPackageName"
      description: "Use `org.springframework.boot.web.servlet.support.SpringBootServletInitializer`\
        \ instead of the deprecated `org.springframework.boot.web.support.SpringBootServletInitializer`\
        \ in Spring Boot 1.4 or higher."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migratespringbootservletinitializerpackagename"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateToWebServerFactoryCustomizer:
      name: "org.openrewrite.java.spring.boot2.MigrateToWebServerFactoryCustomizer"
      description: "Use `WebServerFactoryCustomizer` instead of the deprecated `EmbeddedServletContainerCustomizer`\
        \ in Spring Boot 2.0 or higher. This recipe will replace look for any classes\
        \ that implement `EmbeddedServletContainerCustomizer` and change the interface\
        \ to `WebServerFactoryCustomizer<ConfigurableServletWebServerFactory>`. This\
        \ recipe also adjusts the types used in the `customize()` method from `*EmbeddedServletContainerFactory`\
        \ to their `*ServletWebServerFactory` counterparts."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migratetowebserverfactorycustomizer"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateUndertowServletWebServerFactoryIsEagerInitFilters:
      name: "org.openrewrite.java.spring.boot2.MigrateUndertowServletWebServerFactoryIsEagerInitFilters"
      description: "`org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory#isEagerInitFilters`\
        \ was deprecated in 2.4 and are removed in 2.6."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migrateundertowservletwebserverfactoryiseagerinitfilters"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateUndertowServletWebServerFactorySetEagerInitFilters:
      name: "org.openrewrite.java.spring.boot2.MigrateUndertowServletWebServerFactorySetEagerInitFilters"
      description: "`org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory#setEagerInitFilters`\
        \ was deprecated in 2.4 and are removed in 2.6."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migrateundertowservletwebserverfactoryseteagerinitfilters"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MigrateWebTestClientBuilderCustomizerPackageName:
      name: "org.openrewrite.java.spring.boot2.MigrateWebTestClientBuilderCustomizerPackageName"
      description: "`org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientBuilderCustomizer`\
        \ was deprecated in 2.2."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/migratewebtestclientbuildercustomizerpackagename"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.MoveAutoConfigurationToImportsFile:
      name: "org.openrewrite.java.spring.boot2.MoveAutoConfigurationToImportsFile"
      description: "Use `AutoConfiguration#imports` instead of the deprecated entry\
        \ `EnableAutoConfiguration` in `spring.factories` when defining autoconfiguration\
        \ classes."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/moveautoconfigurationtoimportsfile"
      options:
      - name: "preserveFactoriesFile"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.OutputCaptureExtension:
      name: "org.openrewrite.java.spring.boot2.OutputCaptureExtension"
      description: "Use the JUnit Jupiter extension instead of JUnit 4 rule."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/outputcaptureextension"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.RemoveObsoleteSpringRunners:
      name: "org.openrewrite.java.spring.boot2.RemoveObsoleteSpringRunners"
      description: "Remove obsolete classpath runners."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/removeobsoletespringrunners"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.ReplaceDeprecatedEnvironmentTestUtils:
      name: "org.openrewrite.java.spring.boot2.ReplaceDeprecatedEnvironmentTestUtils"
      description: "Replaces any references to the deprecated `EnvironmentTestUtils`\
        \ with `TestPropertyValues` and the appropriate functionality."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/replacedeprecatedenvironmenttestutils"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.ReplaceExtendWithAndContextConfiguration:
      name: "org.openrewrite.java.spring.boot2.ReplaceExtendWithAndContextConfiguration"
      description: "Replaces `@ExtendWith(SpringRunner.class)` and `@ContextConfiguration`\
        \ with `@SpringJunitConfig`, preserving attributes on `@ContextConfiguration`,\
        \ unless `@ContextConfiguration(loader = ...)` is used."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/replaceextendwithandcontextconfiguration"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.RestTemplateBuilderRequestFactory:
      name: "org.openrewrite.java.spring.boot2.RestTemplateBuilderRequestFactory"
      description: "Migrate `RestTemplateBuilder#requestFactory` calls to use a `Supplier`.\
        \ See the [migration guide](https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.0-Migration-Guide#resttemplatebuilder)\
        \ for more."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/resttemplatebuilderrequestfactory"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SamlRelyingPartyPropertyApplicationPropertiesMove:
      name: "org.openrewrite.java.spring.boot2.SamlRelyingPartyPropertyApplicationPropertiesMove"
      description: "Renames spring.security.saml2.relyingparty.registration.(any).identityprovider\
        \ to spring.security.saml2.relyingparty.registration.(any).assertingparty."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/samlrelyingpartypropertyapplicationpropertiesmove"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.ServerHttpSecurityLambdaDsl:
      name: "org.openrewrite.java.spring.boot2.ServerHttpSecurityLambdaDsl"
      description: "Converts `ServerHttpSecurity` chained call from Spring Security\
        \ pre 5.2.x into new lambda DSL style calls and removes `and()` methods."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/serverhttpsecuritylambdadsl"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBoot2BestPractices:
      name: "org.openrewrite.java.spring.boot2.SpringBoot2BestPractices"
      description: "Applies best practices to Spring Boot 2 applications."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springboot2bestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBoot2JUnit4to5Migration:
      name: "org.openrewrite.java.spring.boot2.SpringBoot2JUnit4to5Migration"
      description: "This recipe will migrate a Spring Boot application's tests from\
        \ JUnit 4 to JUnit 5. This spring-specific migration includes conversion of\
        \ Spring Test runners to Spring Test extensions and awareness of the composable\
        \ Spring Test annotations."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springboot2junit4to5migration"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBootMavenPluginMigrateAgentToAgents:
      name: "org.openrewrite.java.spring.boot2.SpringBootMavenPluginMigrateAgentToAgents"
      description: "Migrate the `spring-boot.run.agent` Maven plugin configuration\
        \ key to `spring-boot.run.agents`. Deprecated in 2.2.x."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springbootmavenpluginmigrateagenttoagents"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBootProperties_2_0:
      name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_0"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springbootproperties_2_0"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBootProperties_2_1:
      name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_1"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springbootproperties_2_1"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBootProperties_2_2:
      name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_2"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springbootproperties_2_2"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBootProperties_2_3:
      name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_3"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springbootproperties_2_3"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBootProperties_2_4:
      name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_4"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springbootproperties_2_4"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBootProperties_2_5:
      name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_5"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springbootproperties_2_5"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBootProperties_2_6:
      name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_6"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springbootproperties_2_6"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.SpringBootProperties_2_7:
      name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_7"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/springbootproperties_2_7"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.UnnecessarySpringExtension:
      name: "org.openrewrite.java.spring.boot2.UnnecessarySpringExtension"
      description: "`@SpringBootTest` and all test slice annotations already applies\
        \ `@SpringExtension` as of Spring Boot 2.1.0."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/unnecessaryspringextension"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.UnnecessarySpringRunWith:
      name: "org.openrewrite.java.spring.boot2.UnnecessarySpringRunWith"
      description: "Remove `@RunWith` annotations on Spring tests."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/unnecessaryspringrunwith"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_0:
      name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_0"
      description: "Migrate Spring Boot 1.x applications to the latest Spring Boot\
        \ 2.0 release. This recipe will modify an application's build files, make\
        \ changes to deprecated/preferred APIs, and migrate configuration settings\
        \ that have changes between versions. This recipe will also chain additional\
        \ framework migrations (Spring Framework, Spring Data, etc) that are required\
        \ as part of the migration to Spring Boot 2.0."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/upgradespringboot_2_0"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_1:
      name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_1"
      description: "Migrate applications to the latest Spring Boot 2.1 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions.\
        \ This recipe will also chain additional framework migrations (Spring Framework,\
        \ Spring Data, etc) that are required as part of the migration to Spring Boot\
        \ 2.1."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/upgradespringboot_2_1"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_2:
      name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_2"
      description: "Migrate applications to the latest Spring Boot 2.2 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions.\
        \ This recipe will also chain additional framework migrations (Spring Framework,\
        \ Spring Data, etc) that are required as part of the migration to Spring Boot\
        \ 2.2."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/upgradespringboot_2_2"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_3:
      name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_3"
      description: "Migrate applications to the latest Spring Boot 2.3 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions.\
        \ This recipe will also chain additional framework migrations (Spring Framework,\
        \ Spring Data, etc) that are required as part of the migration to Spring Boot\
        \ 2.3."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/upgradespringboot_2_3"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_4:
      name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_4"
      description: "Migrate applications to the latest Spring Boot 2.4 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions.\
        \ This recipe will also chain additional framework migrations (Spring Framework,\
        \ Spring Data, etc) that are required as part of the migration to Spring Boot\
        \ 2.4."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/upgradespringboot_2_4"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_5:
      name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_5"
      description: "Upgrade to Spring Boot 2.5 from any prior 2.x version."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/upgradespringboot_2_5"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_6:
      name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_6"
      description: "Migrate applications to the latest Spring Boot 2.6 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions.\
        \ This recipe will also chain additional framework migrations (Spring Framework,\
        \ Spring Data, etc) that are required as part of the migration to Spring Boot\
        \ 2.6."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/upgradespringboot_2_6"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_7:
      name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_7"
      description: "Upgrade to Spring Boot 2.7."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/upgradespringboot_2_7"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.search.CustomizingJooqDefaultConfiguration:
      name: "org.openrewrite.java.spring.boot2.search.CustomizingJooqDefaultConfiguration"
      description: "To streamline the customization of jOOQ’s `DefaultConfiguration`,\
        \ a bean that implements `DefaultConfigurationCustomizer` can now be defined.\
        \ This customizer callback should be used in favour of defining one or more\
        \ `*Provider` beans, the support for which has now been deprecated. See [Spring\
        \ Boot 2.5 jOOQ customization](https://docs.spring.io/spring-boot/docs/2.5.x/reference/htmlsingle/#features.sql.jooq.customizing)."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/search/customizingjooqdefaultconfiguration"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.search.FindUpgradeRequirementsSpringBoot_2_5:
      name: "org.openrewrite.java.spring.boot2.search.FindUpgradeRequirementsSpringBoot_2_5"
      description: "Looks for a series of patterns that have not yet had auto-remediation\
        \ recipes developed for."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/search/findupgraderequirementsspringboot_2_5"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.search.IntegrationSchedulerPoolRecipe:
      name: "org.openrewrite.java.spring.boot2.search.IntegrationSchedulerPoolRecipe"
      description: "Spring Integration now reuses an available `TaskScheduler` rather\
        \ than configuring its own. In a typical application setup relying on the\
        \ auto-configuration, this means that Spring Integration uses the auto-configured\
        \ task scheduler that has a pool size of 1. To restore Spring Integration’\
        s default of 10 threads, use the `spring.task.scheduling.pool.size` property."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/search/integrationschedulerpoolrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.search.LoggingShutdownHooks:
      name: "org.openrewrite.java.spring.boot2.search.LoggingShutdownHooks"
      description: "Spring Boot registers a logging shutdown hook by default for JAR-based\
        \ applications to ensure that logging resources are released when the JVM\
        \ exits. If your application is deployed as a WAR then the shutdown hook is\
        \ not registered since the servlet container usually handles logging concerns.\n\
        \nMost applications will want the shutdown hook. However, if your application\
        \ has complex context hierarchies, then you may need to disable it. You can\
        \ use the `logging.register-shutdown-hook` property to do that."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/search/loggingshutdownhooks"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot2.search.MessagesInTheDefaultErrorView:
      name: "org.openrewrite.java.spring.boot2.search.MessagesInTheDefaultErrorView"
      description: "As of Spring Boot 2.5 the `message` attribute in the default error\
        \ view was removed rather than blanked when it is not shown.\n`spring-webmvc`\
        \ or `spring-webflux` projects that parse the error response JSON may need\
        \ to deal with the missing item\n([release notes](https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.5-Release-Notes#messages-in-the-default-error-view)).\n\
        You can still use the `server.error.include-message` property if you want\
        \ messages to be included.\n"
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot2/search/messagesinthedefaulterrorview"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.ActuatorEndpointSanitization:
      name: "org.openrewrite.java.spring.boot3.ActuatorEndpointSanitization"
      description: "Spring Boot 3.0 removed the key-based sanitization mechanism used\
        \ in Spring Boot 2.x in favor of a unified approach. See https://github.com/openrewrite/rewrite-spring/issues/228"
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/actuatorendpointsanitization"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.AddRouteTrailingSlash:
      name: "org.openrewrite.java.spring.boot3.AddRouteTrailingSlash"
      description: "This is part of Spring MVC and WebFlux URL Matching Changes, as\
        \ of Spring Framework 6.0, the trailing slash matching configuration option\
        \ has been deprecated and its default value set to false. This means that\
        \ previously, a controller `@GetMapping(\"/some/greeting\")` would match both\
        \ `GET /some/greeting` and `GET /some/greeting/`, but it doesn't match `GET\
        \ /some/greeting/` anymore by default and will result in an HTTP 404 error.\
        \ This recipe is to add declaration of additional route explicitly on the\
        \ controller handler (like `@GetMapping(\"/some/greeting\", \"/some/greeting/\"\
        )`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/addroutetrailingslash"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.AddSetUseTrailingSlashMatch:
      name: "org.openrewrite.java.spring.boot3.AddSetUseTrailingSlashMatch"
      description: "This is part of Spring MVC and WebFlux URL Matching Changes, as\
        \ of Spring Framework 6.0, the trailing slash matching configuration option\
        \ has been deprecated and its default value set to false. This means that\
        \ previously, a controller `@GetMapping(\"/some/greeting\")` would match both\
        \ `GET /some/greeting` and `GET /some/greeting/`, but it doesn't match `GET\
        \ /some/greeting/` anymore by default and will result in an HTTP 404 error.\
        \ This recipe is change the default with the global Spring MVC or Webflux\
        \ configuration."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/addsetusetrailingslashmatch"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.ConfigurationOverEnableSecurity:
      name: "org.openrewrite.java.spring.boot3.ConfigurationOverEnableSecurity"
      description: "Prior to Spring Security 6, `@EnableXXXSecurity` implicitly had\
        \ `@Configuration`. `Configuration` was removed from the definitions of the\
        \ `@EnableSecurity` definitions in Spring Security 6. Consequently classes\
        \ annotated with `@EnableXXXSecurity` coming from pre-Boot 3 should have `@Configuration`\
        \ annotation added."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/configurationoverenablesecurity"
      options:
      - name: "forceAddConfiguration"
        type: "boolean"
        required: true
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.DowngradeServletApiWhenUsingJetty:
      name: "org.openrewrite.java.spring.boot3.DowngradeServletApiWhenUsingJetty"
      description: "Jetty does not yet support Servlet 6.0. This recipe will detect\
        \ the presence of the `spring-boot-starter-jetty` as a first-order dependency\
        \ and will add the maven property `jakarta-servlet.version` setting it's value\
        \ to `5.0.0`. This will downgrade the `jakarta-servlet` artifact if the pom's\
        \ parent extends from the spring-boot-parent."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/downgradeservletapiwhenusingjetty"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.EnableVirtualThreads:
      name: "org.openrewrite.java.spring.boot3.EnableVirtualThreads"
      description: "Set `spring.threads.virtual.enabled` to `true` in `application.properties`\
        \ or `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/enablevirtualthreads"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.MaintainTrailingSlashURLMappings:
      name: "org.openrewrite.java.spring.boot3.MaintainTrailingSlashURLMappings"
      description: "This is part of Spring MVC and WebFlux URL Matching Changes, as\
        \ of Spring Framework 6.0, the trailing slash matching configuration option\
        \ has been deprecated and its default value set to false. This means that\
        \ previously, a controller `@GetMapping(\"/some/greeting\")` would match both\
        \ `GET /some/greeting` and `GET /some/greeting/`, but it doesn't match `GET\
        \ /some/greeting/` anymore by default and will result in an HTTP 404 error.\
        \ This recipe is to maintain trailing slash in all HTTP url mappings."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/maintaintrailingslashurlmappings"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.MigrateDropWizardDependencies:
      name: "org.openrewrite.java.spring.boot3.MigrateDropWizardDependencies"
      description: "Migrate dropWizard dependencies to the new artifactId, since these\
        \ are changed with Spring Boot 3."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/migratedropwizarddependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.MigrateMaxHttpHeaderSize:
      name: "org.openrewrite.java.spring.boot3.MigrateMaxHttpHeaderSize"
      description: "Previously, the server.max-http-header-size was treated inconsistently\
        \ across the four supported embedded web servers. When using Jetty, Netty,\
        \ or Undertow it would configure the max HTTP request header size. When using\
        \ Tomcat it would configure the max HTTP request and response header sizes.\
        \ The renamed property is used to configure the http request header size in\
        \ Spring Boot 3.0. **To limit the max header size of an HTTP response on Tomcat\
        \ or Jetty (the only two servers that support such a setting), use a `WebServerFactoryCustomizer`**."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/migratemaxhttpheadersize"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.MigrateSapCfJavaLoggingSupport:
      name: "org.openrewrite.java.spring.boot3.MigrateSapCfJavaLoggingSupport"
      description: "Migrate SAP cloud foundry logging support from `cf-java-logging-support-servlet`\
        \ to `cf-java-logging-support-servlet-jakarta`, to use Jakarta with Spring\
        \ Boot 3."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/migratesapcfjavaloggingsupport"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.MigrateThymeleafDependencies:
      name: "org.openrewrite.java.spring.boot3.MigrateThymeleafDependencies"
      description: "Migrate thymeleaf dependencies to the new artifactId, since these\
        \ are changed with Spring Boot 3."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/migratethymeleafdependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.MigrateWebMvcTagsToObservationConvention:
      name: "org.openrewrite.java.spring.boot3.MigrateWebMvcTagsToObservationConvention"
      description: "Migrate `WebMvcTagsProvider` to `DefaultServerRequestObservationConvention`\
        \ as part of Spring Boot 3.2 removals."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/migratewebmvctagstoobservationconvention"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.PreciseBeanType:
      name: "org.openrewrite.java.spring.boot3.PreciseBeanType"
      description: "Replace Bean method return types with concrete types being returned.\
        \ This is required for Spring 6 AOT."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/precisebeantype"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.RelocateLauncherClasses:
      name: "org.openrewrite.java.spring.boot3.RelocateLauncherClasses"
      description: "Relocate classes that have been moved to different packages in\
        \ Spring Boot 3.2."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/relocatelauncherclasses"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.RemoveConstructorBindingAnnotation:
      name: "org.openrewrite.java.spring.boot3.RemoveConstructorBindingAnnotation"
      description: "As of Boot 3.0 `@ConstructorBinding` is no longer needed at the\
        \ type level on `@ConfigurationProperties` classes and should be removed."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/removeconstructorbindingannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.RemoveEnableBatchProcessing:
      name: "org.openrewrite.java.spring.boot3.RemoveEnableBatchProcessing"
      description: "Add or remove the `@EnableBatchProcessing` annotation from a Spring\
        \ Boot application."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/removeenablebatchprocessing"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.RemoveSolrAutoConfigurationExclude:
      name: "org.openrewrite.java.spring.boot3.RemoveSolrAutoConfigurationExclude"
      description: "`SolrAutoConfiguration` was removed in Spring Boot 3; remove references\
        \ to it from exclusions on annotations."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/removesolrautoconfigurationexclude"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.ReplaceMockBeanAndSpyBean:
      name: "org.openrewrite.java.spring.boot3.ReplaceMockBeanAndSpyBean"
      description: "Replaces `@MockBean` and `@SpyBean` annotations with `@MockitoBean`\
        \ and `@MockitoSpyBean`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/replacemockbeanandspybean"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.ReplaceRestTemplateBuilderMethods:
      name: "org.openrewrite.java.spring.boot3.ReplaceRestTemplateBuilderMethods"
      description: "Replaces `setConnectTimeout`, `setReadTimeout`, and `setSslBundle`\
        \ method invocations with `connectTimeout`, `readTimeout`, and `sslBundle`\
        \ respectively."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/replaceresttemplatebuildermethods"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.SpringBoot3BestPractices:
      name: "org.openrewrite.java.spring.boot3.SpringBoot3BestPractices"
      description: "Applies best practices to Spring Boot 3 applications."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/springboot3bestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.SpringBoot3BestPracticesOnly:
      name: "org.openrewrite.java.spring.boot3.SpringBoot3BestPracticesOnly"
      description: "Applies best practices to Spring Boot 3 applications, without\
        \ chaining in upgrades to Spring Boot."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/springboot3bestpracticesonly"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.SpringBootProperties_3_0:
      name: "org.openrewrite.java.spring.boot3.SpringBootProperties_3_0"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/springbootproperties_3_0"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.SpringBootProperties_3_1:
      name: "org.openrewrite.java.spring.boot3.SpringBootProperties_3_1"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/springbootproperties_3_1"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.SpringBootProperties_3_2:
      name: "org.openrewrite.java.spring.boot3.SpringBootProperties_3_2"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/springbootproperties_3_2"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.SpringBootProperties_3_3:
      name: "org.openrewrite.java.spring.boot3.SpringBootProperties_3_3"
      description: "Migrate properties found in `application.properties` and `application.yml`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/springbootproperties_3_3"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_0:
      name: "org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_0"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 2.0."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_2_0"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_1:
      name: "org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_1"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 2.1."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_2_1"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_2:
      name: "org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_2"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 2.2."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_2_2"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_3:
      name: "org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_3"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 2.3."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_2_3"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_4:
      name: "org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_4"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 2.4."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_2_4"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_5:
      name: "org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_5"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 2.5."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_2_5"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_6:
      name: "org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_6"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 2.6."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_2_6"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_7:
      name: "org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_2_7"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 2.7."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_2_7"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_3_0:
      name: "org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_3_0"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 3.0."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_3_0"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_3_2:
      name: "org.openrewrite.java.spring.boot3.UpgradeMyBatisToSpringBoot_3_2"
      description: "Upgrade MyBatis Spring modules to a version corresponding to Spring\
        \ Boot 3.2."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgrademybatistospringboot_3_2"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_0:
      name: "org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_0"
      description: "Migrate applications to the latest Spring Boot 3.0 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions.\
        \ This recipe will also chain additional framework migrations (Spring Framework,\
        \ Spring Data, etc) that are required as part of the migration to Spring Boot\
        \ 2.7."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgradespringboot_3_0"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1:
      name: "org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1"
      description: "Migrate applications to the latest Spring Boot 3.1 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions.\
        \ This recipe will also chain additional framework migrations (Spring Framework,\
        \ Spring Data, etc) that are required as part of the migration to Spring Boot\
        \ 3.0."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgradespringboot_3_1"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_2:
      name: "org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_2"
      description: "Migrate applications to the latest Spring Boot 3.2 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions.\
        \ This recipe will also chain additional framework migrations (Spring Framework,\
        \ Spring Data, etc) that are required as part of the migration to Spring Boot\
        \ 3.1."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgradespringboot_3_2"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_3:
      name: "org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_3"
      description: "Migrate applications to the latest Spring Boot 3.3 release. This\
        \ recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions.\
        \ This recipe will also chain additional framework migrations (Spring Framework,\
        \ Spring Data, etc) that are required as part of the migration to Spring Boot\
        \ 3.2."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/boot3/upgradespringboot_3_3"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.cloud2022.AddLoggingPatternLevelForSleuth:
      name: "org.openrewrite.java.spring.cloud2022.AddLoggingPatternLevelForSleuth"
      description: "Add `logging.pattern.level` for traceId and spanId which was previously\
        \ set by default, if not already set."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/cloud2022/addloggingpatternlevelforsleuth"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.cloud2022.DependencyUpgrades:
      name: "org.openrewrite.java.spring.cloud2022.DependencyUpgrades"
      description: "Upgrade dependencies to Spring Cloud 2022 from prior 2021.x version."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/cloud2022/dependencyupgrades"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.cloud2022.MigrateCloudSleuthToMicrometerTracing:
      name: "org.openrewrite.java.spring.cloud2022.MigrateCloudSleuthToMicrometerTracing"
      description: "Spring Cloud Sleuth has been discontinued and only compatible\
        \ with Spring Boot 2.x."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/cloud2022/migratecloudsleuthtomicrometertracing"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.cloud2022.MigrateRequestMappingOnFeignClient:
      name: "org.openrewrite.java.spring.cloud2022.MigrateRequestMappingOnFeignClient"
      description: "Support for `@RequestMapping` over a `FeignClient` interface was\
        \ removed in Spring Cloud OpenFeign 2.2.10.RELEASE."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/cloud2022/migraterequestmappingonfeignclient"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.cloud2022.UpgradeSpringCloud_2022:
      name: "org.openrewrite.java.spring.cloud2022.UpgradeSpringCloud_2022"
      description: "Migrate applications to the latest Spring Cloud 2022 (Kilburn)\
        \ release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/cloud2022/upgradespringcloud_2022"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.cloud2023.DependencyUpgrades:
      name: "org.openrewrite.java.spring.cloud2023.DependencyUpgrades"
      description: "Upgrade dependencies to Spring Cloud 2023 from prior 2022.x version."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/cloud2023/dependencyupgrades"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.cloud2023.UpgradeSpringCloud_2023:
      name: "org.openrewrite.java.spring.cloud2023.UpgradeSpringCloud_2023"
      description: "Migrate applications to the latest Spring Cloud 2023 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/cloud2023/upgradespringcloud_2023"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.MigrateAuditorAwareToOptional:
      name: "org.openrewrite.java.spring.data.MigrateAuditorAwareToOptional"
      description: "As of Spring boot 2.0, the `AuditorAware.getCurrentAuditor` method\
        \ should return an `Optional`. This recipe will update the implementations\
        \ of this method to return an `Optional` using the `ofNullable`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/migrateauditorawaretooptional"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.MigrateJpaSort:
      name: "org.openrewrite.java.spring.data.MigrateJpaSort"
      description: "Equivalent constructors in `JpaSort` were deprecated in Spring\
        \ Data 2.3."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/migratejpasort"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.MigrateQuerydslJpaRepository:
      name: "org.openrewrite.java.spring.data.MigrateQuerydslJpaRepository"
      description: "`QuerydslJpaRepository<T, ID extends Serializable>` was deprecated\
        \ in Spring Data 2.1."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/migratequerydsljparepository"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.RefactorSimpleMongoDbFactory:
      name: "org.openrewrite.java.spring.data.RefactorSimpleMongoDbFactory"
      description: "Replace usage of deprecated `new SimpleMongoDbFactory(new MongoClientURI(String))`\
        \ with `new SimpleMongoClientDbFactory(String)`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/refactorsimplemongodbfactory"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.UpgradeSpringData_2_3:
      name: "org.openrewrite.java.spring.data.UpgradeSpringData_2_3"
      description: "Migrate applications to the latest Spring Data 2.3 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/upgradespringdata_2_3"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.UpgradeSpringData_2_5:
      name: "org.openrewrite.java.spring.data.UpgradeSpringData_2_5"
      description: "Migrate applications to the latest Spring Data 2.5 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/upgradespringdata_2_5"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.UpgradeSpringData_2_7:
      name: "org.openrewrite.java.spring.data.UpgradeSpringData_2_7"
      description: "Migrate applications to the latest Spring Data 2.7 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/upgradespringdata_2_7"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.UseJpaRepositoryDeleteAllInBatch:
      name: "org.openrewrite.java.spring.data.UseJpaRepositoryDeleteAllInBatch"
      description: "`JpaRepository#deleteInBatch(Iterable)` was deprecated in 2.5."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/usejparepositorydeleteallinbatch"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.UseJpaRepositoryGetById:
      name: "org.openrewrite.java.spring.data.UseJpaRepositoryGetById"
      description: "`JpaRepository#getOne(ID)` was deprecated in 2.5."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/usejparepositorygetbyid"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.UseJpaRepositoryGetReferenceById:
      name: "org.openrewrite.java.spring.data.UseJpaRepositoryGetReferenceById"
      description: "`JpaRepository#getOne(ID)` was deprecated in 2.5 and `JpaRepository#getById(ID)`\
        \ was deprecated in 2.7."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/usejparepositorygetreferencebyid"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.data.UseTlsJdbcConnectionString:
      name: "org.openrewrite.java.spring.data.UseTlsJdbcConnectionString"
      description: "Increasingly, for compliance reasons (e.g. [NACHA](https://www.nacha.org/sites/default/files/2022-06/End_User_Briefing_Supplementing_Data_Security_UPDATED_FINAL.pdf)),\
        \ JDBC connection strings should be TLS-enabled. This recipe will update the\
        \ port and optionally add a connection attribute to indicate that the connection\
        \ is TLS-enabled."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/data/usetlsjdbcconnectionstring"
      options:
      - name: "attribute"
        type: "String"
        required: true
      - name: "oldPort"
        type: "Integer"
        required: true
      - name: "port"
        type: "Integer"
        required: true
      - name: "propertyKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.BeanMethodReturnNull:
      name: "org.openrewrite.java.spring.framework.BeanMethodReturnNull"
      description: "Make `@Bean` methods return `Object` instead of `void`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/beanmethodreturnnull"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.BeanMethodsNotPublic:
      name: "org.openrewrite.java.spring.framework.BeanMethodsNotPublic"
      description: "Remove public modifier from `@Bean` methods. They no longer have\
        \ to be public visibility to be usable by Spring."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/beanmethodsnotpublic"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.EnvironmentAcceptsProfiles:
      name: "org.openrewrite.java.spring.framework.EnvironmentAcceptsProfiles"
      description: "`Environment#acceptsProfiles(String...)` was deprecated in Spring\
        \ Framework 5.1."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/environmentacceptsprofiles"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.HttpComponentsClientHttpRequestFactoryReadTimeout:
      name: "org.openrewrite.java.spring.framework.HttpComponentsClientHttpRequestFactoryReadTimeout"
      description: "`setReadTimeout(..)` was removed in Spring Framework 6.1."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/httpcomponentsclienthttprequestfactoryreadtimeout"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.JdbcTemplateObjectArrayArgToVarArgs:
      name: "org.openrewrite.java.spring.framework.JdbcTemplateObjectArrayArgToVarArgs"
      description: "`JdbcTemplate` signatures with `Object[]` arguments are deprecated,\
        \ in favor of their existing varargs equivalents."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/jdbctemplateobjectarrayargtovarargs"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.MigrateHandlerInterceptor:
      name: "org.openrewrite.java.spring.framework.MigrateHandlerInterceptor"
      description: "Deprecated as of 5.3 in favor of implementing `HandlerInterceptor`\
        \ and/or `AsyncHandlerInterceptor`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/migratehandlerinterceptor"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.MigrateInstantiationAwareBeanPostProcessorAdapter:
      name: "org.openrewrite.java.spring.framework.MigrateInstantiationAwareBeanPostProcessorAdapter"
      description: "As of Spring-Framework 5.3 `InstantiationAwareBeanPostProcessorAdapter`\
        \ is deprecated in favor of the existing default methods in `SmartInstantiationAwareBeanPostProcessor`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/migrateinstantiationawarebeanpostprocessoradapter"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.MigrateResponseEntityExceptionHandlerHttpStatusToHttpStatusCode:
      name: "org.openrewrite.java.spring.framework.MigrateResponseEntityExceptionHandlerHttpStatusToHttpStatusCode"
      description: "With Spring 6 `HttpStatus` was replaced by `HttpStatusCode` in\
        \ most method signatures in the `ResponseEntityExceptionHandler`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/migrateresponseentityexceptionhandlerhttpstatustohttpstatuscode"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.MigrateResponseStatusException:
      name: "org.openrewrite.java.spring.framework.MigrateResponseStatusException"
      description: "Migrate Spring Framework 5.3's `ResponseStatusException` method\
        \ `getRawStatusCode()` to Spring Framework 6's `getStatusCode().value()` and\
        \ `ResponseStatusException` method `getStatus()` to Spring Framework 6's `getStatusCode()`\
        \ ."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/migrateresponsestatusexception"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.MigrateResponseStatusExceptionGetRawStatusCodeMethod:
      name: "org.openrewrite.java.spring.framework.MigrateResponseStatusExceptionGetRawStatusCodeMethod"
      description: "Migrate Spring Framework 5.3's `ResponseStatusException` method\
        \ `getRawStatusCode()` to Spring Framework 6's `getStatusCode().value()`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/migrateresponsestatusexceptiongetrawstatuscodemethod"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.MigrateResponseStatusExceptionGetStatusCodeMethod:
      name: "org.openrewrite.java.spring.framework.MigrateResponseStatusExceptionGetStatusCodeMethod"
      description: "Migrate Spring Framework 5.3's `ResponseStatusException` method\
        \ `getStatus()` to Spring Framework 6's `getStatusCode()`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/migrateresponsestatusexceptiongetstatuscodemethod"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.MigrateSpringAssert:
      name: "org.openrewrite.java.spring.framework.MigrateSpringAssert"
      description: "Assert methods without a message argument have been removed in\
        \ Spring Framework 6.0."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/migratespringassert"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.MigrateUtf8MediaTypes:
      name: "org.openrewrite.java.spring.framework.MigrateUtf8MediaTypes"
      description: "Spring Web `MediaType#APPLICATION_JSON_UTF8` and `MediaType#APPLICATION_PROBLEM_JSON_UTF8`\
        \ were deprecated in 5.2."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/migrateutf8mediatypes"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.MigrateWebMvcConfigurerAdapter:
      name: "org.openrewrite.java.spring.framework.MigrateWebMvcConfigurerAdapter"
      description: "As of 5.0 `WebMvcConfigurer` has default methods (made possible\
        \ by a Java 8 baseline) and can be implemented directly without the need for\
        \ this adapter."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/migratewebmvcconfigureradapter"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_0:
      name: "org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_0"
      description: "Migrate applications to the latest Spring Framework 5.0 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/upgradespringframework_5_0"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_1:
      name: "org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_1"
      description: "Migrate applications to the latest Spring Framework 5.1 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/upgradespringframework_5_1"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_2:
      name: "org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_2"
      description: "Migrate applications to the latest Spring Framework 5.2 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/upgradespringframework_5_2"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_3:
      name: "org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_3"
      description: "Migrate applications to the latest Spring Framework 5.3 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/upgradespringframework_5_3"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.UpgradeSpringFramework_6_0:
      name: "org.openrewrite.java.spring.framework.UpgradeSpringFramework_6_0"
      description: "Migrate applications to the latest Spring Framework 6.0 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/upgradespringframework_6_0"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.UpgradeSpringFramework_6_1:
      name: "org.openrewrite.java.spring.framework.UpgradeSpringFramework_6_1"
      description: "Migrate applications to the latest Spring Framework 6.1 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/upgradespringframework_6_1"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.framework.UseObjectUtilsIsEmpty:
      name: "org.openrewrite.java.spring.framework.UseObjectUtilsIsEmpty"
      description: "`StringUtils#isEmpty(Object)` was deprecated in 5.3."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/framework/useobjectutilsisempty"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.http.ReplaceStringLiteralsWithHttpHeadersConstants:
      name: "org.openrewrite.java.spring.http.ReplaceStringLiteralsWithHttpHeadersConstants"
      description: "Replace String literals with `org.springframework.http.HttpHeaders`\
        \ constants."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/http/replacestringliteralswithhttpheadersconstants"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.http.ReplaceStringLiteralsWithMediaTypeConstants:
      name: "org.openrewrite.java.spring.http.ReplaceStringLiteralsWithMediaTypeConstants"
      description: "Replace String literals with `org.springframework.http.MediaType`\
        \ constants."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/http/replacestringliteralswithmediatypeconstants"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.http.SimplifyMediaTypeParseCalls:
      name: "org.openrewrite.java.spring.http.SimplifyMediaTypeParseCalls"
      description: "Replaces `MediaType.parseMediaType(\"application/json\")` and\
        \ `MediaType.valueOf(\"application/json\")` with `MediaType.APPLICATION_JSON`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/http/simplifymediatypeparsecalls"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.http.SimplifyWebTestClientCalls:
      name: "org.openrewrite.java.spring.http.SimplifyWebTestClientCalls"
      description: "Simplifies various types of WebTestClient expressions to improve\
        \ code readability."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/http/simplifywebtestclientcalls"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.http.SpringWebDependency:
      name: "org.openrewrite.java.spring.http.SpringWebDependency"
      description: "Find compile scoped Spring Web dependency for Maven and Gradle,\
        \ both direct and transitive."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/http/springwebdependency"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.kafka.KafkaOperationsSendReturnType:
      name: "org.openrewrite.java.spring.kafka.KafkaOperationsSendReturnType"
      description: "Send operations used to return a `ListenableFuture` but as of\
        \ 3.0 return a `CompletableFuture`. Adjust the usage to use `CompletableFuture`\
        \ instead."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/kafka/kafkaoperationssendreturntype"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.kafka.KafkaTestUtilsDuration:
      name: "org.openrewrite.java.spring.kafka.KafkaTestUtilsDuration"
      description: "Replace `KafkaTestUtils` methods that take a `long` argument with\
        \ methods that take a `Duration`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/kafka/kafkatestutilsduration"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.kafka.RemoveUsingCompletableFuture:
      name: "org.openrewrite.java.spring.kafka.RemoveUsingCompletableFuture"
      description: "Remove the `KafkaOperations.usingCompletableFuture()` bridge during\
        \ Spring Kafka 2.9 to 3.0 migration."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/kafka/removeusingcompletablefuture"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.kafka.UpgradeSpringKafka_3_0:
      name: "org.openrewrite.java.spring.kafka.UpgradeSpringKafka_3_0"
      description: "Migrate applications to the latest Spring Kafka 3.0 release."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/kafka/upgradespringkafka_3_0"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.search.FindApiCalls:
      name: "org.openrewrite.java.spring.search.FindApiCalls"
      description: "Find outbound HTTP API calls made via Spring's `RestTemplate`\
        \ class."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/search/findapicalls"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.search.FindApiEndpoints:
      name: "org.openrewrite.java.spring.search.FindApiEndpoints"
      description: "Find all HTTP API endpoints exposed by Spring applications. More\
        \ specifically, this marks method declarations annotated with `@RequestMapping`,\
        \ `@GetMapping`, `@PostMapping`, `@PutMapping`, `@DeleteMapping`, and `@PatchMapping`\
        \ as search results."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/search/findapiendpoints"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.search.FindSpringComponents:
      name: "org.openrewrite.java.spring.search.FindSpringComponents"
      description: "Find Spring components, including controllers, services, repositories,\
        \ return types of `@Bean` annotated methods, etc."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/search/findspringcomponents"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.AuthorizeHttpRequests:
      name: "org.openrewrite.java.spring.security5.AuthorizeHttpRequests"
      description: "Replace `HttpSecurity.authorizeRequests(...)` deprecated in Spring\
        \ Security 6 with `HttpSecurity.authorizeHttpRequests(...)` and all method\
        \ calls on the resultant object respectively. Replace deprecated `AbstractInterceptUrlConfigurer`\
        \ and its deprecated subclasses with `AuthorizeHttpRequestsConfigurer` and\
        \ its corresponding subclasses."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/authorizehttprequests"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.RenameNimbusdsJsonObjectPackageName:
      name: "org.openrewrite.java.spring.security5.RenameNimbusdsJsonObjectPackageName"
      description: "Rename the package name from `com.nimbusds.jose.shaded.json` to\
        \ `net.minidev.json`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/renamenimbusdsjsonobjectpackagename"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.ReplaceGlobalMethodSecurityWithMethodSecurity:
      name: "org.openrewrite.java.spring.security5.ReplaceGlobalMethodSecurityWithMethodSecurity"
      description: "`@EnableGlobalMethodSecurity` and `<global-method-security>` are\
        \ deprecated in favor of `@EnableMethodSecurity` and `<method-security>`,\
        \ respectively. The new annotation and XML element activate Spring’s pre-post\
        \ annotations by default and use AuthorizationManager internally."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/replaceglobalmethodsecuritywithmethodsecurity"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.ReplaceGlobalMethodSecurityWithMethodSecurityXml:
      name: "org.openrewrite.java.spring.security5.ReplaceGlobalMethodSecurityWithMethodSecurityXml"
      description: "`@EnableGlobalMethodSecurity` and `<global-method-security>` are\
        \ deprecated in favor of `@EnableMethodSecurity` and `<method-security>`,\
        \ respectively. The new annotation and XML element activate Spring’s pre-post\
        \ annotations by default and use AuthorizationManager internally."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/replaceglobalmethodsecuritywithmethodsecurityxml"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.UpdateArgon2PasswordEncoder:
      name: "org.openrewrite.java.spring.security5.UpdateArgon2PasswordEncoder"
      description: "In Spring Security 5.8 some `Argon2PasswordEncoder` constructors\
        \ have been deprecated in favor of factory methods. Refer to the [ Spring\
        \ Security migration docs](https://docs.spring.io/spring-security/reference/5.8/migration/index.html#_update_argon2passwordencoder)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/updateargon2passwordencoder"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.UpdatePbkdf2PasswordEncoder:
      name: "org.openrewrite.java.spring.security5.UpdatePbkdf2PasswordEncoder"
      description: "In Spring Security 5.8 some `Pbkdf2PasswordEncoder` constructors\
        \ have been deprecated in favor of factory methods. Refer to the [ Spring\
        \ Security migration docs](https://docs.spring.io/spring-security/reference/5.8/migration/index.html#_update_pbkdf2passwordencoder)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/updatepbkdf2passwordencoder"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.UpdateSCryptPasswordEncoder:
      name: "org.openrewrite.java.spring.security5.UpdateSCryptPasswordEncoder"
      description: "In Spring Security 5.8 some `SCryptPasswordEncoder` constructors\
        \ have been deprecated in favor of factory methods. Refer to the [ Spring\
        \ Security migration docs](https://docs.spring.io/spring-security/reference/5.8/migration/index.html#_update_scryptpasswordencoder)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/updatescryptpasswordencoder"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.UpgradeSpringSecurity_5_7:
      name: "org.openrewrite.java.spring.security5.UpgradeSpringSecurity_5_7"
      description: "Migrate applications to the latest Spring Security 5.7 release.\
        \ This recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/upgradespringsecurity_5_7"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.UpgradeSpringSecurity_5_8:
      name: "org.openrewrite.java.spring.security5.UpgradeSpringSecurity_5_8"
      description: "Migrate applications to the latest Spring Security 5.8 release.\
        \ This recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/upgradespringsecurity_5_8"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.UseNewRequestMatchers:
      name: "org.openrewrite.java.spring.security5.UseNewRequestMatchers"
      description: "In Spring Security 5.8, the `antMatchers`, `mvcMatchers`, and\
        \ `regexMatchers` methods were deprecated in favor of new `requestMatchers`\
        \ methods. Refer to the [Spring Security docs](https://docs.spring.io/spring-security/reference/5.8/migration/servlet/config.html#use-new-requestmatchers)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/usenewrequestmatchers"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.UseNewSecurityMatchers:
      name: "org.openrewrite.java.spring.security5.UseNewSecurityMatchers"
      description: "In Spring Security 5.8, the `HttpSecurity#antMatcher()`, `HttpSecurity#mvcMatcher()`,\
        \ and `HttpSecurity#regexMatcher()` methods were deprecated in favor of new\
        \ `HttpSecurity#securityMatcher()` method. Refer to the [Spring Security docs](https://docs.spring.io/spring-security/reference/5.8/migration/servlet/config.html#use-new-security-matchers)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/usenewsecuritymatchers"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.WebSecurityConfigurerAdapter:
      name: "org.openrewrite.java.spring.security5.WebSecurityConfigurerAdapter"
      description: "The Spring Security `WebSecurityConfigurerAdapter` was deprecated\
        \ 5.7, this recipe will transform `WebSecurityConfigurerAdapter` classes by\
        \ using a component based approach. Check out the [spring-security-without-the-websecurityconfigureradapter](https://spring.io/blog/2022/02/21/spring-security-without-the-websecurityconfigureradapter)\
        \ blog for more details."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/websecurityconfigureradapter"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security5.search.FindEncryptorsQueryableTextUses:
      name: "org.openrewrite.java.spring.security5.search.FindEncryptorsQueryableTextUses"
      description: "`Encryptors.queryableText()` is insecure and is removed in Spring\
        \ Security 6."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security5/search/findencryptorsqueryabletextuses"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.ApplyToWithLambdaDsl:
      name: "org.openrewrite.java.spring.security6.ApplyToWithLambdaDsl"
      description: "Converts `HttpSecurity::apply` chained call from Spring Security\
        \ pre 6.2.x into new lambda DSL style calls and removes `and()` methods."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/applytowithlambdadsl"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.PropagateAuthenticationServiceExceptions:
      name: "org.openrewrite.java.spring.security6.PropagateAuthenticationServiceExceptions"
      description: "Remove any calls matching `AuthenticationEntryPointFailureHandler.setRethrowAuthenticationServiceException(true)`.\
        \ See the corresponding [Sprint Security 6.0 migration step](https://docs.spring.io/spring-security/reference/6.0.0/migration/servlet/authentication.html#_propagate_authenticationserviceexceptions)\
        \ for details."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/propagateauthenticationserviceexceptions"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.RemoveFilterSecurityInterceptorOncePerRequest:
      name: "org.openrewrite.java.spring.security6.RemoveFilterSecurityInterceptorOncePerRequest"
      description: "In Spring Security 6.0, `<http>` defaults `authorizeRequests#filterSecurityInterceptorOncePerRequest`\
        \ to false. So, to complete migration, any defaults values can be removed."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/removefiltersecurityinterceptoronceperrequest"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.RemoveOauth2LoginConfig:
      name: "org.openrewrite.java.spring.security6.RemoveOauth2LoginConfig"
      description: "`oauth2Login()` is a Spring Security feature that allows users\
        \ to authenticate with an OAuth2 or OpenID Connect 1.0 provider. When a user\
        \ is authenticated using this feature, they are granted a set of authorities\
        \ that determines what actions they are allowed to perform within the application.\n\
        \nIn Spring Security 5, the default authority given to a user authenticated\
        \ with an OAuth2 or OpenID Connect 1.0 provider via `oauth2Login()` is `ROLE_USER`.\
        \ This means that the user is allowed to access the application's resources\
        \ as a regular user.\n\nHowever, in Spring Security 6, the default authority\
        \ given to a user authenticated with an OAuth2 provider is `OAUTH2_USER`,\
        \ and the default authority given to a user authenticated with an OpenID Connect\
        \ 1.0 provider is `OIDC_USER`. These authorities are more specific and allow\
        \ for better customization of the user's permissions within the application.\n\
        \nIf you are upgrading to Spring Security 6 and you have previously configured\
        \ a `GrantedAuthoritiesMapper` to handle the authorities of users authenticated\
        \ via `oauth2Login()`, you can remove it completely as the new default authorities\
        \ should be sufficient."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/removeoauth2loginconfig"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.RemoveUseAuthorizationManager:
      name: "org.openrewrite.java.spring.security6.RemoveUseAuthorizationManager"
      description: "In Spring Security 6, <websocket-message-broker> defaults use-authorization-manager\
        \ to true. So, the 'use-authorization-manager' attribute for message security\
        \ is no longer needed and can be removed."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/removeuseauthorizationmanager"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.RequireExplicitSavingOfSecurityContextRepository:
      name: "org.openrewrite.java.spring.security6.RequireExplicitSavingOfSecurityContextRepository"
      description: "Remove explicit `SecurityContextConfigurer.requireExplicitSave(true)`\
        \ opt-in as that is the new default in Spring Security 6. See the corresponding\
        \ [Sprint Security 6.0 migration step](https://docs.spring.io/spring-security/reference/6.0.0/migration/servlet/session-management.html#_require_explicit_saving_of_securitycontextrepository)\
        \ for details."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/requireexplicitsavingofsecuritycontextrepository"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.UpdateEnableReactiveMethodSecurity:
      name: "org.openrewrite.java.spring.security6.UpdateEnableReactiveMethodSecurity"
      description: "In Spring security 6.0, `@EnableReactiveMethodSecurity` defaults\
        \ `useAuthorizationManager` to true. So, to complete migration, `@EnableReactiveMethodSecurity`\
        \ remove the `useAuthorizationManager` attribute."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/updateenablereactivemethodsecurity"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.UpdateRequestCache:
      name: "org.openrewrite.java.spring.security6.UpdateRequestCache"
      description: "By default, Spring Security 5 queries the saved request on every\
        \ request, which means that in a typical setup, the HttpSession is queried\
        \ on every request to use the RequestCache. In Spring Security 6, the default\
        \ behavior has changed, and RequestCache will only be queried for a cached\
        \ request if the HTTP parameter \"continue\" is defined. To maintain the same\
        \ default behavior as Spring Security 5, either explicitly add the HTTP parameter\
        \ \"continue\" to every request or use NullRequestCache to override the default\
        \ behavior."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/updaterequestcache"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.UpgradeSpringSecurity_6_0:
      name: "org.openrewrite.java.spring.security6.UpgradeSpringSecurity_6_0"
      description: "Migrate applications to the latest Spring Security 6.0 release.\
        \ This recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/upgradespringsecurity_6_0"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.UpgradeSpringSecurity_6_1:
      name: "org.openrewrite.java.spring.security6.UpgradeSpringSecurity_6_1"
      description: "Migrate applications to the latest Spring Security 6.1 release.\
        \ This recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/upgradespringsecurity_6_1"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.UpgradeSpringSecurity_6_2:
      name: "org.openrewrite.java.spring.security6.UpgradeSpringSecurity_6_2"
      description: "Migrate applications to the latest Spring Security 6.2 release.\
        \ This recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/upgradespringsecurity_6_2"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.UpgradeSpringSecurity_6_3:
      name: "org.openrewrite.java.spring.security6.UpgradeSpringSecurity_6_3"
      description: "Migrate applications to the latest Spring Security 6.3 release.\
        \ This recipe will modify an application's build files, make changes to deprecated/preferred\
        \ APIs, and migrate configuration settings that have changes between versions."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/upgradespringsecurity_6_3"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.UseSha256InRememberMe:
      name: "org.openrewrite.java.spring.security6.UseSha256InRememberMe"
      description: "As of Spring Security 6.0 the SHA-256 algorithm is the default\
        \ for the encoding and matching algorithm used by `TokenBasedRememberMeServices`\
        \ and does thus no longer need to be explicitly configured. See the corresponding\
        \ [Sprint Security 6.0 migration step](https://docs.spring.io/spring-security/reference/6.0.0/migration/servlet/authentication.html#servlet-opt-in-sha256-rememberme)\
        \ for details."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/usesha256inrememberme"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.oauth2.client.OAuth2ClientLambdaDsl:
      name: "org.openrewrite.java.spring.security6.oauth2.client.OAuth2ClientLambdaDsl"
      description: "Converts `OAuth2ClientConfigurer` chained call from Spring Security\
        \ pre 5.2.x into new lambda DSL style calls and removes `and()` methods."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/oauth2/client/oauth2clientlambdadsl"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.oauth2.client.OAuth2LoginLambdaDsl:
      name: "org.openrewrite.java.spring.security6.oauth2.client.OAuth2LoginLambdaDsl"
      description: "Converts `OAuth2LoginConfigurer` chained call from Spring Security\
        \ pre 5.2.x into new lambda DSL style calls and removes `and()` methods."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/oauth2/client/oauth2loginlambdadsl"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.security6.oauth2.server.resource.OAuth2ResourceServerLambdaDsl:
      name: "org.openrewrite.java.spring.security6.oauth2.server.resource.OAuth2ResourceServerLambdaDsl"
      description: "Converts `OAuth2ResourceServerConfigurer` chained call from Spring\
        \ Security pre 5.2.x into new lambda DSL style calls and removes `and()` methods."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/security6/oauth2/server/resource/oauth2resourceserverlambdadsl"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.spring.test.SpringRulesToJUnitExtension:
      name: "org.openrewrite.java.spring.test.SpringRulesToJUnitExtension"
      description: "Replace JUnit 4's `SpringClassRule` and `SpringMethodRule` with\
        \ JUnit 5's `SpringExtension` or rely on an existing `@SpringBootTest`."
      docLink: "https://docs.openrewrite.org/recipes/java/spring/test/springrulestojunitextension"
      options: []
      isImperative: true
      artifactId: "rewrite-spring"
    org.openrewrite.java.springdoc.MigrateSpringdocCommon:
      name: "org.openrewrite.java.springdoc.MigrateSpringdocCommon"
      description: "Migrate from springdoc-openapi-common to springdoc-openapi-starter-common."
      docLink: "https://docs.openrewrite.org/recipes/java/springdoc/migratespringdoccommon"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.springdoc.ReplaceSpringFoxDependencies:
      name: "org.openrewrite.java.springdoc.ReplaceSpringFoxDependencies"
      description: "Replace SpringFox Dependencies."
      docLink: "https://docs.openrewrite.org/recipes/java/springdoc/replacespringfoxdependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.springdoc.SpringFoxToSpringDoc:
      name: "org.openrewrite.java.springdoc.SpringFoxToSpringDoc"
      description: "Migrate from SpringFox Swagger to SpringDoc and OpenAPI."
      docLink: "https://docs.openrewrite.org/recipes/java/springdoc/springfoxtospringdoc"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.springdoc.SwaggerToSpringDoc:
      name: "org.openrewrite.java.springdoc.SwaggerToSpringDoc"
      description: "Migrate from Swagger to SpringDoc and OpenAPI."
      docLink: "https://docs.openrewrite.org/recipes/java/springdoc/swaggertospringdoc"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.java.springdoc.UpgradeSpringDoc_2:
      name: "org.openrewrite.java.springdoc.UpgradeSpringDoc_2"
      description: "Upgrade to SpringDoc v2, as described in the [upgrade guide](https://springdoc.org/#migrating-from-springdoc-v1)."
      docLink: "https://docs.openrewrite.org/recipes/java/springdoc/upgradespringdoc_2"
      options: []
      isImperative: false
      artifactId: "rewrite-spring"
    org.openrewrite.maven.spring.UpgradeExplicitSpringBootDependencies:
      name: "org.openrewrite.maven.spring.UpgradeExplicitSpringBootDependencies"
      description: "Upgrades dependencies according to the specified version of spring\
        \ boot. Spring boot has many direct and transitive dependencies. When a module\
        \ has an explicit dependency on one of these it may also need to be upgraded\
        \ to match the version used by spring boot."
      docLink: "https://docs.openrewrite.org/recipes/maven/spring/upgradeexplicitspringbootdependencies"
      options:
      - name: "fromVersion"
        type: "String"
        required: true
      - name: "toVersion"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-spring"
rewrite-sql:
  artifactId: "rewrite-sql"
  version: "2.1.3"
  markdownRecipeDescriptors:
    org.openrewrite.sql.ChangeFunctionName:
      name: "org.openrewrite.sql.ChangeFunctionName"
      description: "When migrating between dialects, often one name can be substituted\
        \ for another. For example, Oracle's NVL function can be replaced with Postgres\
        \ COALESCE."
      docLink: "https://docs.openrewrite.org/recipes/sql/changefunctionname"
      options:
      - name: "newFunctionName"
        type: "String"
        required: true
      - name: "oldFunctionName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-sql"
    org.openrewrite.sql.FindSql:
      name: "org.openrewrite.sql.FindSql"
      description: "Find SQL in code (e.g. in string literals) and in resources like\
        \ those ending with `.sql`."
      docLink: "https://docs.openrewrite.org/recipes/sql/findsql"
      options: []
      isImperative: true
      artifactId: "rewrite-sql"
    org.openrewrite.sql.FormatSql:
      name: "org.openrewrite.sql.FormatSql"
      description: "Checks whether a text block may contain SQL, and if so, formats\
        \ the text accordingly."
      docLink: "https://docs.openrewrite.org/recipes/sql/formatsql"
      options:
      - name: "indent"
        type: "String"
        required: false
      - name: "maxColumnLength"
        type: "Integer"
        required: false
      - name: "sqlDialect"
        type: "String"
        required: false
      - name: "uppercase"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-sql"
    org.openrewrite.sql.search.FindFunction:
      name: "org.openrewrite.sql.search.FindFunction"
      description: "Find SQL functions by name."
      docLink: "https://docs.openrewrite.org/recipes/sql/search/findfunction"
      options:
      - name: "functionName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-sql"
rewrite-static-analysis:
  artifactId: "rewrite-static-analysis"
  version: "2.4.0"
  markdownRecipeDescriptors:
    org.openrewrite.staticanalysis.AbstractClassPublicConstructor:
      name: "org.openrewrite.staticanalysis.AbstractClassPublicConstructor"
      description: "Constructors of `abstract` classes can only be called in constructors\
        \ of their subclasses. Therefore the visibility of `public` constructors are\
        \ reduced to `protected`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/abstractclasspublicconstructor"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.AddSerialAnnotationToSerialVersionUID:
      name: "org.openrewrite.staticanalysis.AddSerialAnnotationToSerialVersionUID"
      description: "Annotation any `serialVersionUID` fields with `@Serial` to indicate\
        \ it's part of the serialization mechanism."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/addserialannotationtoserialversionuid"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.AddSerialVersionUidToSerializable:
      name: "org.openrewrite.staticanalysis.AddSerialVersionUidToSerializable"
      description: "A `serialVersionUID` field is strongly recommended in all `Serializable`\
        \ classes. If this is not defined on a `Serializable` class, the compiler\
        \ will generate this value. If a change is later made to the class, the generated\
        \ value will change and attempts to deserialize the class will fail."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/addserialversionuidtoserializable"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.AnnotateNullableMethods:
      name: "org.openrewrite.staticanalysis.AnnotateNullableMethods"
      description: "Add the `@org.jspecify.annotation.Nullable` to non-private methods\
        \ that may return `null`. This recipe scans for methods that do not already\
        \ have a `@Nullable` annotation and checks their return statements for potential\
        \ null values. It also identifies known methods from standard libraries that\
        \ may return null, such as methods from `Map`, `Queue`, `Deque`, `NavigableSet`,\
        \ and `Spliterator`. The return of streams, or lambdas are not taken into\
        \ account."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/annotatenullablemethods"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.AtomicPrimitiveEqualsUsesGet:
      name: "org.openrewrite.staticanalysis.AtomicPrimitiveEqualsUsesGet"
      description: "`AtomicBoolean#equals(Object)`, `AtomicInteger#equals(Object)`\
        \ and `AtomicLong#equals(Object)` are only equal to their instance. This recipe\
        \ converts `a.equals(b)` to `a.get() == b.get()`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/atomicprimitiveequalsusesget"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.AvoidBoxedBooleanExpressions:
      name: "org.openrewrite.staticanalysis.AvoidBoxedBooleanExpressions"
      description: "Under certain conditions the `java.lang.Boolean` type is used\
        \ as an expression, and it may throw a `NullPointerException` if the value\
        \ is null."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/avoidboxedbooleanexpressions"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.BigDecimalDoubleConstructorRecipe:
      name: "org.openrewrite.staticanalysis.BigDecimalDoubleConstructorRecipe"
      description: "Use of `new BigDecimal(double)` constructor can lead to loss of\
        \ precision. Use `BigDecimal.valueOf(double)` instead.\nFor example writing\
        \ `new BigDecimal(0.1)` does not create a `BigDecimal` which is exactly equal\
        \ to `0.1`, but it is equal to `0.1000000000000000055511151231257827021181583404541015625`.\
        \ This is because `0.1` cannot be represented exactly as a double (or, for\
        \ that matter, as a binary fraction of any finite length)."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/bigdecimaldoubleconstructorrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.BigDecimalRoundingConstantsToEnums:
      name: "org.openrewrite.staticanalysis.BigDecimalRoundingConstantsToEnums"
      description: "Convert `BigDecimal` rounding constants to the equivalent `RoundingMode`\
        \ enum."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/bigdecimalroundingconstantstoenums"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.BooleanChecksNotInverted:
      name: "org.openrewrite.staticanalysis.BooleanChecksNotInverted"
      description: "Ensures that boolean checks are not unnecessarily inverted. Also\
        \ fixes double negative boolean expressions."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/booleanchecksnotinverted"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.BufferedWriterCreationRecipes:
      name: "org.openrewrite.staticanalysis.BufferedWriterCreationRecipes"
      description: "The code `new BufferedWriter(new FileWriter(f))` creates a `BufferedWriter`\
        \ that does not close the underlying `FileWriter` when it is closed. This\
        \ can lead to file descriptor leaks as per [CWE-755](https://cwe.mitre.org/data/definitions/755.html).\
        \ Use `Files.newBufferedWriter` to create a `BufferedWriter` that closes the\
        \ underlying file descriptor when it is closed."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/bufferedwritercreationrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithFileAndBooleanArgumentsRecipe:
      name: "org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithFileAndBooleanArgumentsRecipe"
      description: "Convert `new BufferedWriter(new FileWriter(f, b))` to `Files.newBufferedWriter(f.toPath(),\
        \ b ? StandardOpenOption.APPEND : StandardOpenOption.CREATE)`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/bufferedwritercreationrecipesusdbufferedwriterfromnewfilewriterwithfileandbooleanargumentsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithFileArgumentRecipe:
      name: "org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithFileArgumentRecipe"
      description: "Convert `new BufferedWriter(new FileWriter(f))` to `Files.newBufferedWriter(f.toPath())`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/bufferedwritercreationrecipesusdbufferedwriterfromnewfilewriterwithfileargumentrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithStringAndBooleanArgumentsRecipe:
      name: "org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithStringAndBooleanArgumentsRecipe"
      description: "Convert `new BufferedWriter(new FileWriter(s, b))` to `Files.newBufferedWriter(new\
        \ java.io.File(s).toPath(), b ? StandardOpenOption.APPEND : StandardOpenOption.CREATE)`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/bufferedwritercreationrecipesusdbufferedwriterfromnewfilewriterwithstringandbooleanargumentsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithStringArgumentRecipe:
      name: "org.openrewrite.staticanalysis.BufferedWriterCreationRecipes$BufferedWriterFromNewFileWriterWithStringArgumentRecipe"
      description: "Convert `new BufferedWriter(new FileWriter(s))` to `Files.newBufferedWriter(new\
        \ java.io.File(s).toPath())`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/bufferedwritercreationrecipesusdbufferedwriterfromnewfilewriterwithstringargumentrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.CaseInsensitiveComparisonsDoNotChangeCase:
      name: "org.openrewrite.staticanalysis.CaseInsensitiveComparisonsDoNotChangeCase"
      description: "Remove `String#toLowerCase()` or `String#toUpperCase()` from `String#equalsIgnoreCase(..)`\
        \ comparisons."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/caseinsensitivecomparisonsdonotchangecase"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.CatchClauseOnlyRethrows:
      name: "org.openrewrite.staticanalysis.CatchClauseOnlyRethrows"
      description: "A `catch` clause that only rethrows the caught exception is unnecessary.\
        \ Letting the exception bubble up as normal achieves the same result with\
        \ less code."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/catchclauseonlyrethrows"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ChainStringBuilderAppendCalls:
      name: "org.openrewrite.staticanalysis.ChainStringBuilderAppendCalls"
      description: "String concatenation within calls to `StringBuilder.append()`\
        \ causes unnecessary memory allocation. Except for concatenations of String\
        \ literals, which are joined together at compile time. Replaces inefficient\
        \ concatenations with chained calls to `StringBuilder.append()`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/chainstringbuilderappendcalls"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.CodeCleanup:
      name: "org.openrewrite.staticanalysis.CodeCleanup"
      description: "Automatically cleanup code, e.g. remove unnecessary parentheses,\
        \ simplify expressions."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/codecleanup"
      options: []
      isImperative: false
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.CombineSemanticallyEqualCatchBlocks:
      name: "org.openrewrite.staticanalysis.CombineSemanticallyEqualCatchBlocks"
      description: "Combine catches in a try that contain semantically equivalent\
        \ blocks. No change will be made when a caught exception exists if combing\
        \ catches may change application behavior or type attribution is missing."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/combinesemanticallyequalcatchblocks"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.CommonDeclarationSiteTypeVariances:
      name: "org.openrewrite.staticanalysis.CommonDeclarationSiteTypeVariances"
      description: "When using a method parameter like `Function<IN, OUT>`, it should\
        \ rather be `Function<? super IN, ? extends OUT>`. This recipe checks for\
        \ method parameters of well-known types."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/commondeclarationsitetypevariances"
      options: []
      isImperative: false
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.CommonStaticAnalysis:
      name: "org.openrewrite.staticanalysis.CommonStaticAnalysis"
      description: "Resolve common static analysis issues (also known as SAST issues)."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/commonstaticanalysis"
      options: []
      isImperative: false
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.CompareEnumsWithEqualityOperator:
      name: "org.openrewrite.staticanalysis.CompareEnumsWithEqualityOperator"
      description: "Replaces `Enum equals(java.lang.Object)` with `Enum == java.lang.Object`.\
        \ An `!Enum equals(java.lang.Object)` will change to `!=`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/compareenumswithequalityoperator"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ControlFlowIndentation:
      name: "org.openrewrite.staticanalysis.ControlFlowIndentation"
      description: "Program flow control statements like `if`, `while`, and `for`\
        \ can omit curly braces when they apply to only a single statement. This recipe\
        \ ensures that any statements which follow that statement are correctly indented\
        \ to show they are not part of the flow control statement."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/controlflowindentation"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.CovariantEquals:
      name: "org.openrewrite.staticanalysis.CovariantEquals"
      description: "Checks that classes and records which define a covariant `equals()`\
        \ method also override method `equals(Object)`. Covariant `equals()` means\
        \ a method that is similar to `equals(Object)`, but with a covariant parameter\
        \ type (any subtype of `Object`)."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/covariantequals"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.DeclarationSiteTypeVariance:
      name: "org.openrewrite.staticanalysis.DeclarationSiteTypeVariance"
      description: "Currently, Java requires use-site type variance, so if someone\
        \ has `Function<IN, OUT>` method parameter, it should rather be `Function<?\
        \ super IN, ? extends OUT>`. Unfortunately, it is not easy to notice that\
        \ `? super` and `? extends` is missing, so this recipe adds it where that\
        \ would improve the situation."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/declarationsitetypevariance"
      options:
      - name: "excludeFinalClasses"
        type: "Boolean"
        required: false
      - name: "excludedBounds"
        type: "List"
        required: false
      - name: "variantTypes"
        type: "List"
        required: true
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.DefaultComesLast:
      name: "org.openrewrite.staticanalysis.DefaultComesLast"
      description: "Ensure the `default` case comes last after all the cases in a\
        \ switch statement."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/defaultcomeslast"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.EmptyBlock:
      name: "org.openrewrite.staticanalysis.EmptyBlock"
      description: "Remove empty blocks that effectively do nothing."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/emptyblock"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.EqualsAvoidsNull:
      name: "org.openrewrite.staticanalysis.EqualsAvoidsNull"
      description: "Checks that any combination of String literals is on the left\
        \ side of an `equals()` comparison. Also checks for String literals assigned\
        \ to some field (such as `someString.equals(anotherString = \"text\"))`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/equalsavoidsnull"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.EqualsToContentEquals:
      name: "org.openrewrite.staticanalysis.EqualsToContentEquals"
      description: "Use `String.contentEquals(CharSequence)` instead of `String.equals(CharSequence.toString())`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/equalstocontentequals"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ExplicitCharsetOnStringGetBytes:
      name: "org.openrewrite.staticanalysis.ExplicitCharsetOnStringGetBytes"
      description: "This makes the behavior of the code platform neutral. It will\
        \ not override any existing explicit encodings, even if they don't match the\
        \ default encoding option."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/explicitcharsetonstringgetbytes"
      options:
      - name: "encoding"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ExplicitInitialization:
      name: "org.openrewrite.staticanalysis.ExplicitInitialization"
      description: "Checks if any class or object member is explicitly initialized\
        \ to default for its type value:\n- `null` for object references\n- zero for\
        \ numeric types and `char`\n- and `false` for `boolean`\nRemoves explicit\
        \ initializations where they aren't necessary."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/explicitinitialization"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ExplicitLambdaArgumentTypes:
      name: "org.openrewrite.staticanalysis.ExplicitLambdaArgumentTypes"
      description: "Adds explicit types on lambda arguments, which are otherwise optional.\
        \ This can make the code clearer and easier to read. This does not add explicit\
        \ types on arguments when the lambda has one or two parameters and does not\
        \ have a block body, as things are considered more readable in those cases.\
        \ For example, `stream.map((a, b) -> a.length);` will not have explicit types\
        \ added."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/explicitlambdaargumenttypes"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ExternalizableHasNoArgsConstructor:
      name: "org.openrewrite.staticanalysis.ExternalizableHasNoArgsConstructor"
      description: "`Externalizable` classes handle both serialization and deserialization\
        \ and must have a no-args constructor for the deserialization process."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/externalizablehasnoargsconstructor"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.FallThrough:
      name: "org.openrewrite.staticanalysis.FallThrough"
      description: "Checks for fall-through in switch statements, adding `break` statements\
        \ in locations where a case contains Java code but does not have a `break`,\
        \ `return`, `throw`, or `continue` statement."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/fallthrough"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.FinalClass:
      name: "org.openrewrite.staticanalysis.FinalClass"
      description: "Adds the `final` modifier to classes that expose no public or\
        \ package-private constructors."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/finalclass"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.FinalizeLocalVariables:
      name: "org.openrewrite.staticanalysis.FinalizeLocalVariables"
      description: "Adds the `final` modifier keyword to local variables which are\
        \ not reassigned."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/finalizelocalvariables"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.FinalizeMethodArguments:
      name: "org.openrewrite.staticanalysis.FinalizeMethodArguments"
      description: "Adds the `final` modifier keyword to method parameters."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/finalizemethodarguments"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.FinalizePrivateFields:
      name: "org.openrewrite.staticanalysis.FinalizePrivateFields"
      description: "Adds the `final` modifier keyword to private instance variables\
        \ which are not reassigned."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/finalizeprivatefields"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.FixStringFormatExpressions:
      name: "org.openrewrite.staticanalysis.FixStringFormatExpressions"
      description: "Fix `String#format` and `String#formatted` expressions by replacing\
        \ `\\n` newline characters with `%n` and removing any unused arguments. Note\
        \ this recipe is scoped to only transform format expressions which do not\
        \ specify the argument index."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/fixstringformatexpressions"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ForLoopControlVariablePostfixOperators:
      name: "org.openrewrite.staticanalysis.ForLoopControlVariablePostfixOperators"
      description: "Replace `for` loop control variables using pre-increment (`++i`)\
        \ or pre-decrement (`--i`) operators with their post-increment (`i++`) or\
        \ post-decrement (`i++`) notation equivalents."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/forloopcontrolvariablepostfixoperators"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ForLoopIncrementInUpdate:
      name: "org.openrewrite.staticanalysis.ForLoopIncrementInUpdate"
      description: "The increment should be moved to the loop's increment clause if\
        \ possible."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/forloopincrementinupdate"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.HiddenField:
      name: "org.openrewrite.staticanalysis.HiddenField"
      description: "Refactor local variables or parameters which shadow a field defined\
        \ in the same class."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/hiddenfield"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.HideUtilityClassConstructor:
      name: "org.openrewrite.staticanalysis.HideUtilityClassConstructor"
      description: "Ensures utility classes (classes containing only static methods\
        \ or fields in their API) do not have a public constructor."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/hideutilityclassconstructor"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.IndexOfChecksShouldUseAStartPosition:
      name: "org.openrewrite.staticanalysis.IndexOfChecksShouldUseAStartPosition"
      description: "Replaces `indexOf(String)` in binary operations if the compared\
        \ value is an int and not less than 1."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/indexofchecksshoulduseastartposition"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.IndexOfReplaceableByContains:
      name: "org.openrewrite.staticanalysis.IndexOfReplaceableByContains"
      description: "Checking if a value is included in a `String` or `List` using\
        \ `indexOf(value)>-1` or `indexOf(value)>=0` can be replaced with `contains(value)`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/indexofreplaceablebycontains"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.IndexOfShouldNotCompareGreaterThanZero:
      name: "org.openrewrite.staticanalysis.IndexOfShouldNotCompareGreaterThanZero"
      description: "Replaces `String#indexOf(String) > 0` and `List#indexOf(Object)\
        \ > 0` with `>=1`. Checking `indexOf` against `>0` ignores the first element,\
        \ whereas `>-1` is inclusive of the first element. For clarity, `>=1` is used,\
        \ because `>0` and `>=1` are semantically equal. Using `>0` may appear to\
        \ be a mistake with the intent of including all elements. If the intent is\
        \ to check whether a value in included in a `String` or `List`, the `String#contains(String)`\
        \ or `List#contains(Object)` methods may be better options altogether."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/indexofshouldnotcomparegreaterthanzero"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.InlineVariable:
      name: "org.openrewrite.staticanalysis.InlineVariable"
      description: "Inline variables when they are immediately used to return or throw."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/inlinevariable"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.InstanceOfPatternMatch:
      name: "org.openrewrite.staticanalysis.InstanceOfPatternMatch"
      description: "Adds pattern variables to `instanceof` expressions wherever the\
        \ same (side effect free) expression is referenced in a corresponding type\
        \ cast expression within the flow scope of the `instanceof`. Currently, this\
        \ recipe supports `if` statements and ternary operator expressions."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/instanceofpatternmatch"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.IsEmptyCallOnCollections:
      name: "org.openrewrite.staticanalysis.IsEmptyCallOnCollections"
      description: "Also check for _not_ `isEmpty()` when testing for not equal to\
        \ zero size."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/isemptycalloncollections"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.JavaApiBestPractices:
      name: "org.openrewrite.staticanalysis.JavaApiBestPractices"
      description: "Use the Java standard library in a way that is most idiomatic."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/javaapibestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.LambdaBlockToExpression:
      name: "org.openrewrite.staticanalysis.LambdaBlockToExpression"
      description: "Single-line statement lambdas returning a value can be replaced\
        \ with expression lambdas."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/lambdablocktoexpression"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.LowercasePackage:
      name: "org.openrewrite.staticanalysis.LowercasePackage"
      description: "By convention all Java package names should contain only lowercase\
        \ letters, numbers, and dashes. This recipe converts any uppercase letters\
        \ in package names to be lowercase."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/lowercasepackage"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.MaskCreditCardNumbers:
      name: "org.openrewrite.staticanalysis.MaskCreditCardNumbers"
      description: "When encountering string literals which appear to be credit card\
        \ numbers, mask the last eight digits with the letter 'X'."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/maskcreditcardnumbers"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.MethodNameCasing:
      name: "org.openrewrite.staticanalysis.MethodNameCasing"
      description: "Fixes method names that do not follow standard naming conventions.\
        \ For example, `String getFoo_bar()` would be adjusted to `String getFooBar()`\
        \ and `int DoSomething()` would be adjusted to `int doSomething()`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/methodnamecasing"
      options:
      - name: "includeTestSources"
        type: "Boolean"
        required: false
      - name: "renamePublicMethods"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.MinimumSwitchCases:
      name: "org.openrewrite.staticanalysis.MinimumSwitchCases"
      description: "`switch` statements are useful when many code paths branch depending\
        \ on the value of a single expression. For just one or two code paths, the\
        \ code will be more readable with `if` statements."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/minimumswitchcases"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.MissingOverrideAnnotation:
      name: "org.openrewrite.staticanalysis.MissingOverrideAnnotation"
      description: "Adds `@Override` to methods overriding superclass methods or implementing\
        \ interface methods. Annotating methods improves readability by showing the\
        \ author's intent to override. Additionally, when annotated, the compiler\
        \ will emit an error when a signature of the overridden method does not match\
        \ the superclass method."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/missingoverrideannotation"
      options:
      - name: "ignoreAnonymousClassMethods"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ModifierOrder:
      name: "org.openrewrite.staticanalysis.ModifierOrder"
      description: "Modifiers should be declared in the correct order as recommended\
        \ by the JLS."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/modifierorder"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.MultipleVariableDeclarations:
      name: "org.openrewrite.staticanalysis.MultipleVariableDeclarations"
      description: "Places each variable declaration in its own statement and on its\
        \ own line. Using one variable declaration per line encourages commenting\
        \ and can increase readability."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/multiplevariabledeclarations"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NeedBraces:
      name: "org.openrewrite.staticanalysis.NeedBraces"
      description: "Adds missing braces around code such as single-line `if`, `for`,\
        \ `while`, and `do-while` block bodies."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/needbraces"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NestedEnumsAreNotStatic:
      name: "org.openrewrite.staticanalysis.NestedEnumsAreNotStatic"
      description: "Remove static modifier from nested enum types since they are implicitly\
        \ static."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/nestedenumsarenotstatic"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NewStringBuilderBufferWithCharArgument:
      name: "org.openrewrite.staticanalysis.NewStringBuilderBufferWithCharArgument"
      description: "Instantiating a `StringBuilder` or a `StringBuffer` with a `Character`\
        \ results in the `int` representation of the character being used for the\
        \ initial size."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/newstringbuilderbufferwithcharargument"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NoDoubleBraceInitialization:
      name: "org.openrewrite.staticanalysis.NoDoubleBraceInitialization"
      description: "Replace `List`, `Map`, and `Set` double brace initialization with\
        \ an initialization block."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/nodoublebraceinitialization"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NoEmptyCollectionWithRawType:
      name: "org.openrewrite.staticanalysis.NoEmptyCollectionWithRawType"
      description: "Replaces `Collections#EMPTY_...` with methods that return generic\
        \ types."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/noemptycollectionwithrawtype"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NoEqualityInForCondition:
      name: "org.openrewrite.staticanalysis.NoEqualityInForCondition"
      description: "Testing for loop termination using an equality operator (`==`\
        \ and `!=`) is dangerous, because it could set up an infinite loop. Using\
        \ a relational operator instead makes it harder to accidentally write an infinite\
        \ loop."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/noequalityinforcondition"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NoFinalizedLocalVariables:
      name: "org.openrewrite.staticanalysis.NoFinalizedLocalVariables"
      description: "Remove the `final` modifier keyword from local variables regardless\
        \ of whether they are used within a local class or an anonymous class."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/nofinalizedlocalvariables"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NoFinalizer:
      name: "org.openrewrite.staticanalysis.NoFinalizer"
      description: "Finalizers are deprecated. Use of `finalize()` can lead to performance\
        \ issues, deadlocks, hangs, and other undesirable behavior."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/nofinalizer"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NoPrimitiveWrappersForToStringOrCompareTo:
      name: "org.openrewrite.staticanalysis.NoPrimitiveWrappersForToStringOrCompareTo"
      description: "Primitive wrappers should not be instantiated only for `#toString()`\
        \ or `#compareTo(..)` invocations."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/noprimitivewrappersfortostringorcompareto"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NoRedundantJumpStatements:
      name: "org.openrewrite.staticanalysis.NoRedundantJumpStatements"
      description: "Jump statements such as return and continue let you change the\
        \ default flow of program execution, but jump statements that direct the control\
        \ flow to the original direction are just a waste of keystrokes."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/noredundantjumpstatements"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NoToStringOnStringType:
      name: "org.openrewrite.staticanalysis.NoToStringOnStringType"
      description: "Remove unnecessary `String#toString` invocations on objects which\
        \ are already a string."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/notostringonstringtype"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NoValueOfOnStringType:
      name: "org.openrewrite.staticanalysis.NoValueOfOnStringType"
      description: "Replace unnecessary `String#valueOf(..)` method invocations with\
        \ the argument directly. This occurs when the argument to `String#valueOf(arg)`\
        \ is a string literal, such as `String.valueOf(\"example\")`. Or, when the\
        \ `String#valueOf(..)` invocation is used in a concatenation, such as `\"\
        example\" + String.valueOf(\"example\")`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/novalueofonstringtype"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.NullableOnMethodReturnType:
      name: "org.openrewrite.staticanalysis.NullableOnMethodReturnType"
      description: "This is the way the cool kids do it."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/nullableonmethodreturntype"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ObjectFinalizeCallsSuper:
      name: "org.openrewrite.staticanalysis.ObjectFinalizeCallsSuper"
      description: "Overrides of `Object#finalize()` should call super."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/objectfinalizecallssuper"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.OperatorWrap:
      name: "org.openrewrite.staticanalysis.OperatorWrap"
      description: "Fixes line wrapping policies on operators."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/operatorwrap"
      options:
      - name: "wrapOption"
        type: "WrapOption"
        required: false
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.PrimitiveWrapperClassConstructorToValueOf:
      name: "org.openrewrite.staticanalysis.PrimitiveWrapperClassConstructorToValueOf"
      description: "The constructor of all primitive types has been deprecated in\
        \ favor of using the static factory method `valueOf` available for each of\
        \ the primitive type wrappers."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/primitivewrapperclassconstructortovalueof"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RedundantFileCreation:
      name: "org.openrewrite.staticanalysis.RedundantFileCreation"
      description: "Remove unnecessary intermediate creations of files."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/redundantfilecreation"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReferentialEqualityToObjectEquals:
      name: "org.openrewrite.staticanalysis.ReferentialEqualityToObjectEquals"
      description: "Using `==` or `!=` compares object references, not the equality\
        \ of two objects. This modifies code where both sides of a binary operation\
        \ (`==` or `!=`) override `Object.equals(Object obj)` except when the comparison\
        \ is within an overridden `Object.equals(Object obj)` method declaration itself.\
        \ The resulting transformation must be carefully reviewed since any modifications\
        \ change the program's semantics."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/referentialequalitytoobjectequals"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveCallsToObjectFinalize:
      name: "org.openrewrite.staticanalysis.RemoveCallsToObjectFinalize"
      description: "Remove calls to `Object.finalize()`. This method is called during\
        \ garbage collection and calling it manually is misleading."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removecallstoobjectfinalize"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveCallsToSystemGc:
      name: "org.openrewrite.staticanalysis.RemoveCallsToSystemGc"
      description: "Removes calls to `System.gc()` and `Runtime.gc()`. When to invoke\
        \ garbage collection is best left to the JVM."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removecallstosystemgc"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveEmptyJavaDocParameters:
      name: "org.openrewrite.staticanalysis.RemoveEmptyJavaDocParameters"
      description: "Removes `@param`, `@return`, and `@throws` with no description\
        \ from JavaDocs."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removeemptyjavadocparameters"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveExtraSemicolons:
      name: "org.openrewrite.staticanalysis.RemoveExtraSemicolons"
      description: "Removes not needed semicolons. Semicolons are considered not needed:\n\
        * Optional semicolons at the end of try-with-resources,\n* after the last\
        \ enum value if no field or method is defined,\n* no statement between two\
        \ semicolon."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removeextrasemicolons"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveHashCodeCallsFromArrayInstances:
      name: "org.openrewrite.staticanalysis.RemoveHashCodeCallsFromArrayInstances"
      description: "Replace `hashCode()` calls on arrays with `Arrays.hashCode()`\
        \ because the results from `hashCode()` are not helpful."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removehashcodecallsfromarrayinstances"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveInstanceOfPatternMatch:
      name: "org.openrewrite.staticanalysis.RemoveInstanceOfPatternMatch"
      description: "Adds an explicit variable declaration at the beginning of `if`\
        \ statement instead of `instanceof` pattern matching."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removeinstanceofpatternmatch"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveJavaDocAuthorTag:
      name: "org.openrewrite.staticanalysis.RemoveJavaDocAuthorTag"
      description: "Removes author tags from JavaDocs to reduce code maintenance."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removejavadocauthortag"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveRedundantTypeCast:
      name: "org.openrewrite.staticanalysis.RemoveRedundantTypeCast"
      description: "Removes unnecessary type casts. Does not currently check casts\
        \ in lambdas, class constructors, and method invocations."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removeredundanttypecast"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveSystemOutPrintln:
      name: "org.openrewrite.staticanalysis.RemoveSystemOutPrintln"
      description: "Print statements are often left accidentally after debugging an\
        \ issue."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removesystemoutprintln"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveToStringCallsFromArrayInstances:
      name: "org.openrewrite.staticanalysis.RemoveToStringCallsFromArrayInstances"
      description: "The result from `toString()` calls on arrays is largely useless.\
        \ The output does not actually reflect the contents of the array. `Arrays.toString(array)`\
        \ should be used instead as it gives the contents of the array."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removetostringcallsfromarrayinstances"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveUnneededAssertion:
      name: "org.openrewrite.staticanalysis.RemoveUnneededAssertion"
      description: "Remove unneeded assertions like `assert true`, `assertTrue(true)`,\
        \ or `assertFalse(false)`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removeunneededassertion"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveUnneededBlock:
      name: "org.openrewrite.staticanalysis.RemoveUnneededBlock"
      description: "Flatten blocks into inline statements when possible."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removeunneededblock"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveUnusedLocalVariables:
      name: "org.openrewrite.staticanalysis.RemoveUnusedLocalVariables"
      description: "If a local variable is declared but not used, it is dead code\
        \ and should be removed."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removeunusedlocalvariables"
      options:
      - name: "ignoreVariablesNamed"
        type: "String[]"
        required: false
      - name: "withSideEffects"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveUnusedPrivateFields:
      name: "org.openrewrite.staticanalysis.RemoveUnusedPrivateFields"
      description: "If a private field is declared but not used in the program, it\
        \ can be considered dead code and should therefore be removed."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removeunusedprivatefields"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RemoveUnusedPrivateMethods:
      name: "org.openrewrite.staticanalysis.RemoveUnusedPrivateMethods"
      description: "`private` methods that are never executed are dead code and should\
        \ be removed."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/removeunusedprivatemethods"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RenameExceptionInEmptyCatch:
      name: "org.openrewrite.staticanalysis.RenameExceptionInEmptyCatch"
      description: "Renames caught exceptions in empty catch blocks to `ignored`.\
        \ `ignored` will be incremented by 1 if a namespace conflict exists."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/renameexceptioninemptycatch"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RenameLocalVariablesToCamelCase:
      name: "org.openrewrite.staticanalysis.RenameLocalVariablesToCamelCase"
      description: "Reformat local variable and method parameter names to camelCase\
        \ to comply with Java naming convention. The recipe will not rename variables\
        \ declared in for loop controls or catches with a single character. The first\
        \ character is set to lower case and existing capital letters are preserved.\
        \ Special characters that are allowed in java field names `$` and `_` are\
        \ removed (unless the name starts with one). If a special character is removed\
        \ the next valid alphanumeric will be capitalized. Currently, does not support\
        \ renaming members of classes. The recipe will not rename a variable if the\
        \ result already exists in the class, conflicts with a java reserved keyword,\
        \ or the result is blank."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/renamelocalvariablestocamelcase"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RenameMethodsNamedHashcodeEqualOrToString:
      name: "org.openrewrite.staticanalysis.RenameMethodsNamedHashcodeEqualOrToString"
      description: "Methods should not be named `hashcode`, `equal`, or `tostring`.\
        \ Any of these are confusing as they appear to be intended as overridden methods\
        \ from the `Object` base class, despite being case-insensitive."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/renamemethodsnamedhashcodeequalortostring"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.RenamePrivateFieldsToCamelCase:
      name: "org.openrewrite.staticanalysis.RenamePrivateFieldsToCamelCase"
      description: "Reformat private field names to camelCase to comply with Java\
        \ naming convention. The recipe will not rename fields with default, protected\
        \ or public access modifiers.The recipe will not rename private constants.The\
        \ first character is set to lower case and existing capital letters are preserved.\
        \ Special characters that are allowed in java field names `$` and `_` are\
        \ removed. If a special character is removed the next valid alphanumeric will\
        \ be capitalized. The recipe will not rename a field if the result already\
        \ exists in the class, conflicts with a java reserved keyword, or the result\
        \ is blank."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/renameprivatefieldstocamelcase"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceApacheCommonsLang3ValidateNotNullWithObjectsRequireNonNull:
      name: "org.openrewrite.staticanalysis.ReplaceApacheCommonsLang3ValidateNotNullWithObjectsRequireNonNull"
      description: "Replace `org.apache.commons.lang3.Validate.notNull(..)` with `Objects.requireNonNull(..)`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replaceapachecommonslang3validatenotnullwithobjectsrequirenonnull"
      options: []
      isImperative: false
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceClassIsInstanceWithInstanceof:
      name: "org.openrewrite.staticanalysis.ReplaceClassIsInstanceWithInstanceof"
      description: "There should be no `A.class.isInstance(a)`, it should be replaced\
        \ by `a instanceof A`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replaceclassisinstancewithinstanceof"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceCollectionToArrayArgWithEmptyArray:
      name: "org.openrewrite.staticanalysis.ReplaceCollectionToArrayArgWithEmptyArray"
      description: "Changes new array creation with `Collection#toArray(T[])` to use\
        \ an empty array argument, which is better for performance.\n\nAccording to\
        \ the `Collection#toArray(T[])` documentation:\n\n> If the collection fits\
        \ in the specified array, it is returned therein.\n\nHowever, although it's\
        \ not intuitive, allocating a right-sized array ahead of time to pass to the\
        \ API appears to be [generally worse for performance](https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion)\
        \ according to benchmarking and JVM developers due to a number of implementation\
        \ details in both Java and the virtual machine.\n\nH2 achieved significant\
        \ performance gains by [switching to empty arrays instead pre-sized ones](https://github.com/h2database/h2database/issues/311)."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replacecollectiontoarrayargwithemptyarray"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceDeprecatedRuntimeExecMethods:
      name: "org.openrewrite.staticanalysis.ReplaceDeprecatedRuntimeExecMethods"
      description: "Replace `Runtime#exec(String)` methods to use `exec(String[])`\
        \ instead because the former is deprecated after Java 18 and is no longer\
        \ recommended for use by the Java documentation."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replacedeprecatedruntimeexecmethods"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceDuplicateStringLiterals:
      name: "org.openrewrite.staticanalysis.ReplaceDuplicateStringLiterals"
      description: "Replaces `String` literals with a length of 5 or greater repeated\
        \ a minimum of 3 times. Qualified `String` literals include final Strings,\
        \ method invocations, and new class invocations. Adds a new `private static\
        \ final String` or uses an existing equivalent class field. A new variable\
        \ name will be generated based on the literal value if an existing field does\
        \ not exist. The generated name will append a numeric value to the variable\
        \ name if a name already exists in the compilation unit."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replaceduplicatestringliterals"
      options:
      - name: "includeTestSources"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceLambdaWithMethodReference:
      name: "org.openrewrite.staticanalysis.ReplaceLambdaWithMethodReference"
      description: "Replaces the single statement lambdas `o -> o instanceOf X`, `o\
        \ -> (A) o`, `o -> System.out.println(o)`, `o -> o != null`, `o -> o == null`\
        \ with the equivalent method reference."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replacelambdawithmethodreference"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceOptionalIsPresentWithIfPresent:
      name: "org.openrewrite.staticanalysis.ReplaceOptionalIsPresentWithIfPresent"
      description: "Replace `Optional#isPresent()` with `Optional#ifPresent()`. Please\
        \ note that this recipe is only suitable for if-blocks that lack an Else-block\
        \ and have a single condition applied."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replaceoptionalispresentwithifpresent"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceRedundantFormatWithPrintf:
      name: "org.openrewrite.staticanalysis.ReplaceRedundantFormatWithPrintf"
      description: "Replaces `PrintStream.print(String.format(format, ...args))` with\
        \ `PrintStream.printf(format, ...args)` (and for `println`, appends a newline\
        \ to the format string)."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replaceredundantformatwithprintf"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceStackWithDeque:
      name: "org.openrewrite.staticanalysis.ReplaceStackWithDeque"
      description: "From the Javadoc of `Stack`:\n> A more complete and consistent\
        \ set of LIFO stack operations is provided by the Deque interface and its\
        \ implementations, which should be used in preference to this class."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replacestackwithdeque"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceStreamToListWithCollect:
      name: "org.openrewrite.staticanalysis.ReplaceStreamToListWithCollect"
      description: "Replace Java 16 `Stream.toList()` with Java 11 `Stream.collect(Collectors.toList())`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replacestreamtolistwithcollect"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceStringBuilderWithString:
      name: "org.openrewrite.staticanalysis.ReplaceStringBuilderWithString"
      description: "Replace `StringBuilder.append()` with String if you are only concatenating\
        \ a small number of strings and the code is simple and easy to read, as the\
        \ compiler can optimize simple string concatenation expressions into a single\
        \ String object, which can be more efficient than using StringBuilder."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replacestringbuilderwithstring"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceTextBlockWithString:
      name: "org.openrewrite.staticanalysis.ReplaceTextBlockWithString"
      description: "Replace text block with a regular multi-line string."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replacetextblockwithstring"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceThreadRunWithThreadStart:
      name: "org.openrewrite.staticanalysis.ReplaceThreadRunWithThreadStart"
      description: "`Thread.run()` should not be called directly."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replacethreadrunwiththreadstart"
      options: []
      isImperative: false
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceValidateNotNullHavingSingleArgWithObjectsRequireNonNull:
      name: "org.openrewrite.staticanalysis.ReplaceValidateNotNullHavingSingleArgWithObjectsRequireNonNull"
      description: "Replace `org.apache.commons.lang3.Validate.notNull(Object)` with\
        \ `Objects.requireNonNull(Object)`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replacevalidatenotnullhavingsingleargwithobjectsrequirenonnull"
      options: []
      isImperative: false
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceValidateNotNullHavingVarargsWithObjectsRequireNonNull:
      name: "org.openrewrite.staticanalysis.ReplaceValidateNotNullHavingVarargsWithObjectsRequireNonNull"
      description: "Replace `org.apache.commons.lang3.Validate.notNull(Object, String,\
        \ Object[])` with `Objects.requireNonNull(Object, String)`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replacevalidatenotnullhavingvarargswithobjectsrequirenonnull"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.ReplaceWeekYearWithYear:
      name: "org.openrewrite.staticanalysis.ReplaceWeekYearWithYear"
      description: "For most dates Week Year (YYYY) and Year (yyyy) yield the same\
        \ results. However, on the last week of December and the first week of January,\
        \ Week Year could produce unexpected results."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/replaceweekyearwithyear"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.SimplifyBooleanExpression:
      name: "org.openrewrite.staticanalysis.SimplifyBooleanExpression"
      description: "Checks for overly complicated boolean expressions, such as `if\
        \ (b == true)`, `b || true`, `!false`, etc."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/simplifybooleanexpression"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.SimplifyBooleanReturn:
      name: "org.openrewrite.staticanalysis.SimplifyBooleanReturn"
      description: "Simplifies Boolean expressions by removing redundancies. For example,\
        \ `a && true` simplifies to `a`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/simplifybooleanreturn"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.SimplifyCompoundStatement:
      name: "org.openrewrite.staticanalysis.SimplifyCompoundStatement"
      description: "Fixes or removes useless compound statements. For example, removing\
        \ `b &= true`, and replacing `b &= false` with `b = false`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/simplifycompoundstatement"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.SimplifyConsecutiveAssignments:
      name: "org.openrewrite.staticanalysis.SimplifyConsecutiveAssignments"
      description: "Combine consecutive assignments into a single statement where\
        \ possible."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/simplifyconsecutiveassignments"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.SimplifyConstantIfBranchExecution:
      name: "org.openrewrite.staticanalysis.SimplifyConstantIfBranchExecution"
      description: "Checks for if expressions that are always `true` or `false` and\
        \ simplifies them."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/simplifyconstantifbranchexecution"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.SimplifyDurationCreationUnits:
      name: "org.openrewrite.staticanalysis.SimplifyDurationCreationUnits"
      description: "Simplifies `java.time.Duration` units to be more human-readable."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/simplifydurationcreationunits"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.SimplifyTernaryRecipes:
      name: "org.openrewrite.staticanalysis.SimplifyTernaryRecipes"
      description: "Simplifies various types of ternary expressions to improve code\
        \ readability."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/simplifyternaryrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.SimplifyTernaryRecipes$SimplifyTernaryFalseTrueRecipe:
      name: "org.openrewrite.staticanalysis.SimplifyTernaryRecipes$SimplifyTernaryFalseTrueRecipe"
      description: "Replace ternary expressions like `booleanExpression ? false :\
        \ true` with `!booleanExpression`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/simplifyternaryrecipesusdsimplifyternaryfalsetruerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.SimplifyTernaryRecipes$SimplifyTernaryTrueFalseRecipe:
      name: "org.openrewrite.staticanalysis.SimplifyTernaryRecipes$SimplifyTernaryTrueFalseRecipe"
      description: "Replace ternary expressions like `booleanExpression ? true : false`\
        \ with `booleanExpression`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/simplifyternaryrecipesusdsimplifyternarytruefalserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.SortedSetStreamToLinkedHashSet:
      name: "org.openrewrite.staticanalysis.SortedSetStreamToLinkedHashSet"
      description: "Converts `set.stream().sorted().collect(Collectors.toSet())` to\
        \ `set.stream().sorted().collect(LinkedHashSet::new)`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/sortedsetstreamtolinkedhashset"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.StaticMethodNotFinal:
      name: "org.openrewrite.staticanalysis.StaticMethodNotFinal"
      description: "Static methods do not need to be declared final because they cannot\
        \ be overridden."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/staticmethodnotfinal"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.StringLiteralEquality:
      name: "org.openrewrite.staticanalysis.StringLiteralEquality"
      description: "`String.equals()` should be used when checking value equality\
        \ on String literals. Using `==` or `!=` compares object references, not the\
        \ actual value of the Strings. This only modifies code where at least one\
        \ side of the binary operation (`==` or `!=`) is a String literal, such as\
        \ `\"someString\" == someVariable;`. This is to prevent inadvertently changing\
        \ code where referential equality is the user's intent."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/stringliteralequality"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.TernaryOperatorsShouldNotBeNested:
      name: "org.openrewrite.staticanalysis.TernaryOperatorsShouldNotBeNested"
      description: "Nested ternary operators can be hard to read quickly. Prefer simpler\
        \ constructs for improved readability. If supported, this recipe will try\
        \ to replace nested ternaries with switch expressions."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/ternaryoperatorsshouldnotbenested"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.TypecastParenPad:
      name: "org.openrewrite.staticanalysis.TypecastParenPad"
      description: "Fixes whitespace padding between a typecast type identifier and\
        \ the enclosing left and right parenthesis. For example, when configured to\
        \ remove spacing, `( int ) 0L;` becomes `(int) 0L;`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/typecastparenpad"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes:
      name: "org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes"
      description: "Uses of `equals()` and `hashCode()` cause `java.net.URL` to make\
        \ blocking internet connections. Instead, use `java.net.URI`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/urlequalshashcoderecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes$URLEqualsRecipe:
      name: "org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes$URLEqualsRecipe"
      description: "Uses of `equals()` cause `java.net.URL` to make blocking internet\
        \ connections. Instead, use `java.net.URI`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/urlequalshashcoderecipesusdurlequalsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes$URLHashCodeRecipe:
      name: "org.openrewrite.staticanalysis.URLEqualsHashCodeRecipes$URLHashCodeRecipe"
      description: "Uses of `hashCode()` cause `java.net.URL` to make blocking internet\
        \ connections. Instead, use `java.net.URI`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/urlequalshashcoderecipesusdurlhashcoderecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UnnecessaryCatch:
      name: "org.openrewrite.staticanalysis.UnnecessaryCatch"
      description: "A refactoring operation may result in a checked exception that\
        \ is no longer thrown from a `try` block. This recipe will find and remove\
        \ unnecessary catch blocks."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/unnecessarycatch"
      options:
      - name: "includeJavaLangException"
        type: "boolean"
        required: false
      - name: "includeJavaLangThrowable"
        type: "boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UnnecessaryCloseInTryWithResources:
      name: "org.openrewrite.staticanalysis.UnnecessaryCloseInTryWithResources"
      description: "Remove unnecessary `AutoCloseable#close()` statements in try-with-resources."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/unnecessarycloseintrywithresources"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UnnecessaryExplicitTypeArguments:
      name: "org.openrewrite.staticanalysis.UnnecessaryExplicitTypeArguments"
      description: "When explicit type arguments are inferable by the compiler, they\
        \ may be removed."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/unnecessaryexplicittypearguments"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UnnecessaryParentheses:
      name: "org.openrewrite.staticanalysis.UnnecessaryParentheses"
      description: "Removes unnecessary parentheses from code where extra parentheses\
        \ pairs are redundant."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/unnecessaryparentheses"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UnnecessaryPrimitiveAnnotations:
      name: "org.openrewrite.staticanalysis.UnnecessaryPrimitiveAnnotations"
      description: "Primitives can't be null anyway, so these annotations are not\
        \ useful in this context."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/unnecessaryprimitiveannotations"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UnnecessaryReturnAsLastStatement:
      name: "org.openrewrite.staticanalysis.UnnecessaryReturnAsLastStatement"
      description: "Removes `return` from a `void` method if it's the last statement."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/unnecessaryreturnaslaststatement"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UnnecessaryThrows:
      name: "org.openrewrite.staticanalysis.UnnecessaryThrows"
      description: "Remove unnecessary `throws` declarations. This recipe will only\
        \ remove unused, checked exceptions if:\n\n- The declaring class or the method\
        \ declaration is `final`.\n- The method declaration is `static` or `private`.\n\
        - The method overrides a method declaration in a super class and the super\
        \ class does not throw the exception.\n- The method is `public` or `protected`\
        \ and the exception is not documented via a JavaDoc as a `@throws` tag."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/unnecessarythrows"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UnwrapRepeatableAnnotations:
      name: "org.openrewrite.staticanalysis.UnwrapRepeatableAnnotations"
      description: "Java 8 introduced the concept of `@Repeatable` annotations, making\
        \ the wrapper annotation unnecessary."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/unwraprepeatableannotations"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UpperCaseLiteralSuffixes:
      name: "org.openrewrite.staticanalysis.UpperCaseLiteralSuffixes"
      description: "Using upper case literal suffixes for declaring literals is less\
        \ ambiguous, e.g., `1l` versus `1L`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/uppercaseliteralsuffixes"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseAsBuilder:
      name: "org.openrewrite.staticanalysis.UseAsBuilder"
      description: "Chain calls to builder methods that are on separate lines into\
        \ one chain of builder calls."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/useasbuilder"
      options:
      - name: "builderCreator"
        type: "String"
        required: false
      - name: "builderType"
        type: "String"
        required: true
      - name: "immutable"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseCollectionInterfaces:
      name: "org.openrewrite.staticanalysis.UseCollectionInterfaces"
      description: "Use `Deque`, `List`, `Map`, `ConcurrentMap`, `Queue`, and `Set`\
        \ instead of implemented collections. Replaces the return type of public method\
        \ declarations and the variable type public variable declarations."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/usecollectioninterfaces"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseDiamondOperator:
      name: "org.openrewrite.staticanalysis.UseDiamondOperator"
      description: "The diamond operator (`<>`) should be used. Java 7 introduced\
        \ the diamond operator (<>) to reduce the verbosity of generics code. For\
        \ instance, instead of having to declare a `List`'s type in both its declaration\
        \ and its constructor, you can now simplify the constructor declaration with\
        \ `<>`, and the compiler will infer the type."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/usediamondoperator"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseForEachRemoveInsteadOfSetRemoveAll:
      name: "org.openrewrite.staticanalysis.UseForEachRemoveInsteadOfSetRemoveAll"
      description: "Using `java.util.Collection#forEach(Set::remove)` rather than\
        \ `java.util.Set#removeAll(java.util.Collection)` may improve performance\
        \ due to a possible O(n^2) complexity."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/useforeachremoveinsteadofsetremoveall"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseJavaStyleArrayDeclarations:
      name: "org.openrewrite.staticanalysis.UseJavaStyleArrayDeclarations"
      description: "Change C-Style array declarations `int i[];` to `int[] i;`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/usejavastylearraydeclarations"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseLambdaForFunctionalInterface:
      name: "org.openrewrite.staticanalysis.UseLambdaForFunctionalInterface"
      description: "Instead of anonymous class declarations, use a lambda where possible.\
        \ Using lambdas to replace anonymous classes can lead to more expressive and\
        \ maintainable code, improve code readability, reduce code duplication, and\
        \ achieve better performance in some cases."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/uselambdaforfunctionalinterface"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseListSort:
      name: "org.openrewrite.staticanalysis.UseListSort"
      description: "The `java.util.Collections#sort(..)` implementation defers to\
        \ the `java.util.List#sort(Comparator)`, replaced it with the `java.util.List#sort(Comparator)`\
        \ implementation for better readability."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/uselistsort"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseMapContainsKey:
      name: "org.openrewrite.staticanalysis.UseMapContainsKey"
      description: "`map.keySet().contains(a)` can be simplified to `map.containsKey(a)`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/usemapcontainskey"
      options: []
      isImperative: false
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseObjectNotifyAll:
      name: "org.openrewrite.staticanalysis.UseObjectNotifyAll"
      description: "`Object.notifyAll()` and `Object.notify()` both wake up sleeping\
        \ threads, but `Object.notify()` only rouses one while `Object.notifyAll()`\
        \ rouses all of them. Since `Object.notify()` might not wake up the right\
        \ thread, `Object.notifyAll()` should be used instead. See [this](https://wiki.sei.cmu.edu/confluence/display/java/THI02-J.+Notify+all+waiting+threads+rather+than+a+single+thread)\
        \ for more information."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/useobjectnotifyall"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseStandardCharset:
      name: "org.openrewrite.staticanalysis.UseStandardCharset"
      description: "Replaces `Charset.forName(java.lang.String)` with the equivalent\
        \ `StandardCharset` constant."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/usestandardcharset"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseStringReplace:
      name: "org.openrewrite.staticanalysis.UseStringReplace"
      description: "When `String::replaceAll` is used, the first argument should be\
        \ a real regular expression. If it’s not the case, `String::replace` does\
        \ exactly the same thing as `String::replaceAll` without the performance drawback\
        \ of the regex."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/usestringreplace"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.UseSystemLineSeparator:
      name: "org.openrewrite.staticanalysis.UseSystemLineSeparator"
      description: "Replace calls to `System.getProperty(\"line.separator\")` with\
        \ `System.lineSeparator()`."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/usesystemlineseparator"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.WhileInsteadOfFor:
      name: "org.openrewrite.staticanalysis.WhileInsteadOfFor"
      description: "When only the condition expression is defined in a for loop, and\
        \ the initialization and increment expressions are missing, a while loop should\
        \ be used instead to increase readability."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/whileinsteadoffor"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.WriteOctalValuesAsDecimal:
      name: "org.openrewrite.staticanalysis.WriteOctalValuesAsDecimal"
      description: "Developers may not recognize octal values as such, mistaking them\
        \ instead for decimal values."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/writeoctalvaluesasdecimal"
      options: []
      isImperative: true
      artifactId: "rewrite-static-analysis"
    org.openrewrite.staticanalysis.java.MoveFieldAnnotationToType:
      name: "org.openrewrite.staticanalysis.java.MoveFieldAnnotationToType"
      description: "Annotations that could be applied to either a field or a type\
        \ are better applied to the type, because similar annotations may be more\
        \ restrictive, leading to compile errors like 'scoping construct cannot be\
        \ annotated with type-use annotation' when migrating later."
      docLink: "https://docs.openrewrite.org/recipes/staticanalysis/java/movefieldannotationtotype"
      options:
      - name: "annotationType"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-static-analysis"
rewrite-struts:
  artifactId: "rewrite-struts"
  version: "0.12.0"
  markdownRecipeDescriptors:
    org.openrewrite.java.struts.MigrateStrutsDtd:
      name: "org.openrewrite.java.struts.MigrateStrutsDtd"
      description: "Update Struts DTD to reflect the specified version."
      docLink: "https://docs.openrewrite.org/recipes/java/struts/migratestrutsdtd"
      options:
      - name: "strutsVersion"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-struts"
    org.openrewrite.java.struts.migrate6.MigrateAwareInterfaces:
      name: "org.openrewrite.java.struts.migrate6.MigrateAwareInterfaces"
      description: "These types have moved to a new package in Struts 6.0."
      docLink: "https://docs.openrewrite.org/recipes/java/struts/migrate6/migrateawareinterfaces"
      options: []
      isImperative: false
      artifactId: "rewrite-struts"
    org.openrewrite.java.struts.migrate6.MigrateOpenSymphonyClasses:
      name: "org.openrewrite.java.struts.migrate6.MigrateOpenSymphonyClasses"
      description: "Migrate classes from `com.opensymphony.xwork2` to their replacements\
        \ in `org.apache.struts2`."
      docLink: "https://docs.openrewrite.org/recipes/java/struts/migrate6/migrateopensymphonyclasses"
      options: []
      isImperative: false
      artifactId: "rewrite-struts"
    org.openrewrite.java.struts.migrate6.MigrateStruts6:
      name: "org.openrewrite.java.struts.migrate6.MigrateStruts6"
      description: "Migrate Struts 2.x to Struts 6.0"
      docLink: "https://docs.openrewrite.org/recipes/java/struts/migrate6/migratestruts6"
      options: []
      isImperative: false
      artifactId: "rewrite-struts"
    org.openrewrite.java.struts.migrate6.MigrateStruts6Constants:
      name: "org.openrewrite.java.struts.migrate6.MigrateStruts6Constants"
      description: "All Xwork constants had been already deprecated, with this version\
        \ all of them have been removed and Struts constants have been used instead."
      docLink: "https://docs.openrewrite.org/recipes/java/struts/migrate6/migratestruts6constants"
      options: []
      isImperative: false
      artifactId: "rewrite-struts"
    org.openrewrite.java.struts.migrate6.UpgradeStruts6Dependencies:
      name: "org.openrewrite.java.struts.migrate6.UpgradeStruts6Dependencies"
      description: "Upgrade Struts 2.x dependencies to Struts 6.0."
      docLink: "https://docs.openrewrite.org/recipes/java/struts/migrate6/upgradestruts6dependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-struts"
    org.openrewrite.java.struts.search.FindStrutsActions:
      name: "org.openrewrite.java.struts.search.FindStrutsActions"
      description: "Find actions and their associated definitions."
      docLink: "https://docs.openrewrite.org/recipes/java/struts/search/findstrutsactions"
      options: []
      isImperative: true
      artifactId: "rewrite-struts"
    org.openrewrite.java.struts.search.FindStrutsXml:
      name: "org.openrewrite.java.struts.search.FindStrutsXml"
      description: "Struts XML files may have any name, and may be outside a resources\
        \ directory, so the true test is to look at the content of the file."
      docLink: "https://docs.openrewrite.org/recipes/java/struts/search/findstrutsxml"
      options: []
      isImperative: true
      artifactId: "rewrite-struts"
rewrite-terraform:
  artifactId: "rewrite-terraform"
  version: "3.1.3"
  markdownRecipeDescriptors:
    org.openrewrite.terraform.AddConfiguration:
      name: "org.openrewrite.terraform.AddConfiguration"
      description: "If the configuration has a different value, leave it alone. If\
        \ it is missing, add it."
      docLink: "https://docs.openrewrite.org/recipes/terraform/addconfiguration"
      options:
      - name: "content"
        type: "String"
        required: true
      - name: "resourceName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.SecureRandom:
      name: "org.openrewrite.terraform.SecureRandom"
      description: "Use a long enough byte length for `random` resources."
      docLink: "https://docs.openrewrite.org/recipes/terraform/securerandom"
      options:
      - name: "byteLength"
        type: "Integer"
        required: false
      isImperative: true
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.AWSBestPractices:
      name: "org.openrewrite.terraform.aws.AWSBestPractices"
      description: "Securely operate on Amazon Web Services."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/awsbestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.DisableInstanceMetadataServiceV1:
      name: "org.openrewrite.terraform.aws.DisableInstanceMetadataServiceV1"
      description: "As a request/response method IMDSv1 is prone to local misconfigurations."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/disableinstancemetadataservicev1"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnableApiGatewayCaching:
      name: "org.openrewrite.terraform.aws.EnableApiGatewayCaching"
      description: "Enable caching for all methods of API Gateway."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/enableapigatewaycaching"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnableDynamoDbPITR:
      name: "org.openrewrite.terraform.aws.EnableDynamoDbPITR"
      description: "DynamoDB Point-In-Time Recovery (PITR) is an automatic backup\
        \ service for DynamoDB table data that helps protect your DynamoDB tables\
        \ from accidental write or delete operations."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/enabledynamodbpitr"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnableECRScanOnPush:
      name: "org.openrewrite.terraform.aws.EnableECRScanOnPush"
      description: "ECR Image Scanning assesses and identifies operating system vulnerabilities.\
        \ Using automated image scans you can ensure container image vulnerabilities\
        \ are found before getting pushed to production."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/enableecrscanonpush"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptAuroraClusters:
      name: "org.openrewrite.terraform.aws.EncryptAuroraClusters"
      description: "Native Aurora encryption helps protect your cloud applications\
        \ and fulfils compliance requirements for data-at-rest encryption."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptauroraclusters"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptCodeBuild:
      name: "org.openrewrite.terraform.aws.EncryptCodeBuild"
      description: "Build artifacts, such as a cache, logs, exported raw test report\
        \ data files, and build results, are encrypted by default using CMKs for Amazon\
        \ S3 that are managed by the AWS Key Management Service."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptcodebuild"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptDAXStorage:
      name: "org.openrewrite.terraform.aws.EncryptDAXStorage"
      description: "DAX encryption at rest automatically integrates with AWS KMS for\
        \ managing the single service default key used to encrypt clusters."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptdaxstorage"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptDocumentDB:
      name: "org.openrewrite.terraform.aws.EncryptDocumentDB"
      description: "The encryption feature available for Amazon DocumentDB clusters\
        \ provides an additional layer of data protection by helping secure your data\
        \ against unauthorized access to the underlying storage."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptdocumentdb"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptEBSSnapshots:
      name: "org.openrewrite.terraform.aws.EncryptEBSSnapshots"
      description: "EBS snapshots should be encrypted, as they often include sensitive\
        \ information, customer PII or CPNI."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptebssnapshots"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptEBSVolumeLaunchConfiguration:
      name: "org.openrewrite.terraform.aws.EncryptEBSVolumeLaunchConfiguration"
      description: "EBS volumes allow you to create encrypted launch configurations\
        \ when creating EC2 instances and auto scaling. When the entire EBS volume\
        \ is encrypted, data stored at rest on the volume, disk I/O, snapshots created\
        \ from the volume, and data in-transit between EBS and EC2 are all encrypted."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptebsvolumelaunchconfiguration"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptEBSVolumes:
      name: "org.openrewrite.terraform.aws.EncryptEBSVolumes"
      description: "Encrypting EBS volumes ensures that replicated copies of your\
        \ images are secure even if they are accidentally exposed. AWS EBS encryption\
        \ uses AWS KMS customer master keys (CMK) when creating encrypted volumes\
        \ and snapshots. Storing EBS volumes in their encrypted state reduces the\
        \ risk of data exposure or data loss."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptebsvolumes"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptEFSVolumesInECSTaskDefinitionsInTransit:
      name: "org.openrewrite.terraform.aws.EncryptEFSVolumesInECSTaskDefinitionsInTransit"
      description: "Enable attached EFS definitions in ECS tasks to use encryption\
        \ in transit."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptefsvolumesinecstaskdefinitionsintransit"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptElastiCacheRedisAtRest:
      name: "org.openrewrite.terraform.aws.EncryptElastiCacheRedisAtRest"
      description: "ElastiCache for Redis offers default encryption at rest as a service."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptelasticacheredisatrest"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptElastiCacheRedisInTransit:
      name: "org.openrewrite.terraform.aws.EncryptElastiCacheRedisInTransit"
      description: "ElastiCache for Redis offers optional encryption in transit. In-transit\
        \ encryption provides an additional layer of data protection when transferring\
        \ data over standard HTTPS protocol."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptelasticacheredisintransit"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptNeptuneStorage:
      name: "org.openrewrite.terraform.aws.EncryptNeptuneStorage"
      description: "Encryption of Neptune storage protects data and metadata against\
        \ unauthorized access."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptneptunestorage"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptRDSClusters:
      name: "org.openrewrite.terraform.aws.EncryptRDSClusters"
      description: "Native RDS encryption helps protect your cloud applications and\
        \ fulfils compliance requirements for data-at-rest encryption."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptrdsclusters"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EncryptRedshift:
      name: "org.openrewrite.terraform.aws.EncryptRedshift"
      description: "Redshift clusters should be securely encrypted at rest."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/encryptredshift"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSCMKRotationIsEnabled:
      name: "org.openrewrite.terraform.aws.EnsureAWSCMKRotationIsEnabled"
      description: "Ensure AWS CMK rotation is enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawscmkrotationisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSEFSWithEncryptionForDataAtRestIsEnabled:
      name: "org.openrewrite.terraform.aws.EnsureAWSEFSWithEncryptionForDataAtRestIsEnabled"
      description: "Ensure AWS EFS with encryption for data at rest is enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawsefswithencryptionfordataatrestisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSEKSClusterEndpointAccessIsPubliclyDisabled:
      name: "org.openrewrite.terraform.aws.EnsureAWSEKSClusterEndpointAccessIsPubliclyDisabled"
      description: "Ensure AWS EKS cluster endpoint access is publicly disabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawseksclusterendpointaccessispubliclydisabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSElasticsearchDomainEncryptionForDataAtRestIsEnabled:
      name: "org.openrewrite.terraform.aws.EnsureAWSElasticsearchDomainEncryptionForDataAtRestIsEnabled"
      description: "Ensure AWS Elasticsearch domain encryption for data at rest is\
        \ enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawselasticsearchdomainencryptionfordataatrestisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSElasticsearchDomainsHaveEnforceHTTPSEnabled:
      name: "org.openrewrite.terraform.aws.EnsureAWSElasticsearchDomainsHaveEnforceHTTPSEnabled"
      description: "Ensure AWS Elasticsearch domains have `EnforceHTTPS` enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawselasticsearchdomainshaveenforcehttpsenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSElasticsearchHasNodeToNodeEncryptionEnabled:
      name: "org.openrewrite.terraform.aws.EnsureAWSElasticsearchHasNodeToNodeEncryptionEnabled"
      description: "Ensure AWS Elasticsearch has node-to-node encryption enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawselasticsearchhasnodetonodeencryptionenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSIAMPasswordPolicyHasAMinimumOf14Characters:
      name: "org.openrewrite.terraform.aws.EnsureAWSIAMPasswordPolicyHasAMinimumOf14Characters"
      description: "Ensure AWS IAM password policy has a minimum of 14 characters."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawsiampasswordpolicyhasaminimumof14characters"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSLambdaFunctionIsConfiguredForFunctionLevelConcurrentExecutionLimit:
      name: "org.openrewrite.terraform.aws.EnsureAWSLambdaFunctionIsConfiguredForFunctionLevelConcurrentExecutionLimit"
      description: "Ensure AWS Lambda function is configured for function-level concurrent\
        \ execution limit."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawslambdafunctionisconfiguredforfunctionlevelconcurrentexecutionlimit"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSLambdaFunctionsHaveTracingEnabled:
      name: "org.openrewrite.terraform.aws.EnsureAWSLambdaFunctionsHaveTracingEnabled"
      description: "Ensure AWS Lambda functions have tracing enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawslambdafunctionshavetracingenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSRDSDatabaseInstanceIsNotPubliclyAccessible:
      name: "org.openrewrite.terraform.aws.EnsureAWSRDSDatabaseInstanceIsNotPubliclyAccessible"
      description: "Ensure AWS RDS database instance is not publicly accessible."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawsrdsdatabaseinstanceisnotpubliclyaccessible"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAWSS3ObjectVersioningIsEnabled:
      name: "org.openrewrite.terraform.aws.EnsureAWSS3ObjectVersioningIsEnabled"
      description: "Ensure AWS S3 object versioning is enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureawss3objectversioningisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureAmazonEKSControlPlaneLoggingEnabledForAllLogTypes:
      name: "org.openrewrite.terraform.aws.EnsureAmazonEKSControlPlaneLoggingEnabledForAllLogTypes"
      description: "Ensure Amazon EKS control plane logging enabled for all log types."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureamazonekscontrolplaneloggingenabledforalllogtypes"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureCloudTrailLogFileValidationIsEnabled:
      name: "org.openrewrite.terraform.aws.EnsureCloudTrailLogFileValidationIsEnabled"
      description: "Ensure CloudTrail log file validation is enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensurecloudtraillogfilevalidationisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureDataStoredInAnS3BucketIsSecurelyEncryptedAtRest:
      name: "org.openrewrite.terraform.aws.EnsureDataStoredInAnS3BucketIsSecurelyEncryptedAtRest"
      description: "Ensure data stored in an S3 bucket is securely encrypted at rest."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensuredatastoredinans3bucketissecurelyencryptedatrest"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureDetailedMonitoringForEC2InstancesIsEnabled:
      name: "org.openrewrite.terraform.aws.EnsureDetailedMonitoringForEC2InstancesIsEnabled"
      description: "Ensure detailed monitoring for EC2 instances is enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensuredetailedmonitoringforec2instancesisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureEC2IsEBSOptimized:
      name: "org.openrewrite.terraform.aws.EnsureEC2IsEBSOptimized"
      description: "Ensure EC2 is EBS optimized."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureec2isebsoptimized"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureECRRepositoriesAreEncrypted:
      name: "org.openrewrite.terraform.aws.EnsureECRRepositoriesAreEncrypted"
      description: "Ensure ECR repositories are encrypted."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureecrrepositoriesareencrypted"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureEnhancedMonitoringForAmazonRDSInstancesIsEnabled:
      name: "org.openrewrite.terraform.aws.EnsureEnhancedMonitoringForAmazonRDSInstancesIsEnabled"
      description: "Ensure enhanced monitoring for Amazon RDS instances is enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureenhancedmonitoringforamazonrdsinstancesisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyExpiresPasswordsWithin90DaysOrLess:
      name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyExpiresPasswordsWithin90DaysOrLess"
      description: "Ensure IAM password policy expires passwords within 90 days or\
        \ less."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureiampasswordpolicyexpirespasswordswithin90daysorless"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyPreventsPasswordReuse:
      name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyPreventsPasswordReuse"
      description: "Ensure IAM password policy prevents password reuse."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureiampasswordpolicypreventspasswordreuse"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneLowercaseLetter:
      name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneLowercaseLetter"
      description: "Ensure IAM password policy requires at least one lowercase letter."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureiampasswordpolicyrequiresatleastonelowercaseletter"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneNumber:
      name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneNumber"
      description: "Ensure IAM password policy requires at least one number."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureiampasswordpolicyrequiresatleastonenumber"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneSymbol:
      name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneSymbol"
      description: "Ensure IAM password policy requires at least one symbol."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureiampasswordpolicyrequiresatleastonesymbol"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneUppercaseLetter:
      name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneUppercaseLetter"
      description: "Ensure IAM password policy requires at least one uppercase letter."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensureiampasswordpolicyrequiresatleastoneuppercaseletter"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureKinesisStreamIsSecurelyEncrypted:
      name: "org.openrewrite.terraform.aws.EnsureKinesisStreamIsSecurelyEncrypted"
      description: "Ensure Kinesis Stream is securely encrypted."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensurekinesisstreamissecurelyencrypted"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureRDSDatabaseHasIAMAuthenticationEnabled:
      name: "org.openrewrite.terraform.aws.EnsureRDSDatabaseHasIAMAuthenticationEnabled"
      description: "Ensure RDS database has IAM authentication enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensurerdsdatabasehasiamauthenticationenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureRDSInstancesHaveMultiAZEnabled:
      name: "org.openrewrite.terraform.aws.EnsureRDSInstancesHaveMultiAZEnabled"
      description: "Ensure RDS instances have Multi-AZ enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensurerdsinstanceshavemultiazenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureRespectiveLogsOfAmazonRDSAreEnabled:
      name: "org.openrewrite.terraform.aws.EnsureRespectiveLogsOfAmazonRDSAreEnabled"
      description: "Ensure respective logs of Amazon RDS are enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensurerespectivelogsofamazonrdsareenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureTheS3BucketHasAccessLoggingEnabled:
      name: "org.openrewrite.terraform.aws.EnsureTheS3BucketHasAccessLoggingEnabled"
      description: "Ensure the S3 bucket has access logging enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensurethes3buckethasaccessloggingenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.EnsureVPCSubnetsDoNotAssignPublicIPByDefault:
      name: "org.openrewrite.terraform.aws.EnsureVPCSubnetsDoNotAssignPublicIPByDefault"
      description: "Ensure VPC subnets do not assign public IP by default."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/ensurevpcsubnetsdonotassignpublicipbydefault"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.ImmutableECRTags:
      name: "org.openrewrite.terraform.aws.ImmutableECRTags"
      description: "Amazon ECR supports immutable tags, preventing image tags from\
        \ being overwritten. In the past, ECR tags could have been overwritten, this\
        \ could be overcome by requiring users to uniquely identify an image using\
        \ a naming convention."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/immutableecrtags"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.aws.UseHttpsForCloudfrontDistribution:
      name: "org.openrewrite.terraform.aws.UseHttpsForCloudfrontDistribution"
      description: "Secure communication by default."
      docLink: "https://docs.openrewrite.org/recipes/terraform/aws/usehttpsforcloudfrontdistribution"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.AzureBestPractices:
      name: "org.openrewrite.terraform.azure.AzureBestPractices"
      description: "Securely operate on Microsoft Azure."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/azurebestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.DisableKubernetesDashboard:
      name: "org.openrewrite.terraform.azure.DisableKubernetesDashboard"
      description: "Disabling the dashboard eliminates it as an attack vector. The\
        \ dashboard add-on is disabled by default for all new clusters created on\
        \ Kubernetes 1.18 or greater."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/disablekubernetesdashboard"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnableAzureStorageAccountTrustedMicrosoftServicesAccess:
      name: "org.openrewrite.terraform.azure.EnableAzureStorageAccountTrustedMicrosoftServicesAccess"
      description: "Certain Microsoft services that interact with storage accounts\
        \ operate from networks that cannot be granted access through network rules.\
        \ Using this configuration, you can allow the set of trusted Microsoft services\
        \ to bypass those network rules."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/enableazurestorageaccounttrustedmicrosoftservicesaccess"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnableAzureStorageSecureTransferRequired:
      name: "org.openrewrite.terraform.azure.EnableAzureStorageSecureTransferRequired"
      description: "Microsoft recommends requiring secure transfer for all storage\
        \ accounts."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/enableazurestoragesecuretransferrequired"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnableGeoRedundantBackupsOnPostgreSQLServer:
      name: "org.openrewrite.terraform.azure.EnableGeoRedundantBackupsOnPostgreSQLServer"
      description: "Ensure PostgreSQL server enables geo-redundant backups."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/enablegeoredundantbackupsonpostgresqlserver"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EncryptAzureVMDataDiskWithADECMK:
      name: "org.openrewrite.terraform.azure.EncryptAzureVMDataDiskWithADECMK"
      description: "Ensure Azure VM data disk is encrypted with ADE/CMK."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/encryptazurevmdatadiskwithadecmk"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAKSPoliciesAddOn:
      name: "org.openrewrite.terraform.azure.EnsureAKSPoliciesAddOn"
      description: "Azure Policy Add-on for Kubernetes service (AKS) extends Gatekeeper\
        \ v3, an admission controller webhook for Open Policy Agent (OPA), to apply\
        \ at-scale enforcements and safeguards on your clusters in a centralized,\
        \ consistent manner."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureakspoliciesaddon"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAKVSecretsHaveAnExpirationDateSet:
      name: "org.openrewrite.terraform.azure.EnsureAKVSecretsHaveAnExpirationDateSet"
      description: "Ensure AKV secrets have an expiration date set."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureakvsecretshaveanexpirationdateset"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureASecurityContactPhoneNumberIsPresent:
      name: "org.openrewrite.terraform.azure.EnsureASecurityContactPhoneNumberIsPresent"
      description: "Ensure a security contact phone number is present."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureasecuritycontactphonenumberispresent"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureActivityLogRetentionIsSetTo365DaysOrGreater:
      name: "org.openrewrite.terraform.azure.EnsureActivityLogRetentionIsSetTo365DaysOrGreater"
      description: "Ensure activity log retention is set to 365 days or greater."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureactivitylogretentionissetto365daysorgreater"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAllKeysHaveAnExpirationDate:
      name: "org.openrewrite.terraform.azure.EnsureAllKeysHaveAnExpirationDate"
      description: "Ensure all keys have an expiration date."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureallkeyshaveanexpirationdate"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAppServiceEnablesDetailedErrorMessages:
      name: "org.openrewrite.terraform.azure.EnsureAppServiceEnablesDetailedErrorMessages"
      description: "Ensure app service enables detailed error messages."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureappserviceenablesdetailederrormessages"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAppServiceEnablesFailedRequestTracing:
      name: "org.openrewrite.terraform.azure.EnsureAppServiceEnablesFailedRequestTracing"
      description: "Ensure app service enables failed request tracing."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureappserviceenablesfailedrequesttracing"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAppServiceEnablesHTTPLogging:
      name: "org.openrewrite.terraform.azure.EnsureAppServiceEnablesHTTPLogging"
      description: "Ensure app service enables HTTP logging."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureappserviceenableshttplogging"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAppServicesUseAzureFiles:
      name: "org.openrewrite.terraform.azure.EnsureAppServicesUseAzureFiles"
      description: "Ensure app services use Azure files."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureappservicesuseazurefiles"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAzureAppServiceWebAppRedirectsHTTPToHTTPS:
      name: "org.openrewrite.terraform.azure.EnsureAzureAppServiceWebAppRedirectsHTTPToHTTPS"
      description: "Ensure Azure App Service Web app redirects HTTP to HTTPS."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureazureappservicewebappredirectshttptohttps"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAzureApplicationGatewayHasWAFEnabled:
      name: "org.openrewrite.terraform.azure.EnsureAzureApplicationGatewayHasWAFEnabled"
      description: "Ensure Azure application gateway has WAF enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureazureapplicationgatewayhaswafenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAzureKeyVaultIsRecoverable:
      name: "org.openrewrite.terraform.azure.EnsureAzureKeyVaultIsRecoverable"
      description: "Ensure Azure key vault is recoverable."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureazurekeyvaultisrecoverable"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAzureNetworkWatcherNSGFlowLogsRetentionIsGreaterThan90Days:
      name: "org.openrewrite.terraform.azure.EnsureAzureNetworkWatcherNSGFlowLogsRetentionIsGreaterThan90Days"
      description: "Ensure Azure Network Watcher NSG flow logs retention is greater\
        \ than 90 days."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureazurenetworkwatchernsgflowlogsretentionisgreaterthan90days"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAzurePostgreSQLDatabaseServerWithSSLConnectionIsEnabled:
      name: "org.openrewrite.terraform.azure.EnsureAzurePostgreSQLDatabaseServerWithSSLConnectionIsEnabled"
      description: "Ensure Azure PostgreSQL database server with SSL connection is\
        \ enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureazurepostgresqldatabaseserverwithsslconnectionisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAzureSQLServerAuditLogRetentionIsGreaterThan90Days:
      name: "org.openrewrite.terraform.azure.EnsureAzureSQLServerAuditLogRetentionIsGreaterThan90Days"
      description: "Ensure Azure SQL server audit log retention is greater than 90\
        \ days."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureazuresqlserverauditlogretentionisgreaterthan90days"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAzureSQLServerSendAlertsToFieldValueIsSet:
      name: "org.openrewrite.terraform.azure.EnsureAzureSQLServerSendAlertsToFieldValueIsSet"
      description: "Ensure Azure SQL server send alerts to field value is set."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureazuresqlserversendalertstofieldvalueisset"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureAzureSQLServerThreatDetectionAlertsAreEnabledForAllThreatTypes:
      name: "org.openrewrite.terraform.azure.EnsureAzureSQLServerThreatDetectionAlertsAreEnabledForAllThreatTypes"
      description: "Ensure Azure SQL Server threat detection alerts are enabled for\
        \ all threat types."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureazuresqlserverthreatdetectionalertsareenabledforallthreattypes"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureFTPDeploymentsAreDisabled:
      name: "org.openrewrite.terraform.azure.EnsureFTPDeploymentsAreDisabled"
      description: "Ensure FTP Deployments are disabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensureftpdeploymentsaredisabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureKeyVaultAllowsFirewallRulesSettings:
      name: "org.openrewrite.terraform.azure.EnsureKeyVaultAllowsFirewallRulesSettings"
      description: "Ensure key vault allows firewall rules settings."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurekeyvaultallowsfirewallrulessettings"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureKeyVaultEnablesPurgeProtection:
      name: "org.openrewrite.terraform.azure.EnsureKeyVaultEnablesPurgeProtection"
      description: "Ensure key vault enables purge protection."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurekeyvaultenablespurgeprotection"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureKeyVaultKeyIsBackedByHSM:
      name: "org.openrewrite.terraform.azure.EnsureKeyVaultKeyIsBackedByHSM"
      description: "Ensure key vault key is backed by HSM."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurekeyvaultkeyisbackedbyhsm"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureKeyVaultSecretsHaveContentTypeSet:
      name: "org.openrewrite.terraform.azure.EnsureKeyVaultSecretsHaveContentTypeSet"
      description: "Ensure key vault secrets have `content_type` set."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurekeyvaultsecretshavecontenttypeset"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureLogProfileIsConfiguredToCaptureAllActivities:
      name: "org.openrewrite.terraform.azure.EnsureLogProfileIsConfiguredToCaptureAllActivities"
      description: "Ensure log profile is configured to capture all activities."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurelogprofileisconfiguredtocaptureallactivities"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureMSSQLServersHaveEmailServiceAndCoAdministratorsEnabled:
      name: "org.openrewrite.terraform.azure.EnsureMSSQLServersHaveEmailServiceAndCoAdministratorsEnabled"
      description: "Ensure MSSQL servers have email service and co-administrators\
        \ enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensuremssqlservershaveemailserviceandcoadministratorsenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureManagedIdentityProviderIsEnabledForAppServices:
      name: "org.openrewrite.terraform.azure.EnsureManagedIdentityProviderIsEnabledForAppServices"
      description: "Ensure managed identity provider is enabled for app services."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensuremanagedidentityproviderisenabledforappservices"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureMySQLIsUsingTheLatestVersionOfTLSEncryption:
      name: "org.openrewrite.terraform.azure.EnsureMySQLIsUsingTheLatestVersionOfTLSEncryption"
      description: "Ensure MySQL is using the latest version of TLS encryption."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensuremysqlisusingthelatestversionoftlsencryption"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureMySQLServerDatabasesHaveEnforceSSLConnectionEnabled:
      name: "org.openrewrite.terraform.azure.EnsureMySQLServerDatabasesHaveEnforceSSLConnectionEnabled"
      description: "Ensure MySQL server databases have Enforce SSL connection enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensuremysqlserverdatabaseshaveenforcesslconnectionenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureMySQLServerDisablesPublicNetworkAccess:
      name: "org.openrewrite.terraform.azure.EnsureMySQLServerDisablesPublicNetworkAccess"
      description: "Ensure MySQL server disables public network access."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensuremysqlserverdisablespublicnetworkaccess"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureMySQLServerEnablesGeoRedundantBackups:
      name: "org.openrewrite.terraform.azure.EnsureMySQLServerEnablesGeoRedundantBackups"
      description: "Ensure MySQL server enables geo-redundant backups."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensuremysqlserverenablesgeoredundantbackups"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureMySQLServerEnablesThreatDetectionPolicy:
      name: "org.openrewrite.terraform.azure.EnsureMySQLServerEnablesThreatDetectionPolicy"
      description: "Ensure MySQL server enables Threat Detection policy."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensuremysqlserverenablesthreatdetectionpolicy"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsurePostgreSQLServerDisablesPublicNetworkAccess:
      name: "org.openrewrite.terraform.azure.EnsurePostgreSQLServerDisablesPublicNetworkAccess"
      description: "Ensure PostgreSQL server disables public network access."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurepostgresqlserverdisablespublicnetworkaccess"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsurePostgreSQLServerEnablesInfrastructureEncryption:
      name: "org.openrewrite.terraform.azure.EnsurePostgreSQLServerEnablesInfrastructureEncryption"
      description: "Ensure PostgreSQL server enables infrastructure encryption."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurepostgresqlserverenablesinfrastructureencryption"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsurePostgreSQLServerEnablesThreatDetectionPolicy:
      name: "org.openrewrite.terraform.azure.EnsurePostgreSQLServerEnablesThreatDetectionPolicy"
      description: "Ensure PostgreSQL server enables Threat Detection policy."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurepostgresqlserverenablesthreatdetectionpolicy"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsurePublicNetworkAccessEnabledIsSetToFalseForMySQLServers:
      name: "org.openrewrite.terraform.azure.EnsurePublicNetworkAccessEnabledIsSetToFalseForMySQLServers"
      description: "Ensure public network access enabled is set to False for mySQL\
        \ servers."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurepublicnetworkaccessenabledissettofalseformysqlservers"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureSendEmailNotificationForHighSeverityAlertsIsEnabled:
      name: "org.openrewrite.terraform.azure.EnsureSendEmailNotificationForHighSeverityAlertsIsEnabled"
      description: "Ensure Send email notification for high severity alerts is enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensuresendemailnotificationforhighseverityalertsisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureSendEmailNotificationForHighSeverityAlertsToAdminsIsEnabled:
      name: "org.openrewrite.terraform.azure.EnsureSendEmailNotificationForHighSeverityAlertsToAdminsIsEnabled"
      description: "Ensure Send email notification for high severity alerts to admins\
        \ is enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensuresendemailnotificationforhighseverityalertstoadminsisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureStandardPricingTierIsSelected:
      name: "org.openrewrite.terraform.azure.EnsureStandardPricingTierIsSelected"
      description: "Ensure standard pricing tier is selected."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurestandardpricingtierisselected"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureStorageAccountUsesLatestTLSVersion:
      name: "org.openrewrite.terraform.azure.EnsureStorageAccountUsesLatestTLSVersion"
      description: "Communication between an Azure Storage account and a client application\
        \ is encrypted using Transport Layer Security (TLS). Microsoft recommends\
        \ using the latest version of TLS for all your Microsoft Azure App Service\
        \ web applications."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurestorageaccountuseslatesttlsversion"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureTheStorageContainerStoringActivityLogsIsNotPubliclyAccessible:
      name: "org.openrewrite.terraform.azure.EnsureTheStorageContainerStoringActivityLogsIsNotPubliclyAccessible"
      description: "Ensure the storage container storing activity logs is not publicly\
        \ accessible."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurethestoragecontainerstoringactivitylogsisnotpubliclyaccessible"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureWebAppHasIncomingClientCertificatesEnabled:
      name: "org.openrewrite.terraform.azure.EnsureWebAppHasIncomingClientCertificatesEnabled"
      description: "Ensure Web App has incoming client certificates enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurewebapphasincomingclientcertificatesenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureWebAppUsesTheLatestVersionOfHTTP:
      name: "org.openrewrite.terraform.azure.EnsureWebAppUsesTheLatestVersionOfHTTP"
      description: "Ensure Web App uses the latest version of HTTP."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurewebappusesthelatestversionofhttp"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.EnsureWebAppUsesTheLatestVersionOfTLSEncryption:
      name: "org.openrewrite.terraform.azure.EnsureWebAppUsesTheLatestVersionOfTLSEncryption"
      description: "Ensure Web App uses the latest version of TLS encryption."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/ensurewebappusesthelatestversionoftlsencryption"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.azure.SetAzureStorageAccountDefaultNetworkAccessToDeny:
      name: "org.openrewrite.terraform.azure.SetAzureStorageAccountDefaultNetworkAccessToDeny"
      description: "Ensure Azure Storage Account default network access is set to\
        \ Deny."
      docLink: "https://docs.openrewrite.org/recipes/terraform/azure/setazurestorageaccountdefaultnetworkaccesstodeny"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnablePodSecurityPolicyControllerOnGKEClusters:
      name: "org.openrewrite.terraform.gcp.EnablePodSecurityPolicyControllerOnGKEClusters"
      description: "Ensure `PodSecurityPolicy` controller is enabled on Google Kubernetes\
        \ Engine (GKE) clusters."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/enablepodsecuritypolicycontrollerongkeclusters"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnableVPCFlowLogsAndIntranodeVisibility:
      name: "org.openrewrite.terraform.gcp.EnableVPCFlowLogsAndIntranodeVisibility"
      description: "Enable VPC flow logs and intranode visibility."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/enablevpcflowlogsandintranodevisibility"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnableVPCFlowLogsForSubnetworks:
      name: "org.openrewrite.terraform.gcp.EnableVPCFlowLogsForSubnetworks"
      description: "Ensure GCP VPC flow logs for subnets are enabled. Flow Logs capture\
        \ information on IP traffic moving through network interfaces. This information\
        \ can be used to monitor anomalous traffic and provide security insights."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/enablevpcflowlogsforsubnetworks"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsureBinaryAuthorizationIsUsed:
      name: "org.openrewrite.terraform.gcp.EnsureBinaryAuthorizationIsUsed"
      description: "Ensure binary authorization is used."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensurebinaryauthorizationisused"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsureComputeInstancesLaunchWithShieldedVMEnabled:
      name: "org.openrewrite.terraform.gcp.EnsureComputeInstancesLaunchWithShieldedVMEnabled"
      description: "Ensure compute instances launch with shielded VM enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensurecomputeinstanceslaunchwithshieldedvmenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsureGCPCloudStorageBucketWithUniformBucketLevelAccessAreEnabled:
      name: "org.openrewrite.terraform.gcp.EnsureGCPCloudStorageBucketWithUniformBucketLevelAccessAreEnabled"
      description: "Ensure GCP cloud storage bucket with uniform bucket-level access\
        \ are enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensuregcpcloudstoragebucketwithuniformbucketlevelaccessareenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsureGCPKubernetesClusterNodeAutoRepairConfigurationIsEnabled:
      name: "org.openrewrite.terraform.gcp.EnsureGCPKubernetesClusterNodeAutoRepairConfigurationIsEnabled"
      description: "Ensure GCP Kubernetes cluster node auto-repair configuration is\
        \ enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensuregcpkubernetesclusternodeautorepairconfigurationisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsureGCPKubernetesEngineClustersHaveLegacyComputeEngineMetadataEndpointsDisabled:
      name: "org.openrewrite.terraform.gcp.EnsureGCPKubernetesEngineClustersHaveLegacyComputeEngineMetadataEndpointsDisabled"
      description: "Ensure GCP Kubernetes engine clusters have legacy compute engine\
        \ metadata endpoints disabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensuregcpkubernetesengineclustershavelegacycomputeenginemetadataendpointsdisabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsureGCPVMInstancesHaveBlockProjectWideSSHKeysFeatureEnabled:
      name: "org.openrewrite.terraform.gcp.EnsureGCPVMInstancesHaveBlockProjectWideSSHKeysFeatureEnabled"
      description: "Ensure GCP VM instances have block project-wide SSH keys feature\
        \ enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensuregcpvminstanceshaveblockprojectwidesshkeysfeatureenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsureIPForwardingOnInstancesIsDisabled:
      name: "org.openrewrite.terraform.gcp.EnsureIPForwardingOnInstancesIsDisabled"
      description: "Ensure IP forwarding on instances is disabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensureipforwardingoninstancesisdisabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsurePrivateClusterIsEnabledWhenCreatingKubernetesClusters:
      name: "org.openrewrite.terraform.gcp.EnsurePrivateClusterIsEnabledWhenCreatingKubernetesClusters"
      description: "Ensure private cluster is enabled when creating Kubernetes clusters."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensureprivateclusterisenabledwhencreatingkubernetesclusters"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsureSecureBootForShieldedGKENodesIsEnabled:
      name: "org.openrewrite.terraform.gcp.EnsureSecureBootForShieldedGKENodesIsEnabled"
      description: "Ensure secure boot for shielded GKE nodes is enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensuresecurebootforshieldedgkenodesisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsureShieldedGKENodesAreEnabled:
      name: "org.openrewrite.terraform.gcp.EnsureShieldedGKENodesAreEnabled"
      description: "Ensure shielded GKE nodes are enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensureshieldedgkenodesareenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.EnsureTheGKEMetadataServerIsEnabled:
      name: "org.openrewrite.terraform.gcp.EnsureTheGKEMetadataServerIsEnabled"
      description: "Ensure the GKE metadata server is enabled."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/ensurethegkemetadataserverisenabled"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.gcp.GCPBestPractices:
      name: "org.openrewrite.terraform.gcp.GCPBestPractices"
      description: "Securely operate on Google Cloud Platform."
      docLink: "https://docs.openrewrite.org/recipes/terraform/gcp/gcpbestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-terraform"
    org.openrewrite.terraform.search.FindResource:
      name: "org.openrewrite.terraform.search.FindResource"
      description: "Find a Terraform resource by resource type."
      docLink: "https://docs.openrewrite.org/recipes/terraform/search/findresource"
      options:
      - name: "resourceName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-terraform"
rewrite-testing-frameworks:
  artifactId: "rewrite-testing-frameworks"
  version: "3.4.0"
  markdownRecipeDescriptors:
    org.openrewrite.java.testing.archunit.ArchUnit0to1Migration:
      name: "org.openrewrite.java.testing.archunit.ArchUnit0to1Migration"
      description: "Upgrade ArchUnit from 0.x to 1.x."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/archunit/archunit0to1migration"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.arquillian.ArquillianJUnit4ToArquillianJUnit5:
      name: "org.openrewrite.java.testing.arquillian.ArquillianJUnit4ToArquillianJUnit5"
      description: "Migrates Arquillian JUnit 4 to JUnit 5."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/arquillian/arquillianjunit4toarquillianjunit5"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.arquillian.ReplaceArquillianInSequenceAnnotation:
      name: "org.openrewrite.java.testing.arquillian.ReplaceArquillianInSequenceAnnotation"
      description: "Transforms the Arquillian JUnit 4 `@InSequence` to the JUnit Jupiter\
        \ `@Order`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/arquillian/replacearquillianinsequenceannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.AdoptAssertJDurationAssertions:
      name: "org.openrewrite.java.testing.assertj.AdoptAssertJDurationAssertions"
      description: "Adopt AssertJ `DurationAssert` assertions for more expressive\
        \ messages."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/adoptassertjdurationassertions"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.Assertj:
      name: "org.openrewrite.java.testing.assertj.Assertj"
      description: "Migrates JUnit asserts to AssertJ and applies best practices to\
        \ assertions."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/assertj"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.CollapseConsecutiveAssertThatStatements:
      name: "org.openrewrite.java.testing.assertj.CollapseConsecutiveAssertThatStatements"
      description: "Collapse consecutive `assertThat` statements into single `assertThat`\
        \ chained statement. This recipe ignores `assertThat` statements that have\
        \ method invocation as parameter."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/collapseconsecutiveassertthatstatements"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.IsEqualToIgnoringMillisToIsCloseToRecipe:
      name: "org.openrewrite.java.testing.assertj.IsEqualToIgnoringMillisToIsCloseToRecipe"
      description: "`isEqualToIgnoringMillis()` is deprecated in favor of `isCloseTo()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/isequaltoignoringmillistoisclosetorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitAssertArrayEqualsToAssertThat:
      name: "org.openrewrite.java.testing.assertj.JUnitAssertArrayEqualsToAssertThat"
      description: "Convert JUnit-style `assertArrayEquals()` to AssertJ's `assertThat().contains()`\
        \ equivalents."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitassertarrayequalstoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitAssertEqualsToAssertThat:
      name: "org.openrewrite.java.testing.assertj.JUnitAssertEqualsToAssertThat"
      description: "Convert JUnit-style `assertEquals()` to AssertJ's `assertThat().isEqualTo()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitassertequalstoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitAssertFalseToAssertThat:
      name: "org.openrewrite.java.testing.assertj.JUnitAssertFalseToAssertThat"
      description: "Convert JUnit-style `assertFalse()` to AssertJ's `assertThat().isFalse()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitassertfalsetoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitAssertInstanceOfToAssertThat:
      name: "org.openrewrite.java.testing.assertj.JUnitAssertInstanceOfToAssertThat"
      description: "Convert JUnit-style `assertInstanceOf()` to AssertJ's `assertThat().isInstanceOf()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitassertinstanceoftoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitAssertNotEqualsToAssertThat:
      name: "org.openrewrite.java.testing.assertj.JUnitAssertNotEqualsToAssertThat"
      description: "Convert JUnit-style `assertNotEquals()` to AssertJ's `assertThat().isNotEqualTo()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitassertnotequalstoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitAssertNotNullToAssertThat:
      name: "org.openrewrite.java.testing.assertj.JUnitAssertNotNullToAssertThat"
      description: "Convert JUnit-style `assertNotNull()` to AssertJ's `assertThat().isNotNull()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitassertnotnulltoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitAssertNullToAssertThat:
      name: "org.openrewrite.java.testing.assertj.JUnitAssertNullToAssertThat"
      description: "Convert JUnit-style `assertNull()` to AssertJ's `assertThat().isNull()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitassertnulltoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitAssertSameToAssertThat:
      name: "org.openrewrite.java.testing.assertj.JUnitAssertSameToAssertThat"
      description: "Convert JUnit-style `assertSame()` to AssertJ's `assertThat().isSameAs()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitassertsametoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitAssertThrowsToAssertExceptionType:
      name: "org.openrewrite.java.testing.assertj.JUnitAssertThrowsToAssertExceptionType"
      description: "Convert `JUnit#AssertThrows` to `AssertJ#assertThatExceptionOfType`\
        \ to allow for chained assertions on the thrown exception."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitassertthrowstoassertexceptiontype"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitAssertTrueToAssertThat:
      name: "org.openrewrite.java.testing.assertj.JUnitAssertTrueToAssertThat"
      description: "Convert JUnit-style `assertTrue()` to AssertJ's `assertThat().isTrue()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitasserttruetoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitFailToAssertJFail:
      name: "org.openrewrite.java.testing.assertj.JUnitFailToAssertJFail"
      description: "Convert JUnit-style `fail()` to AssertJ's `fail()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junitfailtoassertjfail"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.JUnitToAssertj:
      name: "org.openrewrite.java.testing.assertj.JUnitToAssertj"
      description: "AssertJ provides a rich set of assertions, truly helpful error\
        \ messages, improves test code readability. Converts assertions from `org.junit.jupiter.api.Assertions`\
        \ to `org.assertj.core.api.Assertions`. Will convert JUnit 4 to JUnit Jupiter\
        \ if necessary to match and modify assertions."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/junittoassertj"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.SimplifyAssertJAssertion:
      name: "org.openrewrite.java.testing.assertj.SimplifyAssertJAssertion"
      description: "Simplify AssertJ assertions by replacing them with more expressiove\
        \ dedicated assertions."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/simplifyassertjassertion"
      options:
      - name: "assertToReplace"
        type: "String"
        required: false
      - name: "dedicatedAssertion"
        type: "String"
        required: true
      - name: "literalArgument"
        type: "String"
        required: true
      - name: "requiredType"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.SimplifyAssertJAssertions:
      name: "org.openrewrite.java.testing.assertj.SimplifyAssertJAssertions"
      description: "Replace AssertJ assertions where a dedicated assertion is available\
        \ for the same actual value."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/simplifyassertjassertions"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.SimplifyChainedAssertJAssertion:
      name: "org.openrewrite.java.testing.assertj.SimplifyChainedAssertJAssertion"
      description: "Many AssertJ chained assertions have dedicated assertions that\
        \ function the same. It is best to use the dedicated assertions."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/simplifychainedassertjassertion"
      options:
      - name: "assertToReplace"
        type: "String"
        required: false
      - name: "chainedAssertion"
        type: "String"
        required: false
      - name: "dedicatedAssertion"
        type: "String"
        required: false
      - name: "requiredType"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.SimplifyChainedAssertJAssertions:
      name: "org.openrewrite.java.testing.assertj.SimplifyChainedAssertJAssertions"
      description: "Replace AssertJ assertions where a method is called on the actual\
        \ value with a dedicated assertion."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/simplifychainedassertjassertions"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.assertj.StaticImports:
      name: "org.openrewrite.java.testing.assertj.StaticImports"
      description: "Consistently use a static import rather than inlining the `Assertions`\
        \ class name in tests."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/assertj/staticimports"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertEqualsBooleanToAssertBoolean:
      name: "org.openrewrite.java.testing.cleanup.AssertEqualsBooleanToAssertBoolean"
      description: "Using `assertFalse` or `assertTrue` is simpler and more clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/assertequalsbooleantoassertboolean"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertEqualsNullToAssertNull:
      name: "org.openrewrite.java.testing.cleanup.AssertEqualsNullToAssertNull"
      description: "Using `assertNull(a)` is simpler and more clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/assertequalsnulltoassertnull"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertFalseEqualsToAssertNotEquals:
      name: "org.openrewrite.java.testing.cleanup.AssertFalseEqualsToAssertNotEquals"
      description: "Using `assertNotEquals(a,b)` is simpler and more clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/assertfalseequalstoassertnotequals"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertFalseNegationToAssertTrue:
      name: "org.openrewrite.java.testing.cleanup.AssertFalseNegationToAssertTrue"
      description: "Using `assertTrue` is simpler and more clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/assertfalsenegationtoasserttrue"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertFalseNullToAssertNotNull:
      name: "org.openrewrite.java.testing.cleanup.AssertFalseNullToAssertNotNull"
      description: "Using `assertNotNull(a)` is simpler and more clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/assertfalsenulltoassertnotnull"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertLiteralBooleanToFailRecipe:
      name: "org.openrewrite.java.testing.cleanup.AssertLiteralBooleanToFailRecipe"
      description: "Using fail is more direct and clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/assertliteralbooleantofailrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertNotEqualsBooleanToAssertBoolean:
      name: "org.openrewrite.java.testing.cleanup.AssertNotEqualsBooleanToAssertBoolean"
      description: "Using `assertFalse` or `assertTrue` is simpler and more clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/assertnotequalsbooleantoassertboolean"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertTrueComparisonToAssertEquals:
      name: "org.openrewrite.java.testing.cleanup.AssertTrueComparisonToAssertEquals"
      description: "Using `assertEquals(a,b)` is simpler and more clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/asserttruecomparisontoassertequals"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertTrueEqualsToAssertEquals:
      name: "org.openrewrite.java.testing.cleanup.AssertTrueEqualsToAssertEquals"
      description: "Using `assertEquals(a,b)` is simpler and more clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/asserttrueequalstoassertequals"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertTrueNegationToAssertFalse:
      name: "org.openrewrite.java.testing.cleanup.AssertTrueNegationToAssertFalse"
      description: "Using `assertFalse` is simpler and more clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/asserttruenegationtoassertfalse"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertTrueNullToAssertNull:
      name: "org.openrewrite.java.testing.cleanup.AssertTrueNullToAssertNull"
      description: "Using `assertNull(a)` is simpler and more clear."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/asserttruenulltoassertnull"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.AssertionsArgumentOrder:
      name: "org.openrewrite.java.testing.cleanup.AssertionsArgumentOrder"
      description: "Assertions such as `org.junit.Assert.assertEquals` expect the\
        \ first argument to be the expected value and the second argument to be the\
        \ actual value; for `org.testng.Assert`, it’s the other way around.  This\
        \ recipe detects `J.Literal`, `J.NewArray`, and `java.util.Iterable` arguments\
        \ swapping them if necessary so that the error messages won't be confusing."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/assertionsargumentorder"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.BestPractices:
      name: "org.openrewrite.java.testing.cleanup.BestPractices"
      description: "Applies best practices to tests."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/bestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.RemoveEmptyTests:
      name: "org.openrewrite.java.testing.cleanup.RemoveEmptyTests"
      description: "Removes empty methods with a `@Test` annotation if the body does\
        \ not have comments."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/removeemptytests"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.RemoveTestPrefix:
      name: "org.openrewrite.java.testing.cleanup.RemoveTestPrefix"
      description: "Remove `test` from methods with `@Test`, `@ParameterizedTest`,\
        \ `@RepeatedTest` or `@TestFactory`. They no longer have to prefix test to\
        \ be usable by JUnit 5."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/removetestprefix"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.SimplifyTestThrows:
      name: "org.openrewrite.java.testing.cleanup.SimplifyTestThrows"
      description: "Replace all thrown exception classes of test method signatures\
        \ by `Exception`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/simplifytestthrows"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.TestsShouldIncludeAssertions:
      name: "org.openrewrite.java.testing.cleanup.TestsShouldIncludeAssertions"
      description: "For tests not having any assertions, wrap the statements with\
        \ JUnit Jupiter's `Assertions#assertDoesNotThrow(..)`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/testsshouldincludeassertions"
      options:
      - name: "additionalAsserts"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.cleanup.TestsShouldNotBePublic:
      name: "org.openrewrite.java.testing.cleanup.TestsShouldNotBePublic"
      description: "Remove `public` and optionally `protected` modifiers from methods\
        \ with `@Test`, `@ParameterizedTest`, `@RepeatedTest`, `@TestFactory`, `@BeforeEach`,\
        \ `@AfterEach`, `@BeforeAll`, or `@AfterAll`. They no longer have to be public\
        \ visibility to be usable by JUnit 5."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/cleanup/testsshouldnotbepublic"
      options:
      - name: "removeProtectedModifiers"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.datafaker.JavaFakerToDataFaker:
      name: "org.openrewrite.java.testing.datafaker.JavaFakerToDataFaker"
      description: "Change imports and dependencies related to Java Faker to Datafaker\
        \ replacements."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/datafaker/javafakertodatafaker"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.dbrider.ExecutionListenerToDbRiderAnnotation:
      name: "org.openrewrite.java.testing.dbrider.ExecutionListenerToDbRiderAnnotation"
      description: "Migrate the `DBRiderTestExecutionListener` to the `@DBRider` annotation.\
        \ This recipe is useful when migrating from JUnit 4 `dbrider-spring` to JUnit\
        \ 5 `dbrider-junit5`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/dbrider/executionlistenertodbriderannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.dbrider.MigrateDbRiderSpringToDbRiderJUnit5:
      name: "org.openrewrite.java.testing.dbrider.MigrateDbRiderSpringToDbRiderJUnit5"
      description: "This recipe will migrate the necessary dependencies and annotations\
        \ from DbRider with JUnit4 to JUnit5 in a Spring application."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/dbrider/migratedbriderspringtodbriderjunit5"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.easymock.EasyMockToMockito:
      name: "org.openrewrite.java.testing.easymock.EasyMockToMockito"
      description: "This recipe will apply changes commonly needed when migrating\
        \ from EasyMock to Mockito."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/easymock/easymocktomockito"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.easymock.EasyMockVerifyToMockitoVerify:
      name: "org.openrewrite.java.testing.easymock.EasyMockVerifyToMockitoVerify"
      description: "Replace `EasyMock.verify(dependency)` with individual `Mockito.verify(dependency).method()`\
        \ calls based on expected methods."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/easymock/easymockverifytomockitoverify"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.easymock.RemoveExtendsEasyMockSupport:
      name: "org.openrewrite.java.testing.easymock.RemoveExtendsEasyMockSupport"
      description: "Modify test classes by removing extends EasyMockSupport and replacing\
        \ EasyMock methods with Mockito equivalents."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/easymock/removeextendseasymocksupport"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.AddHamcrestIfUsed:
      name: "org.openrewrite.java.testing.hamcrest.AddHamcrestIfUsed"
      description: "JUnit Jupiter does not include hamcrest as a transitive dependency.\
        \ If needed, add a direct dependency."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/addhamcrestifused"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.AssertThatBooleanToAssertJ:
      name: "org.openrewrite.java.testing.hamcrest.AssertThatBooleanToAssertJ"
      description: "Replace Hamcrest `assertThat(String, boolean)` with AssertJ `assertThat(boolean).as(String).isTrue()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/assertthatbooleantoassertj"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.ConsistentHamcrestMatcherImports:
      name: "org.openrewrite.java.testing.hamcrest.ConsistentHamcrestMatcherImports"
      description: "Use consistent imports for Hamcrest matchers, and remove wrapping\
        \ `is(Matcher)` calls ahead of further changes."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/consistenthamcrestmatcherimports"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.HamcrestInstanceOfToJUnit5:
      name: "org.openrewrite.java.testing.hamcrest.HamcrestInstanceOfToJUnit5"
      description: "Migrate from Hamcrest `instanceOf` and `isA` matcher to JUnit5\
        \ `assertInstanceOf` assertion."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/hamcrestinstanceoftojunit5"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.HamcrestIsMatcherToAssertJ:
      name: "org.openrewrite.java.testing.hamcrest.HamcrestIsMatcherToAssertJ"
      description: "Migrate Hamcrest `is(Object)` to AssertJ `Assertions.assertThat(..)`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/hamcrestismatchertoassertj"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.HamcrestMatcherToAssertJ:
      name: "org.openrewrite.java.testing.hamcrest.HamcrestMatcherToAssertJ"
      description: "Migrate from Hamcrest `Matcher` to AssertJ assertions."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/hamcrestmatchertoassertj"
      options:
      - name: "argumentType"
        type: "String"
        required: false
      - name: "assertion"
        type: "String"
        required: false
      - name: "matcher"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.HamcrestMatcherToJUnit5:
      name: "org.openrewrite.java.testing.hamcrest.HamcrestMatcherToJUnit5"
      description: "Migrate from Hamcrest `Matcher` to JUnit 5 assertions."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/hamcrestmatchertojunit5"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.HamcrestNotMatcherToAssertJ:
      name: "org.openrewrite.java.testing.hamcrest.HamcrestNotMatcherToAssertJ"
      description: "Migrate from Hamcrest `not(Matcher)` to AssertJ assertions."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/hamcrestnotmatchertoassertj"
      options:
      - name: "assertion"
        type: "String"
        required: false
      - name: "notMatcher"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.HamcrestOfMatchersToAssertJ:
      name: "org.openrewrite.java.testing.hamcrest.HamcrestOfMatchersToAssertJ"
      description: "Migrate the `anyOf` Hamcrest Matcher to AssertJ's `satisfiesAnyOf`\
        \ assertion."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/hamcrestofmatcherstoassertj"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.MigrateHamcrestToAssertJ:
      name: "org.openrewrite.java.testing.hamcrest.MigrateHamcrestToAssertJ"
      description: "Migrate Hamcrest `assertThat(..)` to AssertJ `Assertions`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/migratehamcresttoassertj"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.MigrateHamcrestToJUnit5:
      name: "org.openrewrite.java.testing.hamcrest.MigrateHamcrestToJUnit5"
      description: "Migrate Hamcrest `assertThat(..)` to JUnit Jupiter `Assertions`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/migratehamcresttojunit5"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.hamcrest.RemoveIsMatcher:
      name: "org.openrewrite.java.testing.hamcrest.RemoveIsMatcher"
      description: "Remove Hamcrest `is(Matcher)` ahead of migration."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/hamcrest/removeismatcher"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.jmockit.JMockitAnnotatedArgumentToMockito:
      name: "org.openrewrite.java.testing.jmockit.JMockitAnnotatedArgumentToMockito"
      description: "Convert JMockit `@Mocked` and `@Injectable` annotated arguments\
        \ into Mockito statements."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/jmockit/jmockitannotatedargumenttomockito"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.jmockit.JMockitBlockToMockito:
      name: "org.openrewrite.java.testing.jmockit.JMockitBlockToMockito"
      description: "Rewrites JMockit `Expectations, NonStrictExpectations, Verifications,\
        \ VerificationsInOrder, FullVerifications` blocks to Mockito statements."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/jmockit/jmockitblocktomockito"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.jmockit.JMockitMockUpToMockito:
      name: "org.openrewrite.java.testing.jmockit.JMockitMockUpToMockito"
      description: "Rewrites JMockit `MockUp` blocks to Mockito statements. This recipe\
        \ will not rewrite private methods in MockUp."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/jmockit/jmockitmockuptomockito"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.jmockit.JMockitToMockito:
      name: "org.openrewrite.java.testing.jmockit.JMockitToMockito"
      description: "This recipe will apply changes commonly needed when migrating\
        \ from JMockit to Mockito."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/jmockit/jmockittomockito"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.AddHamcrestJUnitDependency:
      name: "org.openrewrite.java.testing.junit5.AddHamcrestJUnitDependency"
      description: "Add Hamcrest JUnit dependency only if JUnit 4's `assertThat` or\
        \ `assumeThat` is used."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/addhamcrestjunitdependency"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.AddJupiterDependencies:
      name: "org.openrewrite.java.testing.junit5.AddJupiterDependencies"
      description: "Adds JUnit Jupiter dependencies to a Maven or Gradle project.\
        \ Junit Jupiter can be added either with the artifact junit-jupiter, or both\
        \ of junit-jupiter-api and junit-jupiter-engine. This adds \"junit-jupiter\"\
        \ dependency unless \"junit-jupiter-api\" or \"junit-jupiter-engine\" are\
        \ already present."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/addjupiterdependencies"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.AddMissingNested:
      name: "org.openrewrite.java.testing.junit5.AddMissingNested"
      description: "Adds `@Nested` to inner classes that contain JUnit 5 tests."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/addmissingnested"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.AddMissingTestBeforeAfterAnnotations:
      name: "org.openrewrite.java.testing.junit5.AddMissingTestBeforeAfterAnnotations"
      description: "Adds `@BeforeEach`, `@AfterEach`, `@Test` to methods overriding\
        \ superclass methods if the annotations are present on the superclass method."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/addmissingtestbeforeafterannotations"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.AddParameterizedTestAnnotation:
      name: "org.openrewrite.java.testing.junit5.AddParameterizedTestAnnotation"
      description: "Add missing `@ParameterizedTest` annotation when `@ValueSource`\
        \ is used or replace `@Test` with `@ParameterizedTest`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/addparameterizedtestannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.AssertThrowsOnLastStatement:
      name: "org.openrewrite.java.testing.junit5.AssertThrowsOnLastStatement"
      description: "Applies JUnit 5 `assertThrows` on last statement in lambda block\
        \ only. In rare cases may cause compilation errors if the lambda uses effectively\
        \ non final variables. In some cases, tests might fail if earlier statements\
        \ in the lambda block throw exceptions."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/assertthrowsonlaststatement"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.AssertToAssertions:
      name: "org.openrewrite.java.testing.junit5.AssertToAssertions"
      description: "Change JUnit 4's `org.junit.Assert` into JUnit Jupiter's `org.junit.jupiter.api.Assertions`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/asserttoassertions"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.AssertTrueInstanceofToAssertInstanceOf:
      name: "org.openrewrite.java.testing.junit5.AssertTrueInstanceofToAssertInstanceOf"
      description: "Migration of JUnit4 (or potentially JUnit5) test case in form\
        \ of assertTrue(x instanceof y) to assertInstanceOf(y.class, x)."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/asserttrueinstanceoftoassertinstanceof"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.CategoryToTag:
      name: "org.openrewrite.java.testing.junit5.CategoryToTag"
      description: "Transforms the JUnit 4 `@Category`, which can list multiple categories,\
        \ into one `@Tag` annotation per category listed."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/categorytotag"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.CleanupAssertions:
      name: "org.openrewrite.java.testing.junit5.CleanupAssertions"
      description: "Simplifies JUnit Jupiter assertions to their most-direct equivalents."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/cleanupassertions"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.CleanupJUnitImports:
      name: "org.openrewrite.java.testing.junit5.CleanupJUnitImports"
      description: "Removes unused `org.junit` import symbols."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/cleanupjunitimports"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.EnclosedToNested:
      name: "org.openrewrite.java.testing.junit5.EnclosedToNested"
      description: "Removes the `Enclosed` specification from a class, with `Nested`\
        \ added to its inner classes by `AddMissingNested`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/enclosedtonested"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.ExpectedExceptionToAssertThrows:
      name: "org.openrewrite.java.testing.junit5.ExpectedExceptionToAssertThrows"
      description: "Replace usages of JUnit 4's `@Rule ExpectedException` with JUnit\
        \ 5's `Assertions.assertThrows()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/expectedexceptiontoassertthrows"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.GradleUseJunitJupiter:
      name: "org.openrewrite.java.testing.junit5.GradleUseJunitJupiter"
      description: "By default Gradle's `Test` tasks use JUnit 4. Gradle `Test` tasks\
        \ must be configured with `useJUnitPlatform()` to run JUnit Jupiter tests.\
        \ This recipe adds the `useJUnitPlatform()` method call to the `Test` task\
        \ configuration."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/gradleusejunitjupiter"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.IgnoreToDisabled:
      name: "org.openrewrite.java.testing.junit5.IgnoreToDisabled"
      description: "Migrates JUnit 4.x `@Ignore` to JUnit Jupiter `@Disabled`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/ignoretodisabled"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.JUnit4to5Migration:
      name: "org.openrewrite.java.testing.junit5.JUnit4to5Migration"
      description: "Migrates JUnit 4.x tests to JUnit Jupiter."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/junit4to5migration"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.JUnit5BestPractices:
      name: "org.openrewrite.java.testing.junit5.JUnit5BestPractices"
      description: "Applies best practices to tests."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/junit5bestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.JUnitParamsRunnerToParameterized:
      name: "org.openrewrite.java.testing.junit5.JUnitParamsRunnerToParameterized"
      description: "Convert Pragmatists Parameterized test to the JUnit Jupiter ParameterizedTest\
        \ equivalent."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/junitparamsrunnertoparameterized"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.LifecycleNonPrivate:
      name: "org.openrewrite.java.testing.junit5.LifecycleNonPrivate"
      description: "Make JUnit 5's `@AfterAll`, `@AfterEach`, `@BeforeAll` and `@BeforeEach`\
        \ non private."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/lifecyclenonprivate"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.MigrateAssumptions:
      name: "org.openrewrite.java.testing.junit5.MigrateAssumptions"
      description: "Many of JUnit 4's `Assume#assume(..)` methods have no direct counterpart\
        \ in JUnit 5 and require Hamcrest JUnit's `MatcherAssume`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/migrateassumptions"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.MigrateJUnitTestCase:
      name: "org.openrewrite.java.testing.junit5.MigrateJUnitTestCase"
      description: "Convert JUnit 4 `TestCase` to JUnit Jupiter."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/migratejunittestcase"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.MockitoJUnitToMockitoExtension:
      name: "org.openrewrite.java.testing.junit5.MockitoJUnitToMockitoExtension"
      description: "Replaces `MockitoJUnit` rules with `MockitoExtension`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/mockitojunittomockitoextension"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.ParameterizedRunnerToParameterized:
      name: "org.openrewrite.java.testing.junit5.ParameterizedRunnerToParameterized"
      description: "Convert JUnit 4 parameterized runner the JUnit Jupiter parameterized\
        \ test equivalent."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/parameterizedrunnertoparameterized"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.RemoveDuplicateTestTemplates:
      name: "org.openrewrite.java.testing.junit5.RemoveDuplicateTestTemplates"
      description: "Remove duplicates uses of @TestTemplate implementations for a\
        \ single method."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/removeduplicatetesttemplates"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.RemoveObsoleteRunners:
      name: "org.openrewrite.java.testing.junit5.RemoveObsoleteRunners"
      description: "Some JUnit 4 `@RunWith` annotations do not require replacement\
        \ with an equivalent JUnit Jupiter `@ExtendsWith` annotation. This can be\
        \ used to remove those runners that either do not have a JUnit Jupiter equivalent\
        \ or do not require a replacement as part of JUnit 4 to 5 migration."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/removeobsoleterunners"
      options:
      - name: "obsoleteRunners"
        type: "List"
        required: true
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.RemoveTryCatchFailBlocks:
      name: "org.openrewrite.java.testing.junit5.RemoveTryCatchFailBlocks"
      description: "Replace `try-catch` blocks where `catch` merely contains a `fail()`\
        \ for `fail(String)` statement with `Assertions.assertDoesNotThrow(() -> {\
        \ ... })`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/removetrycatchfailblocks"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.RunnerToExtension:
      name: "org.openrewrite.java.testing.junit5.RunnerToExtension"
      description: "Replace runners with the JUnit Jupiter extension equivalent."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/runnertoextension"
      options:
      - name: "extension"
        type: "String"
        required: true
      - name: "runners"
        type: "List"
        required: true
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.StaticImports:
      name: "org.openrewrite.java.testing.junit5.StaticImports"
      description: "Always use a static import for assertion methods."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/staticimports"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.TempDirNonFinal:
      name: "org.openrewrite.java.testing.junit5.TempDirNonFinal"
      description: "Make JUnit 5's `org.junit.jupiter.api.io.TempDir` fields non final."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/tempdirnonfinal"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.TemporaryFolderToTempDir:
      name: "org.openrewrite.java.testing.junit5.TemporaryFolderToTempDir"
      description: "Translates JUnit 4's `org.junit.rules.TemporaryFolder` into JUnit\
        \ 5's `org.junit.jupiter.api.io.TempDir`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/temporaryfoldertotempdir"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.TestRuleToTestInfo:
      name: "org.openrewrite.java.testing.junit5.TestRuleToTestInfo"
      description: "Replace usages of JUnit 4's `@Rule TestName` with JUnit 5's TestInfo."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/testruletotestinfo"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.ThrowingRunnableToExecutable:
      name: "org.openrewrite.java.testing.junit5.ThrowingRunnableToExecutable"
      description: "Migrates JUnit 4.x `ThrowingRunnable` to JUnit Jupiter `Executable`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/throwingrunnabletoexecutable"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UpdateBeforeAfterAnnotations:
      name: "org.openrewrite.java.testing.junit5.UpdateBeforeAfterAnnotations"
      description: "Replace JUnit 4's `@Before`, `@BeforeClass`, `@After`, and `@AfterClass`\
        \ annotations with their JUnit Jupiter equivalents."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/updatebeforeafterannotations"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UpdateMockWebServer:
      name: "org.openrewrite.java.testing.junit5.UpdateMockWebServer"
      description: "Replace usages of okhttp3 3.x `@Rule` MockWebServer with 4.x `MockWebServer`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/updatemockwebserver"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UpdateTestAnnotation:
      name: "org.openrewrite.java.testing.junit5.UpdateTestAnnotation"
      description: "Update usages of JUnit 4's `@org.junit.Test` annotation to JUnit\
        \ 5's `org.junit.jupiter.api.Test` annotation."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/updatetestannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UpgradeOkHttpMockWebServer:
      name: "org.openrewrite.java.testing.junit5.UpgradeOkHttpMockWebServer"
      description: "Migrates OkHttp 3 `MockWebServer` to enable JUnit Jupiter Extension\
        \ support."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/upgradeokhttpmockwebserver"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UpgradeSurefirePlugin:
      name: "org.openrewrite.java.testing.junit5.UpgradeSurefirePlugin"
      description: "Upgrades the Maven Surefire Plugin to the latest version if still\
        \ using an older Maven version."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/upgradesurefireplugin"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UseAssertSame:
      name: "org.openrewrite.java.testing.junit5.UseAssertSame"
      description: "Prefers the usage of `assertSame` or `assertNotSame` methods instead\
        \ of using of vanilla `assertTrue` or `assertFalse` with a boolean comparison."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/useassertsame"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UseHamcrestAssertThat:
      name: "org.openrewrite.java.testing.junit5.UseHamcrestAssertThat"
      description: "JUnit 4's `Assert#assertThat(..)` This method was deprecated in\
        \ JUnit 4 and removed in JUnit Jupiter."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/usehamcrestassertthat"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UseMockitoExtension:
      name: "org.openrewrite.java.testing.junit5.UseMockitoExtension"
      description: "Migrate uses of `@RunWith(MockitoJUnitRunner.class)` (and similar\
        \ annotations) to `@ExtendWith(MockitoExtension.class)`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/usemockitoextension"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UseTestMethodOrder:
      name: "org.openrewrite.java.testing.junit5.UseTestMethodOrder"
      description: "JUnit optionally allows test method execution order to be specified.\
        \ This replaces JUnit 4 test execution ordering annotations with JUnit 5 replacements."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/usetestmethodorder"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UseWiremockExtension:
      name: "org.openrewrite.java.testing.junit5.UseWiremockExtension"
      description: "As of 2.31.0, wiremock [supports JUnit 5](https://wiremock.org/docs/junit-jupiter/)\
        \ via an extension."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/usewiremockextension"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.UseXMLUnitLegacy:
      name: "org.openrewrite.java.testing.junit5.UseXMLUnitLegacy"
      description: "Migrates XMLUnit 1.x to XMLUnit legacy 2.x."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/usexmlunitlegacy"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.junit5.VertxUnitToVertxJunit5:
      name: "org.openrewrite.java.testing.junit5.VertxUnitToVertxJunit5"
      description: "Migrates Vert.x `@RunWith` `VertxUnitRunner` to the JUnit Jupiter\
        \ `@ExtendWith` `VertxExtension`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/junit5/vertxunittovertxjunit5"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.AnyStringToNullable:
      name: "org.openrewrite.java.testing.mockito.AnyStringToNullable"
      description: "Since Mockito 2.10 `anyString()` no longer matches null values.\
        \ Use `nullable(Class)` instead."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/anystringtonullable"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.AnyToNullable:
      name: "org.openrewrite.java.testing.mockito.AnyToNullable"
      description: "Since Mockito 2.10 `anyString()` and `any()` no longer matches\
        \ null values. Use `nullable(Class)` instead."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/anytonullable"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.CleanupMockitoImports:
      name: "org.openrewrite.java.testing.mockito.CleanupMockitoImports"
      description: "Removes unused `org.mockito` import symbols, unless its possible\
        \ they are associated with method invocations having null or unknown type\
        \ information."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/cleanupmockitoimports"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.MockUtilsToStatic:
      name: "org.openrewrite.java.testing.mockito.MockUtilsToStatic"
      description: "Best-effort attempt to remove Mockito `MockUtil` instances."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/mockutilstostatic"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.Mockito1to3Migration:
      name: "org.openrewrite.java.testing.mockito.Mockito1to3Migration"
      description: "Upgrade Mockito from 1.x to 3.x."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/mockito1to3migration"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.Mockito1to4Migration:
      name: "org.openrewrite.java.testing.mockito.Mockito1to4Migration"
      description: "Upgrade Mockito from 1.x to 4.x."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/mockito1to4migration"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.Mockito1to5Migration:
      name: "org.openrewrite.java.testing.mockito.Mockito1to5Migration"
      description: "Upgrade Mockito from 1.x to 5.x."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/mockito1to5migration"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.Mockito4to5Only:
      name: "org.openrewrite.java.testing.mockito.Mockito4to5Only"
      description: "Upgrade Mockito from 4.x to 5.x. Does not include 1.x to 4.x migration."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/mockito4to5only"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.MockitoBestPractices:
      name: "org.openrewrite.java.testing.mockito.MockitoBestPractices"
      description: "Applies best practices for Mockito tests."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/mockitobestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.MockitoJUnitRunnerSilentToExtension:
      name: "org.openrewrite.java.testing.mockito.MockitoJUnitRunnerSilentToExtension"
      description: "Replace `@RunWith(MockitoJUnitRunner.Silent.class)` with `@ExtendWith(MockitoExtension.class)`\
        \ and `@MockitoSettings(strictness = Strictness.LENIENT)`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/mockitojunitrunnersilenttoextension"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.MockitoWhenOnStaticToMockStatic:
      name: "org.openrewrite.java.testing.mockito.MockitoWhenOnStaticToMockStatic"
      description: "Replace `Mockito.when` on static (non mock) with try-with-resource\
        \ with MockedStatic as Mockito4 no longer allows this."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/mockitowhenonstatictomockstatic"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.NoInitializationForInjectMock:
      name: "org.openrewrite.java.testing.mockito.NoInitializationForInjectMock"
      description: "Removes unnecessary initialization for fields annotated with `@InjectMocks`\
        \ in Mockito tests. If the field was final, the final modifier is removed."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/noinitializationforinjectmock"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.PowerMockitoMockStaticToMockito:
      name: "org.openrewrite.java.testing.mockito.PowerMockitoMockStaticToMockito"
      description: "Replaces `PowerMockito.mockStatic()` by `Mockito.mockStatic()`.\
        \ Removes the `@PrepareForTest` annotation."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/powermockitomockstatictomockito"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.RemoveTimesZeroAndOne:
      name: "org.openrewrite.java.testing.mockito.RemoveTimesZeroAndOne"
      description: "Remove `Mockito.times(0)` and `Mockito.times(0)` from `Mockito.verify()`\
        \ calls."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/removetimeszeroandone"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.ReplacePowerMockito:
      name: "org.openrewrite.java.testing.mockito.ReplacePowerMockito"
      description: "PowerMockito with raw Mockito; best executed as part of a Mockito\
        \ upgrade."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/replacepowermockito"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.SimplifyMockitoVerifyWhenGiven:
      name: "org.openrewrite.java.testing.mockito.SimplifyMockitoVerifyWhenGiven"
      description: "Fixes Sonar issue `java:S6068`: Call to Mockito method \"verify\"\
        , \"when\" or \"given\" should be simplified."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/simplifymockitoverifywhengiven"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.mockito.VerifyZeroToNoMoreInteractions:
      name: "org.openrewrite.java.testing.mockito.VerifyZeroToNoMoreInteractions"
      description: "Replaces `verifyZeroInteractions()` with `verifyNoMoreInteractions()`\
        \ in Mockito tests when migration when using a Mockito version < 3.x."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/mockito/verifyzerotonomoreinteractions"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.search.FindUnitTests:
      name: "org.openrewrite.java.testing.search.FindUnitTests"
      description: "Produces a data table showing how methods are used in unit tests."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/search/findunittests"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.testcontainers.ExplicitContainerImage:
      name: "org.openrewrite.java.testing.testcontainers.ExplicitContainerImage"
      description: "Set the image to use for a container explicitly if unset, rather\
        \ than relying on the default image for the container class."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/testcontainers/explicitcontainerimage"
      options:
      - name: "containerClass"
        type: "String"
        required: true
      - name: "image"
        type: "String"
        required: true
      - name: "parseImage"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.testcontainers.ExplicitContainerImages:
      name: "org.openrewrite.java.testing.testcontainers.ExplicitContainerImages"
      description: "Replace implicit default container images and versions with explicit\
        \ versions."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/testcontainers/explicitcontainerimages"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.testcontainers.GetHostMigration:
      name: "org.openrewrite.java.testing.testcontainers.GetHostMigration"
      description: "Replace `org.testcontainers.containers.ContainerState.getContainerIpAddress()`\
        \ with `getHost()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/testcontainers/gethostmigration"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.testcontainers.TestContainersBestPractices:
      name: "org.openrewrite.java.testing.testcontainers.TestContainersBestPractices"
      description: "Apply best practices to Testcontainers usage."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/testcontainers/testcontainersbestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.testng.TestNgAssertEqualsToAssertThat:
      name: "org.openrewrite.java.testing.testng.TestNgAssertEqualsToAssertThat"
      description: "Convert TestNG-style `assertEquals()` to AssertJ's `assertThat().isEqualTo()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/testng/testngassertequalstoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.testng.TestNgAssertNotEqualsToAssertThat:
      name: "org.openrewrite.java.testing.testng.TestNgAssertNotEqualsToAssertThat"
      description: "Convert TestNG-style `assertNotEquals()` to AssertJ's `assertThat().isNotEqualTo()`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/testng/testngassertnotequalstoassertthat"
      options: []
      isImperative: true
      artifactId: "rewrite-testing-frameworks"
    org.openrewrite.java.testing.testng.TestNgToAssertj:
      name: "org.openrewrite.java.testing.testng.TestNgToAssertj"
      description: "Convert assertions from `org.testng.Assert` to `org.assertj.core.api.Assertions`."
      docLink: "https://docs.openrewrite.org/recipes/java/testing/testng/testngtoassertj"
      options: []
      isImperative: false
      artifactId: "rewrite-testing-frameworks"
rewrite-third-party:
  artifactId: "rewrite-third-party"
  version: "0.17.0"
  markdownRecipeDescriptors:
    ai.timefold.solver.migration.ChangeVersion:
      name: "ai.timefold.solver.migration.ChangeVersion"
      description: "Replaces the version of Timefold"
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/changeversion"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.FromOptaPlannerToTimefoldSolver:
      name: "ai.timefold.solver.migration.FromOptaPlannerToTimefoldSolver"
      description: "Replaces your method/field calls, GAVs, etc. To replace deprecated\
        \ methods too, use the recipe ToLatest"
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/fromoptaplannertotimefoldsolver"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.ToLatest:
      name: "ai.timefold.solver.migration.ToLatest"
      description: "Replace all your calls to deleted/deprecated types and methods\
        \ of Timefold Solver with their proper alternatives."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/tolatest"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.fork.TimefoldChangeDependencies:
      name: "ai.timefold.solver.migration.fork.TimefoldChangeDependencies"
      description: "Migrate all Maven and Gradle groupIds and artifactIds from OptaPlanner\
        \ to Timefold."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/fork/timefoldchangedependencies"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.v8.AsConstraintRecipe:
      name: "ai.timefold.solver.migration.v8.AsConstraintRecipe"
      description: "Use `penalize().asConstraint()` and `reward().asConstraint()`\
        \ instead of the deprecated `penalize()` and `reward()` methods."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/v8/asconstraintrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.v8.ConstraintRefRecipe:
      name: "ai.timefold.solver.migration.v8.ConstraintRefRecipe"
      description: "Use `getConstraintRef()` instead of `getConstraintId()` et al."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/v8/constraintrefrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.v8.NullableRecipe:
      name: "ai.timefold.solver.migration.v8.NullableRecipe"
      description: "Removes references to null vars and replace them with unassigned\
        \ values."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/v8/nullablerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.v8.RemoveConstraintPackageRecipe:
      name: "ai.timefold.solver.migration.v8.RemoveConstraintPackageRecipe"
      description: "Remove the use of constraint package from `asConstraint(package,\
        \ name)`."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/v8/removeconstraintpackagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.v8.ScoreGettersRecipe:
      name: "ai.timefold.solver.migration.v8.ScoreGettersRecipe"
      description: "Use `score()` instead of `getScore()` on `Score` implementations."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/v8/scoregettersrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.v8.ScoreManagerMethodsRecipe:
      name: "ai.timefold.solver.migration.v8.ScoreManagerMethodsRecipe"
      description: "Use `explain()` and `update()`    instead of `explainScore()`,\
        \ `updateScore()` and `getSummary()`."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/v8/scoremanagermethodsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.v8.SingleConstraintAssertionMethodsRecipe:
      name: "ai.timefold.solver.migration.v8.SingleConstraintAssertionMethodsRecipe"
      description: "Use `penalizesBy/rewardsWith(String, int)` instead of `penalizesBy/rewardsWith(int,\
        \ String)` on `SingleConstraintAssertion` tests."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/v8/singleconstraintassertionmethodsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.v8.SolutionManagerRecommendAssignmentRecipe:
      name: "ai.timefold.solver.migration.v8.SolutionManagerRecommendAssignmentRecipe"
      description: "Use recommendAssignment() instead of recommendFit()."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/v8/solutionmanagerrecommendassignmentrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ai.timefold.solver.migration.v8.SolverManagerBuilderRecipe:
      name: "ai.timefold.solver.migration.v8.SolverManagerBuilderRecipe"
      description: "Use `solveBuilder()` instead of deprecated solve methods on `SolveManager`."
      docLink: "https://docs.openrewrite.org/recipes/ai/timefold/solver/migration/v8/solvermanagerbuilderrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.camel.camel40.CamelQuarkusMigrationRecipe:
      name: "io.quarkus.updates.camel.camel40.CamelQuarkusMigrationRecipe"
      description: "Migrate `camel3` quarkus application to `camel4` quarkus."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/camel/camel40/camelquarkusmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.camel.camel410.CamelQuarkusMigrationRecipe:
      name: "io.quarkus.updates.camel.camel410.CamelQuarkusMigrationRecipe"
      description: "Migrates `camel 4.9` quarkus application to `camel 4.10`."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/camel/camel410/camelquarkusmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.camel.camel44.CamelQuarkusMigrationRecipe:
      name: "io.quarkus.updates.camel.camel44.CamelQuarkusMigrationRecipe"
      description: "Migrates `camel 4.0` quarkus application to `camel 4.4`."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/camel/camel44/camelquarkusmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.camel.camel47.CamelQuarkusMigrationRecipe:
      name: "io.quarkus.updates.camel.camel47.CamelQuarkusMigrationRecipe"
      description: "Migrates `camel 4.4` quarkus application to `camel 4.8`."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/camel/camel47/camelquarkusmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.camel.camel49.CamelQuarkusMigrationRecipe:
      name: "io.quarkus.updates.camel.camel49.CamelQuarkusMigrationRecipe"
      description: "Migrates `camel 4.8` quarkus application to `camel 4.9`."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/camel/camel49/camelquarkusmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.AdditionalChanges:
      name: "io.quarkus.updates.core.quarkus30.AdditionalChanges"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/additionalchanges"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.AdjustApplicationPropertiesWithJakarta:
      name: "io.quarkus.updates.core.quarkus30.AdjustApplicationPropertiesWithJakarta"
      description: "Adjust application.properties for jakarta.* packages"
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/adjustapplicationpropertieswithjakarta"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.AdjustApplicationYamlWithJakarta:
      name: "io.quarkus.updates.core.quarkus30.AdjustApplicationYamlWithJakarta"
      description: "Adjust application.yaml for jakarta.* packages"
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/adjustapplicationyamlwithjakarta"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.AdjustKotlinAllOpenDirectives:
      name: "io.quarkus.updates.core.quarkus30.AdjustKotlinAllOpenDirectives"
      description: "Adjust all-open directives in Kotlin plugin configuration"
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/adjustkotlinallopendirectives"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.ApplicationProperties:
      name: "io.quarkus.updates.core.quarkus30.ApplicationProperties"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/applicationproperties"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.ApplicationYml:
      name: "io.quarkus.updates.core.quarkus30.ApplicationYml"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/applicationyml"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.ChangeJavaxAnnotationToJakarta:
      name: "io.quarkus.updates.core.quarkus30.ChangeJavaxAnnotationToJakarta"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation. Excludes `javax.annotation.processing`."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/changejavaxannotationtojakarta"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JacksonJavaxToJakarta:
      name: "io.quarkus.updates.core.quarkus30.JacksonJavaxToJakarta"
      description: "Java EE has been rebranded to Jakarta EE.  This recipe replaces\
        \ existing Jackson dependencies with their counterparts that are compatible\
        \ with Jakarta EE.\n"
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/jacksonjavaxtojakarta"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxActivationMigrationToJakartaActivation:
      name: "io.quarkus.updates.core.quarkus30.JavaxActivationMigrationToJakartaActivation"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxactivationmigrationtojakartaactivation"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxAnnotationMigrationToJakartaAnnotation:
      name: "io.quarkus.updates.core.quarkus30.JavaxAnnotationMigrationToJakartaAnnotation"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxannotationmigrationtojakartaannotation"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxAnnotationPackageToJakarta:
      name: "io.quarkus.updates.core.quarkus30.JavaxAnnotationPackageToJakarta"
      description: "Change type of classes in the `javax.annotation` package to jakarta."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxannotationpackagetojakarta"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxAnnotationSecurityPackageToJakarta:
      name: "io.quarkus.updates.core.quarkus30.JavaxAnnotationSecurityPackageToJakarta"
      description: "Change type of classes in the `javax.annotation.security` package\
        \ to jakarta."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxannotationsecuritypackagetojakarta"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxAnnotationSqlPackageToJakarta:
      name: "io.quarkus.updates.core.quarkus30.JavaxAnnotationSqlPackageToJakarta"
      description: "Change type of classes in the `javax.annotation.sql` package to\
        \ jakarta."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxannotationsqlpackagetojakarta"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxAuthenticationMigrationToJakartaAuthentication:
      name: "io.quarkus.updates.core.quarkus30.JavaxAuthenticationMigrationToJakartaAuthentication"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxauthenticationmigrationtojakartaauthentication"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxAuthorizationMigrationToJakartaAuthorization:
      name: "io.quarkus.updates.core.quarkus30.JavaxAuthorizationMigrationToJakartaAuthorization"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxauthorizationmigrationtojakartaauthorization"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxBatchMigrationToJakartaBatch:
      name: "io.quarkus.updates.core.quarkus30.JavaxBatchMigrationToJakartaBatch"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxbatchmigrationtojakartabatch"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxConfigurationFiles:
      name: "io.quarkus.updates.core.quarkus30.JavaxConfigurationFiles"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxconfigurationfiles"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxDecoratorToJakartaDecorator:
      name: "io.quarkus.updates.core.quarkus30.JavaxDecoratorToJakartaDecorator"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxdecoratortojakartadecorator"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxEjbToJakartaEjb:
      name: "io.quarkus.updates.core.quarkus30.JavaxEjbToJakartaEjb"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxejbtojakartaejb"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxElToJakartaEl:
      name: "io.quarkus.updates.core.quarkus30.JavaxElToJakartaEl"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxeltojakartael"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxEnterpriseToJakartaEnterprise:
      name: "io.quarkus.updates.core.quarkus30.JavaxEnterpriseToJakartaEnterprise"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxenterprisetojakartaenterprise"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxFacesToJakartaFaces:
      name: "io.quarkus.updates.core.quarkus30.JavaxFacesToJakartaFaces"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxfacestojakartafaces"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxInjectMigrationToJakartaInject:
      name: "io.quarkus.updates.core.quarkus30.JavaxInjectMigrationToJakartaInject"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxinjectmigrationtojakartainject"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxInterceptorToJakartaInterceptor:
      name: "io.quarkus.updates.core.quarkus30.JavaxInterceptorToJakartaInterceptor"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxinterceptortojakartainterceptor"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxJmsToJakartaJms:
      name: "io.quarkus.updates.core.quarkus30.JavaxJmsToJakartaJms"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxjmstojakartajms"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxJsonToJakartaJson:
      name: "io.quarkus.updates.core.quarkus30.JavaxJsonToJakartaJson"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxjsontojakartajson"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxJwsToJakartaJws:
      name: "io.quarkus.updates.core.quarkus30.JavaxJwsToJakartaJws"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxjwstojakartajws"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxMailToJakartaMail:
      name: "io.quarkus.updates.core.quarkus30.JavaxMailToJakartaMail"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxmailtojakartamail"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxPersistenceToJakartaPersistence:
      name: "io.quarkus.updates.core.quarkus30.JavaxPersistenceToJakartaPersistence"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation"
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxpersistencetojakartapersistence"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxPersistenceXmlToJakartaPersistenceXml:
      name: "io.quarkus.updates.core.quarkus30.JavaxPersistenceXmlToJakartaPersistenceXml"
      description: "Java EE has been rebranded to Jakarta EE, necessitating an XML\
        \ namespace relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxpersistencexmltojakartapersistencexml"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxResourceToJakartaResource:
      name: "io.quarkus.updates.core.quarkus30.JavaxResourceToJakartaResource"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxresourcetojakartaresource"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxSecurityToJakartaSecurity:
      name: "io.quarkus.updates.core.quarkus30.JavaxSecurityToJakartaSecurity"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxsecuritytojakartasecurity"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxServletToJakartaServlet:
      name: "io.quarkus.updates.core.quarkus30.JavaxServletToJakartaServlet"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxservlettojakartaservlet"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxToJakartaAdditionalMigration:
      name: "io.quarkus.updates.core.quarkus30.JavaxToJakartaAdditionalMigration"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxtojakartaadditionalmigration"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxToJakartaCodestarts:
      name: "io.quarkus.updates.core.quarkus30.JavaxToJakartaCodestarts"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxtojakartacodestarts"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxToJakartaCodestartsTests:
      name: "io.quarkus.updates.core.quarkus30.JavaxToJakartaCodestartsTests"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxtojakartacodestartstests"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxToJakartaDocumentationAdoc:
      name: "io.quarkus.updates.core.quarkus30.JavaxToJakartaDocumentationAdoc"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxtojakartadocumentationadoc"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxToJakartaDocumentationMd:
      name: "io.quarkus.updates.core.quarkus30.JavaxToJakartaDocumentationMd"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxtojakartadocumentationmd"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxToJakartaKotlin:
      name: "io.quarkus.updates.core.quarkus30.JavaxToJakartaKotlin"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxtojakartakotlin"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxToJakartaKotlinCodestarts:
      name: "io.quarkus.updates.core.quarkus30.JavaxToJakartaKotlinCodestarts"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxtojakartakotlincodestarts"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxToJakartaKotlinCodestartsTests:
      name: "io.quarkus.updates.core.quarkus30.JavaxToJakartaKotlinCodestartsTests"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxtojakartakotlincodestartstests"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxTransactionMigrationToJakartaTransaction:
      name: "io.quarkus.updates.core.quarkus30.JavaxTransactionMigrationToJakartaTransaction"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxtransactionmigrationtojakartatransaction"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxValidationMigrationToJakartaValidation:
      name: "io.quarkus.updates.core.quarkus30.JavaxValidationMigrationToJakartaValidation"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxvalidationmigrationtojakartavalidation"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxWebsocketToJakartaWebsocket:
      name: "io.quarkus.updates.core.quarkus30.JavaxWebsocketToJakartaWebsocket"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxwebsockettojakartawebsocket"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxWsToJakartaWs:
      name: "io.quarkus.updates.core.quarkus30.JavaxWsToJakartaWs"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxwstojakartaws"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxXmlBindMigrationToJakartaXmlBind:
      name: "io.quarkus.updates.core.quarkus30.JavaxXmlBindMigrationToJakartaXmlBind"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxxmlbindmigrationtojakartaxmlbind"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxXmlSoapToJakartaXmlSoap:
      name: "io.quarkus.updates.core.quarkus30.JavaxXmlSoapToJakartaXmlSoap"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxxmlsoaptojakartaxmlsoap"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.JavaxXmlWsMigrationToJakartaXmlWs:
      name: "io.quarkus.updates.core.quarkus30.JavaxXmlWsMigrationToJakartaXmlWs"
      description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
        \ relocation."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/javaxxmlwsmigrationtojakartaxmlws"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.Kotlin:
      name: "io.quarkus.updates.core.quarkus30.Kotlin"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/kotlin"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.RenameJavaxServiceFiles:
      name: "io.quarkus.updates.core.quarkus30.RenameJavaxServiceFiles"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/renamejavaxservicefiles"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.RestAssuredJavaxToJakarta:
      name: "io.quarkus.updates.core.quarkus30.RestAssuredJavaxToJakarta"
      description: "Java EE has been rebranded to Jakarta EE.  This recipe replaces\
        \ existing RestAssured dependencies with their counterparts that are compatible\
        \ with Jakarta EE.\n"
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/restassuredjavaxtojakarta"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus30.UpgradeQuarkiverse:
      name: "io.quarkus.updates.core.quarkus30.UpgradeQuarkiverse"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus30/upgradequarkiverse"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus31.RemoveMockitoInline:
      name: "io.quarkus.updates.core.quarkus31.RemoveMockitoInline"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus31/removemockitoinline"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.AdjustPackageProperty:
      name: "io.quarkus.updates.core.quarkus310.AdjustPackageProperty"
      description: "Adjust the package properties"
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/adjustpackageproperty"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.FlywayDb2:
      name: "io.quarkus.updates.core.quarkus310.FlywayDb2"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/flywaydb2"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.FlywayDerby:
      name: "io.quarkus.updates.core.quarkus310.FlywayDerby"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/flywayderby"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.FlywayPostgreSQL:
      name: "io.quarkus.updates.core.quarkus310.FlywayPostgreSQL"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/flywaypostgresql"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.SyncHibernateJpaModelgenVersionWithBOM:
      name: "io.quarkus.updates.core.quarkus310.SyncHibernateJpaModelgenVersionWithBOM"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/synchibernatejpamodelgenversionwithbom"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.UpdateConfigPackagePom:
      name: "io.quarkus.updates.core.quarkus310.UpdateConfigPackagePom"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/updateconfigpackagepom"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.UpdateConfigPackageSimpleProperties:
      name: "io.quarkus.updates.core.quarkus310.UpdateConfigPackageSimpleProperties"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/updateconfigpackagesimpleproperties"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeFastJar:
      name: "io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeFastJar"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/updateconfigpackagetypefastjar"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeJar:
      name: "io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeJar"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/updateconfigpackagetypejar"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeMutableJar:
      name: "io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeMutableJar"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/updateconfigpackagetypemutablejar"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeNative:
      name: "io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeNative"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/updateconfigpackagetypenative"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeNativeSources:
      name: "io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeNativeSources"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/updateconfigpackagetypenativesources"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeUberJar:
      name: "io.quarkus.updates.core.quarkus310.UpdateConfigPackageTypeUberJar"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus310/updateconfigpackagetypeuberjar"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus311.SyncHibernateJpaModelgenVersionWithBOM:
      name: "io.quarkus.updates.core.quarkus311.SyncHibernateJpaModelgenVersionWithBOM"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus311/synchibernatejpamodelgenversionwithbom"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus312.SyncHibernateJpaModelgenVersionWithBOM:
      name: "io.quarkus.updates.core.quarkus312.SyncHibernateJpaModelgenVersionWithBOM"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus312/synchibernatejpamodelgenversionwithbom"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus313.SyncHibernateJpaModelgenVersionWithBOM:
      name: "io.quarkus.updates.core.quarkus313.SyncHibernateJpaModelgenVersionWithBOM"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus313/synchibernatejpamodelgenversionwithbom"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus313.UpdateTestOIDCAuthServerUrl:
      name: "io.quarkus.updates.core.quarkus313.UpdateTestOIDCAuthServerUrl"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus313/updatetestoidcauthserverurl"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus318.RemoveFlywayCleanOnValidationError:
      name: "io.quarkus.updates.core.quarkus318.RemoveFlywayCleanOnValidationError"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus318/removeflywaycleanonvalidationerror"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus319.ConfigurationPropertiesChange:
      name: "io.quarkus.updates.core.quarkus319.ConfigurationPropertiesChange"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus319/configurationpropertieschange"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus319.MoveAccessTokenAnnotationToNewPackage:
      name: "io.quarkus.updates.core.quarkus319.MoveAccessTokenAnnotationToNewPackage"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus319/moveaccesstokenannotationtonewpackage"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus32.ApplicationProperties:
      name: "io.quarkus.updates.core.quarkus32.ApplicationProperties"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus32/applicationproperties"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus32.ApplicationYml:
      name: "io.quarkus.updates.core.quarkus32.ApplicationYml"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus32/applicationyml"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus32.InjectMock:
      name: "io.quarkus.updates.core.quarkus32.InjectMock"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus32/injectmock"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus33.ApplicationProperties:
      name: "io.quarkus.updates.core.quarkus33.ApplicationProperties"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus33/applicationproperties"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus33.ApplicationYml:
      name: "io.quarkus.updates.core.quarkus33.ApplicationYml"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus33/applicationyml"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus33.GraalVMSubstitutionsArtifact:
      name: "io.quarkus.updates.core.quarkus33.GraalVMSubstitutionsArtifact"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus33/graalvmsubstitutionsartifact"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus35.MutinyUniAndGroupCombinedWith:
      name: "io.quarkus.updates.core.quarkus35.MutinyUniAndGroupCombinedWith"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus35/mutinyuniandgroupcombinedwith"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus35.MutinyUniMemoizeAtLeast:
      name: "io.quarkus.updates.core.quarkus35.MutinyUniMemoizeAtLeast"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus35/mutinyunimemoizeatleast"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus36.JaegerSmallRyeOpenTracing:
      name: "io.quarkus.updates.core.quarkus36.JaegerSmallRyeOpenTracing"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus36/jaegersmallryeopentracing"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.AddJpaModelgenAnnotationProcessor:
      name: "io.quarkus.updates.core.quarkus37.AddJpaModelgenAnnotationProcessor"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/addjpamodelgenannotationprocessor"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.AddJpaModelgenAnnotationProcessorIfOldArtifact:
      name: "io.quarkus.updates.core.quarkus37.AddJpaModelgenAnnotationProcessorIfOldArtifact"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/addjpamodelgenannotationprocessorifoldartifact"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.AddMavenCompilerAnnotationProcessor:
      name: "io.quarkus.updates.core.quarkus37.AddMavenCompilerAnnotationProcessor"
      description: "Add an annotation processor to the Maven Compiler plugin configuration."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/addmavencompilerannotationprocessor"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "enforceManagedVersion"
        type: "Boolean"
        required: false
      - name: "groupId"
        type: "String"
        required: true
      - name: "mavenCompilerPluginVersion"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.ChangeMavenCompilerAnnotationProcessorGroupIdAndArtifactId:
      name: "io.quarkus.updates.core.quarkus37.ChangeMavenCompilerAnnotationProcessorGroupIdAndArtifactId"
      description: "Change the groupId, artifactId and/or the version of a specified\
        \ Maven Compiler plugin annotation processor."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/changemavencompilerannotationprocessorgroupidandartifactid"
      options:
      - name: "enforceManagedVersion"
        type: "Boolean"
        required: false
      - name: "newArtifactId"
        type: "String"
        required: false
      - name: "newGroupId"
        type: "String"
        required: false
      - name: "newVersion"
        type: "String"
        required: false
      - name: "oldArtifactId"
        type: "String"
        required: true
      - name: "oldGroupId"
        type: "String"
        required: true
      - name: "overrideManagedVersion"
        type: "Boolean"
        required: false
      - name: "versionPattern"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.DeprecatedJavaxSecurityCert:
      name: "io.quarkus.updates.core.quarkus37.DeprecatedJavaxSecurityCert"
      description: "The `javax.security.cert` package has been deprecated for removal."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/deprecatedjavaxsecuritycert"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.DeprecatedLogRecordThreadID:
      name: "io.quarkus.updates.core.quarkus37.DeprecatedLogRecordThreadID"
      description: "Avoid using the deprecated methods in `java.util.logging.LogRecord`"
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/deprecatedlogrecordthreadid"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.HibernateSearchOutboxPolling:
      name: "io.quarkus.updates.core.quarkus37.HibernateSearchOutboxPolling"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/hibernatesearchoutboxpolling"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.JavaVersion17:
      name: "io.quarkus.updates.core.quarkus37.JavaVersion17"
      description: "Change maven.compiler.source and maven.compiler.target values\
        \ to 17."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/javaversion17"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.Jre17AgentMainPreMainPublic:
      name: "io.quarkus.updates.core.quarkus37.Jre17AgentMainPreMainPublic"
      description: "Check for a behavior change in Java agents."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/jre17agentmainpremainpublic"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.MavenPlugins:
      name: "io.quarkus.updates.core.quarkus37.MavenPlugins"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/mavenplugins"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.RemoveJpaModelgenDependencies:
      name: "io.quarkus.updates.core.quarkus37.RemoveJpaModelgenDependencies"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/removejpamodelgendependencies"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.RemovedLegacySunJSSEProviderName:
      name: "io.quarkus.updates.core.quarkus37.RemovedLegacySunJSSEProviderName"
      description: "The `com.sun.net.ssl.internal.ssl.Provider` provider name was\
        \ removed."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/removedlegacysunjsseprovidername"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.ReplaceJpaModelgenAnnotationProcessor:
      name: "io.quarkus.updates.core.quarkus37.ReplaceJpaModelgenAnnotationProcessor"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/replacejpamodelgenannotationprocessor"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.ResteasyClientRenaming:
      name: "io.quarkus.updates.core.quarkus37.ResteasyClientRenaming"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/resteasyclientrenaming"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.SetupJavaUpgradeJavaVersion:
      name: "io.quarkus.updates.core.quarkus37.SetupJavaUpgradeJavaVersion"
      description: "Update the Java version used by `actions/setup-java` if it is\
        \ below the expected version number."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/setupjavaupgradejavaversion"
      options:
      - name: "minimumJavaMajorVersion"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.SyncHibernateJpaModelgenVersionWithBOM:
      name: "io.quarkus.updates.core.quarkus37.SyncHibernateJpaModelgenVersionWithBOM"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/synchibernatejpamodelgenversionwithbom"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.SyncMavenCompilerAnnotationProcessorVersion:
      name: "io.quarkus.updates.core.quarkus37.SyncMavenCompilerAnnotationProcessorVersion"
      description: "Sync Maven Compiler plugin annotation processor version with the\
        \ one provided by the BOM."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/syncmavencompilerannotationprocessorversion"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.UpgradeJavaVersion:
      name: "io.quarkus.updates.core.quarkus37.UpgradeJavaVersion"
      description: "Upgrade build plugin configuration to use the specified Java version.\
        \ This recipe changes `java.toolchain.languageVersion` in `build.gradle(.kts)`\
        \ of gradle projects, or maven-compiler-plugin target version and related\
        \ settings. Will not downgrade if the version is newer than the specified\
        \ version."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/upgradejavaversion"
      options:
      - name: "version"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus37.UpgradeToJava17:
      name: "io.quarkus.updates.core.quarkus37.UpgradeToJava17"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Java 17. Specifically, for those applications that are built on Java\
        \ 8, this recipe will update and add dependencies on J2EE libraries that are\
        \ no longer directly bundled with the JDK. This recipe will also replace deprecated\
        \ API with equivalents when there is a clear migration strategy. Build files\
        \ will also be updated to use Java 17 as the target/source and plugins will\
        \ be also be upgraded to versions that are compatible with Java 17.\n"
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus37/upgradetojava17"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus38.SyncHibernateJpaModelgenVersionWithBOM:
      name: "io.quarkus.updates.core.quarkus38.SyncHibernateJpaModelgenVersionWithBOM"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus38/synchibernatejpamodelgenversionwithbom"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus383.GraalSDK:
      name: "io.quarkus.updates.core.quarkus383.GraalSDK"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus383/graalsdk"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus39.GraalSDK:
      name: "io.quarkus.updates.core.quarkus39.GraalSDK"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus39/graalsdk"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus39.Relocations:
      name: "io.quarkus.updates.core.quarkus39.Relocations"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus39/relocations"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus39.RemoveMavenCompilerAnnotationProcessor:
      name: "io.quarkus.updates.core.quarkus39.RemoveMavenCompilerAnnotationProcessor"
      description: "Remove an annotation processor from the Maven Compiler plugin\
        \ configuration."
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus39/removemavencompilerannotationprocessor"
      options:
      - name: "artifactId"
        type: "String"
        required: true
      - name: "groupId"
        type: "String"
        required: true
      - name: "processorClass"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus39.RemovePanacheAnnotationProcessor:
      name: "io.quarkus.updates.core.quarkus39.RemovePanacheAnnotationProcessor"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus39/removepanacheannotationprocessor"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus39.SyncHibernateJpaModelgenVersionWithBOM:
      name: "io.quarkus.updates.core.quarkus39.SyncHibernateJpaModelgenVersionWithBOM"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus39/synchibernatejpamodelgenversionwithbom"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    io.quarkus.updates.core.quarkus39.UpdateConfigRoots:
      name: "io.quarkus.updates.core.quarkus39.UpdateConfigRoots"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/io/quarkus/updates/core/quarkus39/updateconfigroots"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.CamelMigrationRecipe:
      name: "org.apache.camel.upgrade.CamelMigrationRecipe"
      description: "Migrates Apache Camel application to 4.10.0"
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camelmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.JavaVersion17:
      name: "org.apache.camel.upgrade.JavaVersion17"
      description: "Change maven.compiler.source and maven.compiler.target values\
        \ to 17."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/javaversion17"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.SetupJavaUpgradeJavaVersion:
      name: "org.apache.camel.upgrade.SetupJavaUpgradeJavaVersion"
      description: "Update the Java version used by `actions/setup-java` if it is\
        \ below the expected version number."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/setupjavaupgradejavaversion"
      options:
      - name: "minimumJavaMajorVersion"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.UpgradeJavaVersion:
      name: "org.apache.camel.upgrade.UpgradeJavaVersion"
      description: "Upgrade build plugin configuration to use the specified Java version.\
        \ This recipe changes `java.toolchain.languageVersion` in `build.gradle(.kts)`\
        \ of gradle projects, or maven-compiler-plugin target version and related\
        \ settings. Will not downgrade if the version is newer than the specified\
        \ version."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/upgradejavaversion"
      options:
      - name: "version"
        type: "Integer"
        required: true
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.UpgradeToJava17:
      name: "org.apache.camel.upgrade.UpgradeToJava17"
      description: "This recipe will apply changes commonly needed when migrating\
        \ to Java 17. Specifically, for those applications that are built on Java\
        \ 8, this recipe will update and add dependencies on J2EE libraries that are\
        \ no longer directly bundled with the JDK. This recipe will also replace deprecated\
        \ API with equivalents when there is a clear migration strategy. Build files\
        \ will also be updated to use Java 17 as the target/source and plugins will\
        \ be also be upgraded to versions that are compatible with Java 17.\n"
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/upgradetojava17"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.CamelMigrationRecipe:
      name: "org.apache.camel.upgrade.camel40.CamelMigrationRecipe"
      description: "Migrate `camel3` application to `camel4`."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/camelmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.ChangeManagedChoiceMBeanMethodName:
      name: "org.apache.camel.upgrade.camel40.ChangeManagedChoiceMBeanMethodName"
      description: "MBeans now use a consistent method name of `extendedInformation`."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/changemanagedchoicembeanmethodname"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.ChangeManagedFailoverLoadBalancerMBeanMethodName:
      name: "org.apache.camel.upgrade.camel40.ChangeManagedFailoverLoadBalancerMBeanMethodName"
      description: "MBeans now use a consistent method name of `extendedInformation`."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/changemanagedfailoverloadbalancermbeanmethodname"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.ChangeTypes:
      name: "org.apache.camel.upgrade.camel40.ChangeTypes"
      description: "Change type of classes related to change of API."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/changetypes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.UsePluginHelperForContextGetters:
      name: "org.apache.camel.upgrade.camel40.UsePluginHelperForContextGetters"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/usepluginhelperforcontextgetters"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.java.CamelAPIsRecipe:
      name: "org.apache.camel.upgrade.camel40.java.CamelAPIsRecipe"
      description: "Apache Camel API migration from version 3.20 or higher to 4.0.\
        \ Removal of deprecated APIs."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/java/camelapisrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.java.CamelBeanRecipe:
      name: "org.apache.camel.upgrade.camel40.java.CamelBeanRecipe"
      description: "Camel bean recipe."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/java/camelbeanrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.java.CamelEIPRecipe:
      name: "org.apache.camel.upgrade.camel40.java.CamelEIPRecipe"
      description: "The InOnly and InOut EIPs have been removed. Instead, use 'SetExchangePattern'\
        \ or 'To' where you can specify the exchange pattern to use."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/java/cameleiprecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.java.CamelHttpRecipe:
      name: "org.apache.camel.upgrade.camel40.java.CamelHttpRecipe"
      description: "Camel Http Extension changes."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/java/camelhttprecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.properties.rejectedPolicy:
      name: "org.apache.camel.upgrade.camel40.properties.rejectedPolicy"
      description: "Apache Camel API migration from version 3.20 or higher to 4.0.\
        \ Removal of deprecated APIs, which could be part of the application.properties."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/properties/rejectedpolicy"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.xml.CircuitBreakerXmlDslRecipe:
      name: "org.apache.camel.upgrade.camel40.xml.CircuitBreakerXmlDslRecipe"
      description: "Apache Camel XML DSL Circuit Breaker migration from version 3.20\
        \ or higher to 4.0."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/xml/circuitbreakerxmldslrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.xml.XmlDslRecipe:
      name: "org.apache.camel.upgrade.camel40.xml.XmlDslRecipe"
      description: "Apache Camel XML DSL migration from version 3.20 or higher to\
        \ 4.0."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/xml/xmldslrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.yaml.CamelYamlRouteConfigurationSequenceRecipe:
      name: "org.apache.camel.upgrade.camel40.yaml.CamelYamlRouteConfigurationSequenceRecipe"
      description: "Camel YAML changes. route-configuration children sequence is replaced\
        \ with  mappingEntry (with special migration of \"on-exception\")."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/yaml/camelyamlrouteconfigurationsequencerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel40.yaml.CamelYamlStepsInFromRecipe:
      name: "org.apache.camel.upgrade.camel40.yaml.CamelYamlStepsInFromRecipe"
      description: "The YAML DSL backwards compatible mode in Camel 3.14 or older,\
        \ which allowed 'steps' to be defined as a child of 'route' has been removed."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel40/yaml/camelyamlstepsinfromrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel41.CamelCoreRecipe:
      name: "org.apache.camel.upgrade.camel41.CamelCoreRecipe"
      description: "Apache Camel Core migration from version 4.0 to 4.1."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel41/camelcorerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel41.TracingTag:
      name: "org.apache.camel.upgrade.camel41.TracingTag"
      description: "The Tag Enum containing constants for tagging spans has been deprecated.\
        \ Instead, use constants from the TagConstants."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel41/tracingtag"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel41.XmlDslRecipe:
      name: "org.apache.camel.upgrade.camel41.XmlDslRecipe"
      description: "Apache Camel XML DSL migration from version 4.0 to 4.1."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel41/xmldslrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel41.YamlDslRecipe:
      name: "org.apache.camel.upgrade.camel41.YamlDslRecipe"
      description: "If inlined bean is created, parameters `type` and `beanType` has\
        \ bean changed."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel41/yamldslrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel410.CamelMigrationRecipe:
      name: "org.apache.camel.upgrade.camel410.CamelMigrationRecipe"
      description: "Migrates `camel 4.9` application to `camel 4.10`."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel410/camelmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel410.XmlDsl410Recipe:
      name: "org.apache.camel.upgrade.camel410.XmlDsl410Recipe"
      description: "Apache Camel XML DSL migration from version 4.9 o 4.10."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel410/xmldsl410recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel410.camelAzureFiles:
      name: "org.apache.camel.upgrade.camel410.camelAzureFiles"
      description: "Renamed constants in camel-azure-files."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel410/camelazurefiles"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel410.camelSmb:
      name: "org.apache.camel.upgrade.camel410.camelSmb"
      description: "Renamed constants in camel-smb."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel410/camelsmb"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel42.CamelMainDebugger:
      name: "org.apache.camel.upgrade.camel42.CamelMainDebugger"
      description: "The option camel.main.debugger has been renamed to camel.debug.enabled."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel42/camelmaindebugger"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel42.CamelSagaRecipe:
      name: "org.apache.camel.upgrade.camel42.CamelSagaRecipe"
      description: "Apache Camel Core migration from version 4.0 to 4.1."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel42/camelsagarecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel43.CamelResequenceEIPXmlRecipe:
      name: "org.apache.camel.upgrade.camel43.CamelResequenceEIPXmlRecipe"
      description: "Batch and stream attributes were renamed in Resequence EIP XML\
        \ DSL."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel43/camelresequenceeipxmlrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel43.CamelThrottleEIPRecipe:
      name: "org.apache.camel.upgrade.camel43.CamelThrottleEIPRecipe"
      description: "Apache Camel Core migration from version 4.0 to 4.1."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel43/camelthrottleeiprecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel43.KafkaMetadata:
      name: "org.apache.camel.upgrade.camel43.KafkaMetadata"
      description: "The header name for the List metadata has changed also the dsl\
        \ method for metadata changed."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel43/kafkametadata"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel43.StateRepository:
      name: "org.apache.camel.upgrade.camel43.StateRepository"
      description: "Moved classes MemoryStateRepository and FileStateRepositor from\
        \ camel-base-engine to  camel-support."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel43/staterepository"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel44.CamelCoreRecipe:
      name: "org.apache.camel.upgrade.camel44.CamelCoreRecipe"
      description: "Apache Camel Core migration from version 4.3 to 4.4."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel44/camelcorerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel44.CamelMigrationRecipe:
      name: "org.apache.camel.upgrade.camel44.CamelMigrationRecipe"
      description: "Migrates `camel 4.0` application to `camel 4.4`."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel44/camelmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel44.DefaultJsonSchemaLoader:
      name: "org.apache.camel.upgrade.camel44.DefaultJsonSchemaLoader"
      description: "Replaces deprecated class with its successor."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel44/defaultjsonschemaloader"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel44.RouteControllerProperties:
      name: "org.apache.camel.upgrade.camel44.RouteControllerProperties"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel44/routecontrollerproperties"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel45.CamelMigrationRecipe:
      name: "org.apache.camel.upgrade.camel45.CamelMigrationRecipe"
      description: "Migrates `camel 4.4` application to `camel 4.5`."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel45/camelmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel45.TraceProperties:
      name: "org.apache.camel.upgrade.camel45.TraceProperties"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel45/traceproperties"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel45.UseExtendedCamelContextGetters:
      name: "org.apache.camel.upgrade.camel45.UseExtendedCamelContextGetters"
      description: ""
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel45/useextendedcamelcontextgetters"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel45.renamedClasses:
      name: "org.apache.camel.upgrade.camel45.renamedClasses"
      description: "Renamed classes for elasticsearch,opensearch and spring regis."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel45/renamedclasses"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel46.CamelMigrationRecipe:
      name: "org.apache.camel.upgrade.camel46.CamelMigrationRecipe"
      description: "Migrates `camel 4.5` application to `camel 4.6`."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel46/camelmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel46.XmlDsl46Recipe:
      name: "org.apache.camel.upgrade.camel46.XmlDsl46Recipe"
      description: "Apache Camel XML DSL migration from version 3.20 or higher to\
        \ 4.0."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel46/xmldsl46recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel46.YamlDsl46Recipe:
      name: "org.apache.camel.upgrade.camel46.YamlDsl46Recipe"
      description: "Each bean property is changed to bean properties."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel46/yamldsl46recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel46.renamedClasses:
      name: "org.apache.camel.upgrade.camel46.renamedClasses"
      description: "Renamed classes for elasticsearch,opensearch and spring regis."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel46/renamedclasses"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel46.renamedDependencies:
      name: "org.apache.camel.upgrade.camel46.renamedDependencies"
      description: "Renamed dependencies."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel46/renameddependencies"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel46.yamStreamCaching:
      name: "org.apache.camel.upgrade.camel46.yamStreamCaching"
      description: "Renamed streamCaching to streamCache on the route."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel46/yamstreamcaching"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel47.CamelMigrationRecipe:
      name: "org.apache.camel.upgrade.camel47.CamelMigrationRecipe"
      description: "Migrates `camel 4.6` application to `camel 4.7`."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel47/camelmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel47.Java47Recipes:
      name: "org.apache.camel.upgrade.camel47.Java47Recipes"
      description: "Change of headers with embedded HTTP server (consumer). The headers\
        \ CamelHttpServletRequest and CamelHttpServletResponse has been removed.."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel47/java47recipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel47.XmlDsl47Recipe:
      name: "org.apache.camel.upgrade.camel47.XmlDsl47Recipe"
      description: "Apache Camel XML DSL migration from version 4.6 o 4.7."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel47/xmldsl47recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel47.YamlDsl47Recipe:
      name: "org.apache.camel.upgrade.camel47.YamlDsl47Recipe"
      description: "Apache Camel YML DSL migration from version 4.6 o 4.7."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel47/yamldsl47recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel47.removedDependencies:
      name: "org.apache.camel.upgrade.camel47.removedDependencies"
      description: "Moved the camel-cloudevents api into camel-api and removed the\
        \ camel-cloudevents."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel47/removeddependencies"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel47.renamedClasses:
      name: "org.apache.camel.upgrade.camel47.renamedClasses"
      description: "Renamed classes for API."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel47/renamedclasses"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel49.AwsSecretRecipe:
      name: "org.apache.camel.upgrade.camel49.AwsSecretRecipe"
      description: "The syntax for retrieving a single field of a secret has been\
        \ changed.."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel49/awssecretrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel49.AzureSecretRecipe:
      name: "org.apache.camel.upgrade.camel49.AzureSecretRecipe"
      description: "The syntax for retrieving a single field of a secret has been\
        \ changed.."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel49/azuresecretrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel49.CamelMigrationRecipe:
      name: "org.apache.camel.upgrade.camel49.CamelMigrationRecipe"
      description: "Migrates `camel 4.8` application to `camel 4.9`."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel49/camelmigrationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel49.DebeziumChangeTypes:
      name: "org.apache.camel.upgrade.camel49.DebeziumChangeTypes"
      description: "each camel-debezium module has its own subpackage corresponding\
        \ to the database type. So for example, all the classes of the module camel-debezium-postgres\
        \ have been moved to a dedicated package which is org.apache.camel.component.debezium.postgres\
        \ instead of having everything under the root package org.apache.camel.component.debezium."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel49/debeziumchangetypes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel49.GcpSecretRecipe:
      name: "org.apache.camel.upgrade.camel49.GcpSecretRecipe"
      description: "The syntax for retrieving a single field of a secret has been\
        \ changed.."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel49/gcpsecretrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel49.HashicorpSecretRecipe:
      name: "org.apache.camel.upgrade.camel49.HashicorpSecretRecipe"
      description: "The syntax for retrieving a single field of a secret has been\
        \ changed.."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel49/hashicorpsecretrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel49.removedDependencies:
      name: "org.apache.camel.upgrade.camel49.removedDependencies"
      description: "Removed deprecated components (camel-groovy-dsl, camel-js-dsl,\
        \ camel-jsh-dsl, camel-kotlin-api, camel-kotlin-dsl)."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel49/removeddependencies"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.camel49.renamedAPIs:
      name: "org.apache.camel.upgrade.camel49.renamedAPIs"
      description: "Renamed classes for API."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/camel49/renamedapis"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.customRecipes.ChangePropertyKeyWithCaseChange:
      name: "org.apache.camel.upgrade.customRecipes.ChangePropertyKeyWithCaseChange"
      description: "Change prefix of property with Camel case"
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/customrecipes/changepropertykeywithcasechange"
      options:
      - name: "newPrefix"
        type: "String"
        required: true
      - name: "oldPropertyKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.customRecipes.LiteralRegexpConverterRecipe:
      name: "org.apache.camel.upgrade.customRecipes.LiteralRegexpConverterRecipe"
      description: "Replaces literal, groups from regexp can be used as ${0}, ${1},\
        \ ..."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/customrecipes/literalregexpconverterrecipe"
      options:
      - name: "regexp"
        type: "String"
        required: true
      - name: "replacement"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.customRecipes.MoveGetterToExtendedCamelContext:
      name: "org.apache.camel.upgrade.customRecipes.MoveGetterToExtendedCamelContext"
      description: "Move getter from context to ExtendedCamelContext"
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/customrecipes/movegettertoextendedcamelcontext"
      options:
      - name: "oldMethodName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.camel.upgrade.customRecipes.MoveGetterToPluginHelper:
      name: "org.apache.camel.upgrade.customRecipes.MoveGetterToPluginHelper"
      description: "Move getter from context to PluginHelper"
      docLink: "https://docs.openrewrite.org/recipes/org/apache/camel/upgrade/customrecipes/movegettertopluginhelper"
      options:
      - name: "oldMethodName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-third-party"
    org.apache.wicket.BestPractices:
      name: "org.apache.wicket.BestPractices"
      description: "Applies Wicket best practices such as minimizing anonymous inner\
        \ classes and upgrading to the latest version."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/wicket/bestpractices"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    org.apache.wicket.MigrateToWicket10:
      name: "org.apache.wicket.MigrateToWicket10"
      description: "Migrates Wicket 9.x to Wicket 10.x, as well as Java 17 and Jakarta."
      docLink: "https://docs.openrewrite.org/recipes/org/apache/wicket/migratetowicket10"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    org.axonframework.migration.UpgradeAxonFramework_4_Jakarta:
      name: "org.axonframework.migration.UpgradeAxonFramework_4_Jakarta"
      description: "Migration file to upgrade from an Axon Framework Javax-specific\
        \ project to Jakarta."
      docLink: "https://docs.openrewrite.org/recipes/org/axonframework/migration/upgradeaxonframework_4_jakarta"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    org.axonframework.migration.UpgradeAxonFramework_4_Javax:
      name: "org.axonframework.migration.UpgradeAxonFramework_4_Javax"
      description: "Migration file to upgrade an Axon Framework Javax-specific project\
        \ and remain on Javax."
      docLink: "https://docs.openrewrite.org/recipes/org/axonframework/migration/upgradeaxonframework_4_javax"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    org.openrewrite.java.camel.migrate.removedExtensions:
      name: "org.openrewrite.java.camel.migrate.removedExtensions"
      description: "Removal of maven dependencies for extension, which are no longer\
        \ part of Camel 3.x."
      docLink: "https://docs.openrewrite.org/recipes/java/camel/migrate/removedextensions"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.AddCommentToMethod:
      name: "software.amazon.awssdk.v2migration.AddCommentToMethod"
      description: "Add a comment to a method."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/addcommenttomethod"
      options:
      - name: "comment"
        type: "String"
        required: true
      - name: "methodPattern"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.AddTransferManagerDependency:
      name: "software.amazon.awssdk.v2migration.AddTransferManagerDependency"
      description: "This recipe will add the Java v2 S3 Transfer Manager dependency\
        \ if v1 Transfer Manager is used"
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/addtransfermanagerdependency"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.AwsSdkJavaV1ToV2:
      name: "software.amazon.awssdk.v2migration.AwsSdkJavaV1ToV2"
      description: "This recipe will apply changes required for migrating from the\
        \ AWS SDK for Java v1 to the AWS SDK for Java v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/awssdkjavav1tov2"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.AwsSdkJavaV1ToV2Experimental:
      name: "software.amazon.awssdk.v2migration.AwsSdkJavaV1ToV2Experimental"
      description: "This recipe will apply changes required for migrating from the\
        \ AWS SDK for Java v1 to the AWS SDK for Java v2, including S3 Transfer Manager.\
        \ Transforms for Transfer Manager are incomplete and in-progress."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/awssdkjavav1tov2experimental"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.ByteBufferToSdkBytes:
      name: "software.amazon.awssdk.v2migration.ByteBufferToSdkBytes"
      description: "Convert ByteBuffer to SdkBytes by calling SdkBytes#fromByteBuffer"
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/bytebuffertosdkbytes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.ChangeAuthTypes:
      name: "software.amazon.awssdk.v2migration.ChangeAuthTypes"
      description: "Change auth related classes from v1 to v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/changeauthtypes"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.ChangeConfigTypes:
      name: "software.amazon.awssdk.v2migration.ChangeConfigTypes"
      description: "Change config related classes from v1 to v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/changeconfigtypes"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.ChangeExceptionTypes:
      name: "software.amazon.awssdk.v2migration.ChangeExceptionTypes"
      description: "Change SDK Exception types from v1 to v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/changeexceptiontypes"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.ChangeRegionTypes:
      name: "software.amazon.awssdk.v2migration.ChangeRegionTypes"
      description: "Change region related classes from v1 to v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/changeregiontypes"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.ChangeSdkCoreTypes:
      name: "software.amazon.awssdk.v2migration.ChangeSdkCoreTypes"
      description: "Change SDK core types from v1 to v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/changesdkcoretypes"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.ChangeSdkType:
      name: "software.amazon.awssdk.v2migration.ChangeSdkType"
      description: "Change AWS SDK for Java v1 types to v2 equivalents."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/changesdktype"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.ChangeTransferManagerTypes:
      name: "software.amazon.awssdk.v2migration.ChangeTransferManagerTypes"
      description: "Change SDK TransferManager types from v1 to v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/changetransfermanagertypes"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.ConstructorToFluent:
      name: "software.amazon.awssdk.v2migration.ConstructorToFluent"
      description: "A recipe that takes constructor arguments and moves them to the\
        \ specified fluent setters on the object."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/constructortofluent"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.EnumCasingToV2:
      name: "software.amazon.awssdk.v2migration.EnumCasingToV2"
      description: "Transforms V1 enum constants from pascal case to screaming snake\
        \ case for v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/enumcasingtov2"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.EnumGettersToV2:
      name: "software.amazon.awssdk.v2migration.EnumGettersToV2"
      description: "Change v1 enum getters to v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/enumgetterstov2"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.HttpSettingsToHttpClient:
      name: "software.amazon.awssdk.v2migration.HttpSettingsToHttpClient"
      description: "Move HTTP settings from the ClientOverrideConfiguration to ApacheHttpClient\
        \ for sync SDK client and NettyNioAsyncHttpClient for async SDK client."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/httpsettingstohttpclient"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.NewClassToBuilder:
      name: "software.amazon.awssdk.v2migration.NewClassToBuilder"
      description: "Transforms 'new' expression for generated model, client objects\
        \ and client config related objects to the equivalent builder()..build() expression\
        \ in V2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/newclasstobuilder"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.NewClassToBuilderPattern:
      name: "software.amazon.awssdk.v2migration.NewClassToBuilderPattern"
      description: "Transform the creation of a class using 'new' to builder pattern."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/newclasstobuilderpattern"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.NewClassToStaticFactory:
      name: "software.amazon.awssdk.v2migration.NewClassToStaticFactory"
      description: "Transforms 'new' expression for client config related objects\
        \ to the equivalent .create() expression in V2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/newclasstostaticfactory"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.NumberToDuration:
      name: "software.amazon.awssdk.v2migration.NumberToDuration"
      description: "Convert the method parameter from numeric types to duration."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/numbertoduration"
      options:
      - name: "methodPattern"
        type: "String"
        required: true
      - name: "timeUnit"
        type: "TimeUnit"
        required: false
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.S3MethodsConstructorToFluent:
      name: "software.amazon.awssdk.v2migration.S3MethodsConstructorToFluent"
      description: "Change S3 method constructors to fluent builder calls."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/s3methodsconstructortofluent"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.S3MethodsToV2:
      name: "software.amazon.awssdk.v2migration.S3MethodsToV2"
      description: "Change S3 methods to v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/s3methodstov2"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.S3NonStreamingRequestToV2:
      name: "software.amazon.awssdk.v2migration.S3NonStreamingRequestToV2"
      description: "Transform usage of V1 S3 non-streaming requests to V2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/s3nonstreamingrequesttov2"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.S3NonStreamingRequestToV2Complex:
      name: "software.amazon.awssdk.v2migration.S3NonStreamingRequestToV2Complex"
      description: "Transform usage of V1 S3 non-streaming requests to V2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/s3nonstreamingrequesttov2complex"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.S3StreamingRequestToV2:
      name: "software.amazon.awssdk.v2migration.S3StreamingRequestToV2"
      description: "Transform usage of V1 S3 streaming requests such as PutObject\
        \ to V2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/s3streamingrequesttov2"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.S3StreamingResponseToV2:
      name: "software.amazon.awssdk.v2migration.S3StreamingResponseToV2"
      description: "Transform usage of V1 S3Object to V2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/s3streamingresponsetov2"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.SdkBytesToByteBuffer:
      name: "software.amazon.awssdk.v2migration.SdkBytesToByteBuffer"
      description: "Convert SdkBytes to ByteBuffer by calling SdkBytes#asByteBuffer()"
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/sdkbytestobytebuffer"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.TransferManagerMethodsToV2:
      name: "software.amazon.awssdk.v2migration.TransferManagerMethodsToV2"
      description: "Transfer Manager Methods to V2"
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/transfermanagermethodstov2"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.UpgradeSdkDependencies:
      name: "software.amazon.awssdk.v2migration.UpgradeSdkDependencies"
      description: "Change v1 Maven/Gradle dependencies to v2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/upgradesdkdependencies"
      options: []
      isImperative: false
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.V1BuilderVariationsToV2Builder:
      name: "software.amazon.awssdk.v2migration.V1BuilderVariationsToV2Builder"
      description: "Transforms V1 builder variations to builder()"
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/v1buildervariationstov2builder"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.V1GetterToV2:
      name: "software.amazon.awssdk.v2migration.V1GetterToV2"
      description: "Transforms V1 getter to fluent getter in V2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/v1gettertov2"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.V1SetterToV2:
      name: "software.amazon.awssdk.v2migration.V1SetterToV2"
      description: "Transforms V1 setter to fluent setter in V2."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/v1settertov2"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    software.amazon.awssdk.v2migration.WrapSdkClientBuilderRegionStr:
      name: "software.amazon.awssdk.v2migration.WrapSdkClientBuilderRegionStr"
      description: "Wrap the region string provided on the SDK client builder with\
        \ Region.of."
      docLink: "https://docs.openrewrite.org/recipes/software/amazon/awssdk/v2migration/wrapsdkclientbuilderregionstr"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBigDecimalRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJBigDecimalRulesRecipes"
      description: "Note that, contrary to collections of Refaster rules for other\
        \ `org.assertj.core.api.NumberAssert` subtypes, these rules do not rewrite\
        \ to/from `BigDecimalAssert#isEqualTo(Object)` and `BigDecimalAssert#isNotEqualTo(Object)`.\
        \ This is\n because `BigDecimal#equals(Object)` considers not only the numeric\
        \ value of compared\n instances, but also their scale. As a result various\
        \ seemingly straightforward transformations\n would actually subtly change\
        \ the assertion's semantics. [Source](https://error-prone.picnic.tech/refasterrules/AssertJBigDecimalRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbigdecimalrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBigDecimalRulesRecipes$AbstractBigDecimalAssertIsEqualByComparingToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBigDecimalRulesRecipes$AbstractBigDecimalAssertIsEqualByComparingToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBigDecimalAssertIsEqualByComparingTo {\n    \n\
        \    @BeforeTemplate\n    AbstractBigDecimalAssert<?> before(AbstractBigDecimalAssert<?>\
        \ bigDecimalAssert, BigDecimal n) {\n        return Refaster.anyOf(bigDecimalAssert.isCloseTo(n,\
        \ offset(BigDecimal.ZERO)), bigDecimalAssert.isCloseTo(n, withPercentage(0)));\n\
        \    }\n    \n    @AfterTemplate\n    AbstractBigDecimalAssert<?> after(AbstractBigDecimalAssert<?>\
        \ bigDecimalAssert, BigDecimal n) {\n        return bigDecimalAssert.isEqualByComparingTo(n);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbigdecimalrulesrecipesusdabstractbigdecimalassertisequalbycomparingtorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBigDecimalRulesRecipes$AbstractBigDecimalAssertIsNotEqualByComparingToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBigDecimalRulesRecipes$AbstractBigDecimalAssertIsNotEqualByComparingToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBigDecimalAssertIsNotEqualByComparingTo {\n   \
        \ \n    @BeforeTemplate\n    AbstractBigDecimalAssert<?> before(AbstractBigDecimalAssert<?>\
        \ bigDecimalAssert, BigDecimal n) {\n        return Refaster.anyOf(bigDecimalAssert.isNotCloseTo(n,\
        \ offset(BigDecimal.ZERO)), bigDecimalAssert.isNotCloseTo(n, withPercentage(0)));\n\
        \    }\n    \n    @AfterTemplate\n    AbstractBigDecimalAssert<?> after(AbstractBigDecimalAssert<?>\
        \ bigDecimalAssert, BigDecimal n) {\n        return bigDecimalAssert.isNotEqualByComparingTo(n);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbigdecimalrulesrecipesusdabstractbigdecimalassertisnotequalbycomparingtorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJBigIntegerRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJBigIntegerRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbigintegerrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes$AbstractBigIntegerAssertIsEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes$AbstractBigIntegerAssertIsEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBigIntegerAssertIsEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractBigIntegerAssert<?> before(AbstractBigIntegerAssert<?> bigIntegerAssert,\
        \ BigInteger n) {\n        return Refaster.anyOf(bigIntegerAssert.isCloseTo(n,\
        \ offset(BigInteger.ZERO)), bigIntegerAssert.isCloseTo(n, withPercentage(0)));\n\
        \    }\n    \n    @AfterTemplate\n    AbstractBigIntegerAssert<?> after(AbstractBigIntegerAssert<?>\
        \ bigIntegerAssert, BigInteger n) {\n        return bigIntegerAssert.isEqualTo(n);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbigintegerrulesrecipesusdabstractbigintegerassertisequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes$AbstractBigIntegerAssertIsNotEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes$AbstractBigIntegerAssertIsNotEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBigIntegerAssertIsNotEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractBigIntegerAssert<?> before(AbstractBigIntegerAssert<?> bigIntegerAssert,\
        \ BigInteger n) {\n        return Refaster.anyOf(bigIntegerAssert.isNotCloseTo(n,\
        \ offset(BigInteger.ZERO)), bigIntegerAssert.isNotCloseTo(n, withPercentage(0)));\n\
        \    }\n    \n    @AfterTemplate\n    AbstractBigIntegerAssert<?> after(AbstractBigIntegerAssert<?>\
        \ bigIntegerAssert, BigInteger n) {\n        return bigIntegerAssert.isNotEqualTo(n);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbigintegerrulesrecipesusdabstractbigintegerassertisnotequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes$AbstractBigIntegerAssertIsNotZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes$AbstractBigIntegerAssertIsNotZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBigIntegerAssertIsNotZero {\n    \n    @BeforeTemplate\n\
        \    AbstractBigIntegerAssert<?> before(AbstractBigIntegerAssert<?> bigIntegerAssert)\
        \ {\n        return Refaster.anyOf(bigIntegerAssert.isNotZero(), bigIntegerAssert.isNotEqualTo(0L),\
        \ bigIntegerAssert.isNotEqualTo(BigInteger.ZERO));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractBigIntegerAssert<?> after(AbstractBigIntegerAssert<?> bigIntegerAssert)\
        \ {\n        return bigIntegerAssert.isNotEqualTo(0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbigintegerrulesrecipesusdabstractbigintegerassertisnotzerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes$AbstractBigIntegerAssertIsOneRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes$AbstractBigIntegerAssertIsOneRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBigIntegerAssertIsOne {\n    \n    @BeforeTemplate\n\
        \    AbstractBigIntegerAssert<?> before(AbstractBigIntegerAssert<?> bigIntegerAssert)\
        \ {\n        return Refaster.anyOf(bigIntegerAssert.isOne(), bigIntegerAssert.isEqualTo(1L),\
        \ bigIntegerAssert.isEqualTo(BigInteger.ONE));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractBigIntegerAssert<?> after(AbstractBigIntegerAssert<?> bigIntegerAssert)\
        \ {\n        return bigIntegerAssert.isEqualTo(1);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbigintegerrulesrecipesusdabstractbigintegerassertisonerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes$AbstractBigIntegerAssertIsZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBigIntegerRulesRecipes$AbstractBigIntegerAssertIsZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBigIntegerAssertIsZero {\n    \n    @BeforeTemplate\n\
        \    AbstractBigIntegerAssert<?> before(AbstractBigIntegerAssert<?> bigIntegerAssert)\
        \ {\n        return Refaster.anyOf(bigIntegerAssert.isZero(), bigIntegerAssert.isEqualTo(0L),\
        \ bigIntegerAssert.isEqualTo(BigInteger.ZERO));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractBigIntegerAssert<?> after(AbstractBigIntegerAssert<?> bigIntegerAssert)\
        \ {\n        return bigIntegerAssert.isEqualTo(0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbigintegerrulesrecipesusdabstractbigintegerassertiszerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJBooleanRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJBooleanRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbooleanrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AbstractBooleanAssertIsEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AbstractBooleanAssertIsEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBooleanAssertIsEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(AbstractBooleanAssert<?> boolAssert,\
        \ boolean other) {\n        return boolAssert.isNotEqualTo(!other);\n    }\n\
        \    \n    @AfterTemplate\n    AbstractBooleanAssert<?> after(AbstractBooleanAssert<?>\
        \ boolAssert, boolean other) {\n        return boolAssert.isEqualTo(other);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbooleanrulesrecipesusdabstractbooleanassertisequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AbstractBooleanAssertIsFalseRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AbstractBooleanAssertIsFalseRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBooleanAssertIsFalse {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(AbstractBooleanAssert<?> boolAssert)\
        \ {\n        return Refaster.anyOf(boolAssert.isEqualTo(false), boolAssert.isEqualTo(Boolean.FALSE),\
        \ boolAssert.isNotEqualTo(true), boolAssert.isNotEqualTo(Boolean.TRUE));\n\
        \    }\n    \n    @AfterTemplate\n    AbstractBooleanAssert<?> after(AbstractBooleanAssert<?>\
        \ boolAssert) {\n        return boolAssert.isFalse();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbooleanrulesrecipesusdabstractbooleanassertisfalserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AbstractBooleanAssertIsNotEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AbstractBooleanAssertIsNotEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBooleanAssertIsNotEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(AbstractBooleanAssert<?> boolAssert,\
        \ boolean other) {\n        return boolAssert.isEqualTo(!other);\n    }\n\
        \    \n    @AfterTemplate\n    AbstractBooleanAssert<?> after(AbstractBooleanAssert<?>\
        \ boolAssert, boolean other) {\n        return boolAssert.isNotEqualTo(other);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbooleanrulesrecipesusdabstractbooleanassertisnotequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AbstractBooleanAssertIsTrueRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AbstractBooleanAssertIsTrueRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractBooleanAssertIsTrue {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(AbstractBooleanAssert<?> boolAssert)\
        \ {\n        return Refaster.anyOf(boolAssert.isEqualTo(true), boolAssert.isEqualTo(Boolean.TRUE),\
        \ boolAssert.isNotEqualTo(false), boolAssert.isNotEqualTo(Boolean.FALSE));\n\
        \    }\n    \n    @AfterTemplate\n    AbstractBooleanAssert<?> after(AbstractBooleanAssert<?>\
        \ boolAssert) {\n        return boolAssert.isTrue();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbooleanrulesrecipesusdabstractbooleanassertistruerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AssertThatBooleanIsFalseRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AssertThatBooleanIsFalseRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatBooleanIsFalse {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(boolean b) {\n        return assertThat(!b).isTrue();\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractBooleanAssert<?> after(boolean b) {\n        return assertThat(b).isFalse();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbooleanrulesrecipesusdassertthatbooleanisfalserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AssertThatBooleanIsTrueRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJBooleanRulesRecipes$AssertThatBooleanIsTrueRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatBooleanIsTrue {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(boolean b) {\n        return assertThat(!b).isFalse();\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractBooleanAssert<?> after(boolean b) {\n        return assertThat(b).isTrue();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbooleanrulesrecipesusdassertthatbooleanistruerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJByteRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJByteRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbyterulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes$AbstractByteAssertIsEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes$AbstractByteAssertIsEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractByteAssertIsEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractByteAssert<?> before(AbstractByteAssert<?> byteAssert, byte n)\
        \ {\n        return Refaster.anyOf(byteAssert.isCloseTo(n, offset((byte)0)),\
        \ byteAssert.isCloseTo(n, withPercentage(0)));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractByteAssert<?> after(AbstractByteAssert<?> byteAssert, byte n)\
        \ {\n        return byteAssert.isEqualTo(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbyterulesrecipesusdabstractbyteassertisequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes$AbstractByteAssertIsNotEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes$AbstractByteAssertIsNotEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractByteAssertIsNotEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractByteAssert<?> before(AbstractByteAssert<?> byteAssert, byte n)\
        \ {\n        return Refaster.anyOf(byteAssert.isNotCloseTo(n, offset((byte)0)),\
        \ byteAssert.isNotCloseTo(n, withPercentage(0)));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractByteAssert<?> after(AbstractByteAssert<?> byteAssert, byte n)\
        \ {\n        return byteAssert.isNotEqualTo(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbyterulesrecipesusdabstractbyteassertisnotequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes$AbstractByteAssertIsNotZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes$AbstractByteAssertIsNotZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractByteAssertIsNotZero {\n    \n    @BeforeTemplate\n\
        \    AbstractByteAssert<?> before(AbstractByteAssert<?> byteAssert) {\n  \
        \      return byteAssert.isNotZero();\n    }\n    \n    @AfterTemplate\n \
        \   AbstractByteAssert<?> after(AbstractByteAssert<?> byteAssert) {\n    \
        \    return byteAssert.isNotEqualTo((byte)0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbyterulesrecipesusdabstractbyteassertisnotzerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes$AbstractByteAssertIsOneRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes$AbstractByteAssertIsOneRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractByteAssertIsOne {\n    \n    @BeforeTemplate\n\
        \    AbstractByteAssert<?> before(AbstractByteAssert<?> byteAssert) {\n  \
        \      return byteAssert.isOne();\n    }\n    \n    @AfterTemplate\n    AbstractByteAssert<?>\
        \ after(AbstractByteAssert<?> byteAssert) {\n        return byteAssert.isEqualTo((byte)1);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbyterulesrecipesusdabstractbyteassertisonerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes$AbstractByteAssertIsZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJByteRulesRecipes$AbstractByteAssertIsZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractByteAssertIsZero {\n    \n    @BeforeTemplate\n\
        \    AbstractByteAssert<?> before(AbstractByteAssert<?> byteAssert) {\n  \
        \      return byteAssert.isZero();\n    }\n    \n    @AfterTemplate\n    AbstractByteAssert<?>\
        \ after(AbstractByteAssert<?> byteAssert) {\n        return byteAssert.isEqualTo((byte)0);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjbyterulesrecipesusdabstractbyteassertiszerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJCharSequenceRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJCharSequenceRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJCharSequenceRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJCharSequenceRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjcharsequencerulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJCharSequenceRulesRecipes$AssertThatCharSequenceHasSizeRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJCharSequenceRulesRecipes$AssertThatCharSequenceHasSizeRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatCharSequenceHasSize {\n    \n    @BeforeTemplate\n\
        \    AbstractAssert<?, ?> before(CharSequence charSequence, int length) {\n\
        \        return assertThat(charSequence.length()).isEqualTo(length);\n   \
        \ }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractAssert<?, ?> after(CharSequence charSequence, int length) {\n\
        \        return assertThat(charSequence).hasSize(length);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjcharsequencerulesrecipesusdassertthatcharsequencehassizerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJCharSequenceRulesRecipes$AssertThatCharSequenceIsEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJCharSequenceRulesRecipes$AssertThatCharSequenceIsEmptyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatCharSequenceIsEmpty {\n    \n    @BeforeTemplate\n\
        \    void before(CharSequence charSequence) {\n        Refaster.anyOf(assertThat(charSequence.isEmpty()).isTrue(),\
        \ assertThat(charSequence.length()).isEqualTo(0L), assertThat(charSequence.length()).isNotPositive());\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(CharSequence charSequence) {\n        assertThat(charSequence).isEmpty();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjcharsequencerulesrecipesusdassertthatcharsequenceisemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJCharSequenceRulesRecipes$AssertThatCharSequenceIsNotEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJCharSequenceRulesRecipes$AssertThatCharSequenceIsNotEmptyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatCharSequenceIsNotEmpty {\n    \n    @BeforeTemplate\n\
        \    AbstractAssert<?, ?> before(CharSequence charSequence) {\n        return\
        \ Refaster.anyOf(assertThat(charSequence.isEmpty()).isFalse(), assertThat(charSequence.length()).isNotEqualTo(0),\
        \ assertThat(charSequence.length()).isPositive());\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    AbstractAssert<?,\
        \ ?> after(CharSequence charSequence) {\n        return assertThat(charSequence).isNotEmpty();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjcharsequencerulesrecipesusdassertthatcharsequenceisnotemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJDoubleRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJDoubleRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjdoublerulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsCloseToWithOffsetRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsCloseToWithOffsetRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractDoubleAssertIsCloseToWithOffset {\n    \n    @BeforeTemplate\n\
        \    AbstractDoubleAssert<?> before(AbstractDoubleAssert<?> doubleAssert,\
        \ double n, Offset<Double> offset) {\n        return doubleAssert.isEqualTo(n,\
        \ offset);\n    }\n    \n    @BeforeTemplate\n    AbstractDoubleAssert<?>\
        \ before(AbstractDoubleAssert<?> doubleAssert, Double n, Offset<Double> offset)\
        \ {\n        return doubleAssert.isEqualTo(n, offset);\n    }\n    \n    @AfterTemplate\n\
        \    AbstractDoubleAssert<?> after(AbstractDoubleAssert<?> doubleAssert, double\
        \ n, Offset<Double> offset) {\n        return doubleAssert.isCloseTo(n, offset);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjdoublerulesrecipesusdabstractdoubleassertisclosetowithoffsetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractDoubleAssertIsEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractDoubleAssert<?> before(AbstractDoubleAssert<?> doubleAssert,\
        \ double n) {\n        return Refaster.anyOf(doubleAssert.isCloseTo(n, offset(0.0)),\
        \ doubleAssert.isCloseTo(n, withPercentage(0.0)));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractDoubleAssert<?> after(AbstractDoubleAssert<?> doubleAssert, double\
        \ n) {\n        return doubleAssert.isEqualTo(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjdoublerulesrecipesusdabstractdoubleassertisequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsNotEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsNotEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractDoubleAssertIsNotEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractDoubleAssert<?> before(AbstractDoubleAssert<?> doubleAssert,\
        \ double n) {\n        return Refaster.anyOf(doubleAssert.isNotCloseTo(n,\
        \ offset(0.0)), doubleAssert.isNotCloseTo(n, withPercentage(0.0)));\n    }\n\
        \    \n    @AfterTemplate\n    AbstractDoubleAssert<?> after(AbstractDoubleAssert<?>\
        \ doubleAssert, double n) {\n        return doubleAssert.isNotEqualTo(n);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjdoublerulesrecipesusdabstractdoubleassertisnotequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsNotZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsNotZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractDoubleAssertIsNotZero {\n    \n    @BeforeTemplate\n\
        \    AbstractDoubleAssert<?> before(AbstractDoubleAssert<?> doubleAssert)\
        \ {\n        return doubleAssert.isNotZero();\n    }\n    \n    @AfterTemplate\n\
        \    AbstractDoubleAssert<?> after(AbstractDoubleAssert<?> doubleAssert) {\n\
        \        return doubleAssert.isNotEqualTo(0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjdoublerulesrecipesusdabstractdoubleassertisnotzerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsOneRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsOneRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractDoubleAssertIsOne {\n    \n    @BeforeTemplate\n\
        \    AbstractDoubleAssert<?> before(AbstractDoubleAssert<?> doubleAssert)\
        \ {\n        return doubleAssert.isOne();\n    }\n    \n    @AfterTemplate\n\
        \    AbstractDoubleAssert<?> after(AbstractDoubleAssert<?> doubleAssert) {\n\
        \        return doubleAssert.isEqualTo(1);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjdoublerulesrecipesusdabstractdoubleassertisonerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJDoubleRulesRecipes$AbstractDoubleAssertIsZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractDoubleAssertIsZero {\n    \n    @BeforeTemplate\n\
        \    AbstractDoubleAssert<?> before(AbstractDoubleAssert<?> doubleAssert)\
        \ {\n        return doubleAssert.isZero();\n    }\n    \n    @AfterTemplate\n\
        \    AbstractDoubleAssert<?> after(AbstractDoubleAssert<?> doubleAssert) {\n\
        \        return doubleAssert.isEqualTo(0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjdoublerulesrecipesusdabstractdoubleassertiszerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJFloatRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJFloatRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjfloatrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsCloseToWithOffsetRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsCloseToWithOffsetRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractFloatAssertIsCloseToWithOffset {\n    \n    @BeforeTemplate\n\
        \    AbstractFloatAssert<?> before(AbstractFloatAssert<?> floatAssert, float\
        \ n, Offset<Float> offset) {\n        return floatAssert.isEqualTo(n, offset);\n\
        \    }\n    \n    @BeforeTemplate\n    AbstractFloatAssert<?> before(AbstractFloatAssert<?>\
        \ floatAssert, Float n, Offset<Float> offset) {\n        return floatAssert.isEqualTo(n,\
        \ offset);\n    }\n    \n    @AfterTemplate\n    AbstractFloatAssert<?> after(AbstractFloatAssert<?>\
        \ floatAssert, float n, Offset<Float> offset) {\n        return floatAssert.isCloseTo(n,\
        \ offset);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjfloatrulesrecipesusdabstractfloatassertisclosetowithoffsetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractFloatAssertIsEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractFloatAssert<?> before(AbstractFloatAssert<?> floatAssert, float\
        \ n) {\n        return Refaster.anyOf(floatAssert.isCloseTo(n, offset(0.0F)),\
        \ floatAssert.isCloseTo(n, withPercentage(0)));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractFloatAssert<?> after(AbstractFloatAssert<?> floatAssert, float\
        \ n) {\n        return floatAssert.isEqualTo(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjfloatrulesrecipesusdabstractfloatassertisequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsNotEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsNotEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractFloatAssertIsNotEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractFloatAssert<?> before(AbstractFloatAssert<?> floatAssert, float\
        \ n) {\n        return Refaster.anyOf(floatAssert.isNotCloseTo(n, offset(0.0F)),\
        \ floatAssert.isNotCloseTo(n, withPercentage(0)));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractFloatAssert<?> after(AbstractFloatAssert<?> floatAssert, float\
        \ n) {\n        return floatAssert.isNotEqualTo(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjfloatrulesrecipesusdabstractfloatassertisnotequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsNotZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsNotZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractFloatAssertIsNotZero {\n    \n    @BeforeTemplate\n\
        \    AbstractFloatAssert<?> before(AbstractFloatAssert<?> floatAssert) {\n\
        \        return floatAssert.isNotZero();\n    }\n    \n    @AfterTemplate\n\
        \    AbstractFloatAssert<?> after(AbstractFloatAssert<?> floatAssert) {\n\
        \        return floatAssert.isNotEqualTo(0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjfloatrulesrecipesusdabstractfloatassertisnotzerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsOneRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsOneRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractFloatAssertIsOne {\n    \n    @BeforeTemplate\n\
        \    AbstractFloatAssert<?> before(AbstractFloatAssert<?> floatAssert) {\n\
        \        return floatAssert.isOne();\n    }\n    \n    @AfterTemplate\n  \
        \  AbstractFloatAssert<?> after(AbstractFloatAssert<?> floatAssert) {\n  \
        \      return floatAssert.isEqualTo(1);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjfloatrulesrecipesusdabstractfloatassertisonerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJFloatRulesRecipes$AbstractFloatAssertIsZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractFloatAssertIsZero {\n    \n    @BeforeTemplate\n\
        \    AbstractFloatAssert<?> before(AbstractFloatAssert<?> floatAssert) {\n\
        \        return floatAssert.isZero();\n    }\n    \n    @AfterTemplate\n \
        \   AbstractFloatAssert<?> after(AbstractFloatAssert<?> floatAssert) {\n \
        \       return floatAssert.isEqualTo(0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjfloatrulesrecipesusdabstractfloatassertiszerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJIntegerRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJIntegerRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjintegerrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes$AbstractIntegerAssertIsEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes$AbstractIntegerAssertIsEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractIntegerAssertIsEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractIntegerAssert<?> before(AbstractIntegerAssert<?> intAssert, int\
        \ n) {\n        return Refaster.anyOf(intAssert.isCloseTo(n, offset(0)), intAssert.isCloseTo(n,\
        \ withPercentage(0)));\n    }\n    \n    @AfterTemplate\n    AbstractIntegerAssert<?>\
        \ after(AbstractIntegerAssert<?> intAssert, int n) {\n        return intAssert.isEqualTo(n);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjintegerrulesrecipesusdabstractintegerassertisequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes$AbstractIntegerAssertIsNotEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes$AbstractIntegerAssertIsNotEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractIntegerAssertIsNotEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractIntegerAssert<?> before(AbstractIntegerAssert<?> intAssert, int\
        \ n) {\n        return Refaster.anyOf(intAssert.isNotCloseTo(n, offset(0)),\
        \ intAssert.isNotCloseTo(n, withPercentage(0)));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractIntegerAssert<?> after(AbstractIntegerAssert<?> intAssert, int\
        \ n) {\n        return intAssert.isNotEqualTo(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjintegerrulesrecipesusdabstractintegerassertisnotequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes$AbstractIntegerAssertIsNotZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes$AbstractIntegerAssertIsNotZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractIntegerAssertIsNotZero {\n    \n    @BeforeTemplate\n\
        \    AbstractIntegerAssert<?> before(AbstractIntegerAssert<?> intAssert) {\n\
        \        return intAssert.isNotZero();\n    }\n    \n    @AfterTemplate\n\
        \    AbstractIntegerAssert<?> after(AbstractIntegerAssert<?> intAssert) {\n\
        \        return intAssert.isNotEqualTo(0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjintegerrulesrecipesusdabstractintegerassertisnotzerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes$AbstractIntegerAssertIsOneRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes$AbstractIntegerAssertIsOneRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractIntegerAssertIsOne {\n    \n    @BeforeTemplate\n\
        \    AbstractIntegerAssert<?> before(AbstractIntegerAssert<?> intAssert) {\n\
        \        return intAssert.isOne();\n    }\n    \n    @AfterTemplate\n    AbstractIntegerAssert<?>\
        \ after(AbstractIntegerAssert<?> intAssert) {\n        return intAssert.isEqualTo(1);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjintegerrulesrecipesusdabstractintegerassertisonerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes$AbstractIntegerAssertIsZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJIntegerRulesRecipes$AbstractIntegerAssertIsZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractIntegerAssertIsZero {\n    \n    @BeforeTemplate\n\
        \    AbstractIntegerAssert<?> before(AbstractIntegerAssert<?> intAssert) {\n\
        \        return intAssert.isZero();\n    }\n    \n    @AfterTemplate\n   \
        \ AbstractIntegerAssert<?> after(AbstractIntegerAssert<?> intAssert) {\n \
        \       return intAssert.isEqualTo(0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjintegerrulesrecipesusdabstractintegerassertiszerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJLongRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJLongRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjlongrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes$AbstractLongAssertIsEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes$AbstractLongAssertIsEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractLongAssertIsEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractLongAssert<?> before(AbstractLongAssert<?> longAssert, long n)\
        \ {\n        return Refaster.anyOf(longAssert.isCloseTo(n, offset(0L)), longAssert.isCloseTo(n,\
        \ withPercentage(0)));\n    }\n    \n    @AfterTemplate\n    AbstractLongAssert<?>\
        \ after(AbstractLongAssert<?> longAssert, long n) {\n        return longAssert.isEqualTo(n);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjlongrulesrecipesusdabstractlongassertisequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes$AbstractLongAssertIsNotEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes$AbstractLongAssertIsNotEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractLongAssertIsNotEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractLongAssert<?> before(AbstractLongAssert<?> longAssert, long n)\
        \ {\n        return Refaster.anyOf(longAssert.isNotCloseTo(n, offset(0L)),\
        \ longAssert.isNotCloseTo(n, withPercentage(0)));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractLongAssert<?> after(AbstractLongAssert<?> longAssert, long n)\
        \ {\n        return longAssert.isNotEqualTo(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjlongrulesrecipesusdabstractlongassertisnotequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes$AbstractLongAssertIsNotZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes$AbstractLongAssertIsNotZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractLongAssertIsNotZero {\n    \n    @BeforeTemplate\n\
        \    AbstractLongAssert<?> before(AbstractLongAssert<?> longAssert) {\n  \
        \      return longAssert.isNotZero();\n    }\n    \n    @AfterTemplate\n \
        \   AbstractLongAssert<?> after(AbstractLongAssert<?> longAssert) {\n    \
        \    return longAssert.isNotEqualTo(0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjlongrulesrecipesusdabstractlongassertisnotzerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes$AbstractLongAssertIsOneRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes$AbstractLongAssertIsOneRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractLongAssertIsOne {\n    \n    @BeforeTemplate\n\
        \    AbstractLongAssert<?> before(AbstractLongAssert<?> longAssert) {\n  \
        \      return longAssert.isOne();\n    }\n    \n    @AfterTemplate\n    AbstractLongAssert<?>\
        \ after(AbstractLongAssert<?> longAssert) {\n        return longAssert.isEqualTo(1);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjlongrulesrecipesusdabstractlongassertisonerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes$AbstractLongAssertIsZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJLongRulesRecipes$AbstractLongAssertIsZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractLongAssertIsZero {\n    \n    @BeforeTemplate\n\
        \    AbstractLongAssert<?> before(AbstractLongAssert<?> longAssert) {\n  \
        \      return longAssert.isZero();\n    }\n    \n    @AfterTemplate\n    AbstractLongAssert<?>\
        \ after(AbstractLongAssert<?> longAssert) {\n        return longAssert.isEqualTo(0);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjlongrulesrecipesusdabstractlongassertiszerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJNumberRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJNumberRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJNumberRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJNumberRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjnumberrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJNumberRulesRecipes$NumberAssertIsNegativeRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJNumberRulesRecipes$NumberAssertIsNegativeRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class NumberAssertIsNegative {\n    \n    @BeforeTemplate\n \
        \   AbstractByteAssert<?> before(AbstractByteAssert<?> numberAssert) {\n \
        \       return Refaster.anyOf(numberAssert.isLessThan((byte)0), numberAssert.isLessThanOrEqualTo((byte)-1));\n\
        \    }\n    \n    @BeforeTemplate\n    AbstractShortAssert<?> before(AbstractShortAssert<?>\
        \ numberAssert) {\n        return Refaster.anyOf(numberAssert.isLessThan((short)0),\
        \ numberAssert.isLessThanOrEqualTo((short)-1));\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractIntegerAssert<?> before(AbstractIntegerAssert<?> numberAssert)\
        \ {\n        return Refaster.anyOf(numberAssert.isLessThan(0), numberAssert.isLessThanOrEqualTo(-1));\n\
        \    }\n    \n    @BeforeTemplate\n    AbstractLongAssert<?> before(AbstractLongAssert<?>\
        \ numberAssert) {\n        return Refaster.anyOf(numberAssert.isLessThan(0),\
        \ numberAssert.isLessThanOrEqualTo(-1));\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractFloatAssert<?> before(AbstractFloatAssert<?> numberAssert) {\n\
        \        return numberAssert.isLessThan(0);\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractDoubleAssert<?> before(AbstractDoubleAssert<?> numberAssert)\
        \ {\n        return numberAssert.isLessThan(0);\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractBigIntegerAssert<?> before(AbstractBigIntegerAssert<?> numberAssert)\
        \ {\n        return Refaster.anyOf(numberAssert.isLessThan(BigInteger.ZERO),\
        \ numberAssert.isLessThanOrEqualTo(BigInteger.valueOf(-1)));\n    }\n    \n\
        \    @BeforeTemplate\n    AbstractBigDecimalAssert<?> before(AbstractBigDecimalAssert<?>\
        \ numberAssert) {\n        return numberAssert.isLessThan(BigDecimal.ZERO);\n\
        \    }\n    \n    @AfterTemplate\n    NumberAssert<?, ?> after(NumberAssert<?,\
        \ ?> numberAssert) {\n        return numberAssert.isNegative();\n    }\n}\n\
        ```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjnumberrulesrecipesusdnumberassertisnegativerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJNumberRulesRecipes$NumberAssertIsNotNegativeRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJNumberRulesRecipes$NumberAssertIsNotNegativeRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class NumberAssertIsNotNegative {\n    \n    @BeforeTemplate\n\
        \    AbstractByteAssert<?> before(AbstractByteAssert<?> numberAssert) {\n\
        \        return Refaster.anyOf(numberAssert.isGreaterThanOrEqualTo((byte)0),\
        \ numberAssert.isGreaterThan((byte)-1));\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractShortAssert<?> before(AbstractShortAssert<?> numberAssert) {\n\
        \        return Refaster.anyOf(numberAssert.isGreaterThanOrEqualTo((short)0),\
        \ numberAssert.isGreaterThan((short)-1));\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractIntegerAssert<?> before(AbstractIntegerAssert<?> numberAssert)\
        \ {\n        return Refaster.anyOf(numberAssert.isGreaterThanOrEqualTo(0),\
        \ numberAssert.isGreaterThan(-1));\n    }\n    \n    @BeforeTemplate\n   \
        \ AbstractLongAssert<?> before(AbstractLongAssert<?> numberAssert) {\n   \
        \     return Refaster.anyOf(numberAssert.isGreaterThanOrEqualTo(0), numberAssert.isGreaterThan(-1));\n\
        \    }\n    \n    @BeforeTemplate\n    AbstractFloatAssert<?> before(AbstractFloatAssert<?>\
        \ numberAssert) {\n        return numberAssert.isGreaterThanOrEqualTo(0);\n\
        \    }\n    \n    @BeforeTemplate\n    AbstractDoubleAssert<?> before(AbstractDoubleAssert<?>\
        \ numberAssert) {\n        return numberAssert.isGreaterThanOrEqualTo(0);\n\
        \    }\n    \n    @BeforeTemplate\n    AbstractBigIntegerAssert<?> before(AbstractBigIntegerAssert<?>\
        \ numberAssert) {\n        return Refaster.anyOf(numberAssert.isGreaterThanOrEqualTo(BigInteger.ZERO),\
        \ numberAssert.isGreaterThan(BigInteger.valueOf(-1)));\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractBigDecimalAssert<?> before(AbstractBigDecimalAssert<?> numberAssert)\
        \ {\n        return numberAssert.isGreaterThanOrEqualTo(BigDecimal.ZERO);\n\
        \    }\n    \n    @AfterTemplate\n    NumberAssert<?, ?> after(NumberAssert<?,\
        \ ?> numberAssert) {\n        return numberAssert.isNotNegative();\n    }\n\
        }\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjnumberrulesrecipesusdnumberassertisnotnegativerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJNumberRulesRecipes$NumberAssertIsNotPositiveRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJNumberRulesRecipes$NumberAssertIsNotPositiveRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class NumberAssertIsNotPositive {\n    \n    @BeforeTemplate\n\
        \    AbstractByteAssert<?> before(AbstractByteAssert<?> numberAssert) {\n\
        \        return Refaster.anyOf(numberAssert.isLessThanOrEqualTo((byte)0),\
        \ numberAssert.isLessThan((byte)1));\n    }\n    \n    @BeforeTemplate\n \
        \   AbstractShortAssert<?> before(AbstractShortAssert<?> numberAssert) {\n\
        \        return Refaster.anyOf(numberAssert.isLessThanOrEqualTo((short)0),\
        \ numberAssert.isLessThan((short)1));\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractIntegerAssert<?> before(AbstractIntegerAssert<?> numberAssert)\
        \ {\n        return Refaster.anyOf(numberAssert.isLessThanOrEqualTo(0), numberAssert.isLessThan(1));\n\
        \    }\n    \n    @BeforeTemplate\n    AbstractLongAssert<?> before(AbstractLongAssert<?>\
        \ numberAssert) {\n        return Refaster.anyOf(numberAssert.isLessThanOrEqualTo(0),\
        \ numberAssert.isLessThan(1));\n    }\n    \n    @BeforeTemplate\n    AbstractFloatAssert<?>\
        \ before(AbstractFloatAssert<?> numberAssert) {\n        return numberAssert.isLessThanOrEqualTo(0);\n\
        \    }\n    \n    @BeforeTemplate\n    AbstractDoubleAssert<?> before(AbstractDoubleAssert<?>\
        \ numberAssert) {\n        return numberAssert.isLessThanOrEqualTo(0);\n \
        \   }\n    \n    @BeforeTemplate\n    AbstractBigIntegerAssert<?> before(AbstractBigIntegerAssert<?>\
        \ numberAssert) {\n        return Refaster.anyOf(numberAssert.isLessThanOrEqualTo(BigInteger.ZERO),\
        \ numberAssert.isLessThan(BigInteger.valueOf(1)));\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractBigDecimalAssert<?> before(AbstractBigDecimalAssert<?> numberAssert)\
        \ {\n        return numberAssert.isLessThanOrEqualTo(BigDecimal.ZERO);\n \
        \   }\n    \n    @AfterTemplate\n    NumberAssert<?, ?> after(NumberAssert<?,\
        \ ?> numberAssert) {\n        return numberAssert.isNotPositive();\n    }\n\
        }\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjnumberrulesrecipesusdnumberassertisnotpositiverecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJNumberRulesRecipes$NumberAssertIsPositiveRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJNumberRulesRecipes$NumberAssertIsPositiveRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class NumberAssertIsPositive {\n    \n    @BeforeTemplate\n \
        \   AbstractByteAssert<?> before(AbstractByteAssert<?> numberAssert) {\n \
        \       return Refaster.anyOf(numberAssert.isGreaterThan((byte)0), numberAssert.isGreaterThanOrEqualTo((byte)1));\n\
        \    }\n    \n    @BeforeTemplate\n    AbstractShortAssert<?> before(AbstractShortAssert<?>\
        \ numberAssert) {\n        return Refaster.anyOf(numberAssert.isGreaterThan((short)0),\
        \ numberAssert.isGreaterThanOrEqualTo((short)1));\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractIntegerAssert<?> before(AbstractIntegerAssert<?> numberAssert)\
        \ {\n        return Refaster.anyOf(numberAssert.isGreaterThan(0), numberAssert.isGreaterThanOrEqualTo(1));\n\
        \    }\n    \n    @BeforeTemplate\n    AbstractLongAssert<?> before(AbstractLongAssert<?>\
        \ numberAssert) {\n        return Refaster.anyOf(numberAssert.isGreaterThan(0),\
        \ numberAssert.isGreaterThanOrEqualTo(1));\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractFloatAssert<?> before(AbstractFloatAssert<?> numberAssert) {\n\
        \        return numberAssert.isGreaterThan(0);\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractDoubleAssert<?> before(AbstractDoubleAssert<?> numberAssert)\
        \ {\n        return numberAssert.isGreaterThan(0);\n    }\n    \n    @BeforeTemplate\n\
        \    AbstractBigIntegerAssert<?> before(AbstractBigIntegerAssert<?> numberAssert)\
        \ {\n        return Refaster.anyOf(numberAssert.isGreaterThan(BigInteger.ZERO),\
        \ numberAssert.isGreaterThanOrEqualTo(BigInteger.valueOf(1)));\n    }\n  \
        \  \n    @BeforeTemplate\n    AbstractBigDecimalAssert<?> before(AbstractBigDecimalAssert<?>\
        \ numberAssert) {\n        return numberAssert.isGreaterThan(BigDecimal.ZERO);\n\
        \    }\n    \n    @AfterTemplate\n    NumberAssert<?, ?> after(NumberAssert<?,\
        \ ?> numberAssert) {\n        return numberAssert.isPositive();\n    }\n}\n\
        ```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjnumberrulesrecipesusdnumberassertispositiverecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJPrimitiveRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJPrimitiveRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjprimitiverulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsEqualTo {\n    \n    @BeforeTemplate\n    AbstractBooleanAssert<?>\
        \ before(boolean actual, boolean expected) {\n        return Refaster.anyOf(assertThat(actual\
        \ == expected).isTrue(), assertThat(actual != expected).isFalse());\n    }\n\
        \    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"java:S1244\")\n\
        \    AbstractBooleanAssert<?> before(double actual, double expected) {\n \
        \       return Refaster.anyOf(assertThat(actual == expected).isTrue(), assertThat(actual\
        \ != expected).isFalse());\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    AbstractBooleanAssert<?> after(boolean actual,\
        \ boolean expected) {\n        return assertThat(actual).isEqualTo(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjprimitiverulesrecipesusdassertthatisequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsGreaterThanOrEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsGreaterThanOrEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsGreaterThanOrEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(double actual, double expected) {\n \
        \       return Refaster.anyOf(assertThat(actual >= expected).isTrue(), assertThat(actual\
        \ < expected).isFalse());\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    AbstractDoubleAssert<?> after(double actual,\
        \ double expected) {\n        return assertThat(actual).isGreaterThanOrEqualTo(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjprimitiverulesrecipesusdassertthatisgreaterthanorequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsGreaterThanRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsGreaterThanRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsGreaterThan {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(double actual, double expected) {\n \
        \       return Refaster.anyOf(assertThat(actual > expected).isTrue(), assertThat(actual\
        \ <= expected).isFalse());\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    AbstractDoubleAssert<?> after(double actual,\
        \ double expected) {\n        return assertThat(actual).isGreaterThan(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjprimitiverulesrecipesusdassertthatisgreaterthanrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsLessThanOrEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsLessThanOrEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsLessThanOrEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(double actual, double expected) {\n \
        \       return Refaster.anyOf(assertThat(actual <= expected).isTrue(), assertThat(actual\
        \ > expected).isFalse());\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    AbstractDoubleAssert<?> after(double actual,\
        \ double expected) {\n        return assertThat(actual).isLessThanOrEqualTo(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjprimitiverulesrecipesusdassertthatislessthanorequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsLessThanRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsLessThanRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsLessThan {\n    \n    @BeforeTemplate\n   \
        \ AbstractBooleanAssert<?> before(double actual, double expected) {\n    \
        \    return Refaster.anyOf(assertThat(actual < expected).isTrue(), assertThat(actual\
        \ >= expected).isFalse());\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    AbstractDoubleAssert<?> after(double actual,\
        \ double expected) {\n        return assertThat(actual).isLessThan(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjprimitiverulesrecipesusdassertthatislessthanrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsNotEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJPrimitiveRulesRecipes$AssertThatIsNotEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsNotEqualTo {\n    \n    @BeforeTemplate\n \
        \   AbstractBooleanAssert<?> before(boolean actual, boolean expected) {\n\
        \        return Refaster.anyOf(assertThat(actual != expected).isTrue(), assertThat(actual\
        \ == expected).isFalse());\n    }\n    \n    @BeforeTemplate\n    @SuppressWarnings(value\
        \ = \"java:S1244\")\n    AbstractBooleanAssert<?> before(double actual, double\
        \ expected) {\n        return Refaster.anyOf(assertThat(actual != expected).isTrue(),\
        \ assertThat(actual == expected).isFalse());\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    AbstractBooleanAssert<?>\
        \ after(boolean actual, boolean expected) {\n        return assertThat(actual).isNotEqualTo(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjprimitiverulesrecipesusdassertthatisnotequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJRulesRecipes"
      description: "Refaster rules related to AssertJ expressions and statements [Source](https://error-prone.picnic.tech/refasterrules/AssertJRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJRulesRecipes$AssertThatOptionalDoubleRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJRulesRecipes$AssertThatOptionalDoubleRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatOptionalDouble {\n    \n    @BeforeTemplate\n\
        \    AbstractDoubleAssert<?> before(OptionalDouble optional, double expected)\
        \ {\n        return assertThat(optional.getAsDouble()).isEqualTo(expected);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    OptionalDoubleAssert after(OptionalDouble optional, double expected)\
        \ {\n        return assertThat(optional).hasValue(expected);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjrulesrecipesusdassertthatoptionaldoublerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJRulesRecipes$AssertThatOptionalIntRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJRulesRecipes$AssertThatOptionalIntRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatOptionalInt {\n    \n    @BeforeTemplate\n  \
        \  AbstractIntegerAssert<?> before(OptionalInt optional, int expected) {\n\
        \        return assertThat(optional.getAsInt()).isEqualTo(expected);\n   \
        \ }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    OptionalIntAssert after(OptionalInt optional, int expected) {\n     \
        \   return assertThat(optional).hasValue(expected);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjrulesrecipesusdassertthatoptionalintrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJRulesRecipes$AssertThatOptionalLongRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJRulesRecipes$AssertThatOptionalLongRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatOptionalLong {\n    \n    @BeforeTemplate\n \
        \   AbstractLongAssert<?> before(OptionalLong optional, long expected) {\n\
        \        return assertThat(optional.getAsLong()).isEqualTo(expected);\n  \
        \  }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    OptionalLongAssert after(OptionalLong optional, long expected) {\n  \
        \      return assertThat(optional).hasValue(expected);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjrulesrecipesusdassertthatoptionallongrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJShortRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJShortRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjshortrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes$AbstractShortAssertIsEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes$AbstractShortAssertIsEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractShortAssertIsEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractShortAssert<?> before(AbstractShortAssert<?> shortAssert, short\
        \ n) {\n        return Refaster.anyOf(shortAssert.isCloseTo(n, offset((short)0)),\
        \ shortAssert.isCloseTo(n, withPercentage(0)));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractShortAssert<?> after(AbstractShortAssert<?> shortAssert, short\
        \ n) {\n        return shortAssert.isEqualTo(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjshortrulesrecipesusdabstractshortassertisequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes$AbstractShortAssertIsNotEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes$AbstractShortAssertIsNotEqualToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractShortAssertIsNotEqualTo {\n    \n    @BeforeTemplate\n\
        \    AbstractShortAssert<?> before(AbstractShortAssert<?> shortAssert, short\
        \ n) {\n        return Refaster.anyOf(shortAssert.isNotCloseTo(n, offset((short)0)),\
        \ shortAssert.isNotCloseTo(n, withPercentage(0)));\n    }\n    \n    @AfterTemplate\n\
        \    AbstractShortAssert<?> after(AbstractShortAssert<?> shortAssert, short\
        \ n) {\n        return shortAssert.isNotEqualTo(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjshortrulesrecipesusdabstractshortassertisnotequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes$AbstractShortAssertIsNotZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes$AbstractShortAssertIsNotZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractShortAssertIsNotZero {\n    \n    @BeforeTemplate\n\
        \    AbstractShortAssert<?> before(AbstractShortAssert<?> shortAssert) {\n\
        \        return shortAssert.isNotZero();\n    }\n    \n    @AfterTemplate\n\
        \    AbstractShortAssert<?> after(AbstractShortAssert<?> shortAssert) {\n\
        \        return shortAssert.isNotEqualTo((short)0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjshortrulesrecipesusdabstractshortassertisnotzerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes$AbstractShortAssertIsOneRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes$AbstractShortAssertIsOneRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractShortAssertIsOne {\n    \n    @BeforeTemplate\n\
        \    AbstractShortAssert<?> before(AbstractShortAssert<?> shortAssert) {\n\
        \        return shortAssert.isOne();\n    }\n    \n    @AfterTemplate\n  \
        \  AbstractShortAssert<?> after(AbstractShortAssert<?> shortAssert) {\n  \
        \      return shortAssert.isEqualTo((short)1);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjshortrulesrecipesusdabstractshortassertisonerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes$AbstractShortAssertIsZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJShortRulesRecipes$AbstractShortAssertIsZeroRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractShortAssertIsZero {\n    \n    @BeforeTemplate\n\
        \    AbstractShortAssert<?> before(AbstractShortAssert<?> shortAssert) {\n\
        \        return shortAssert.isZero();\n    }\n    \n    @AfterTemplate\n \
        \   AbstractShortAssert<?> after(AbstractShortAssert<?> shortAssert) {\n \
        \       return shortAssert.isEqualTo((short)0);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjshortrulesrecipesusdabstractshortassertiszerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes"
      description: "Refaster template recipes for `tech.picnic.errorprone.refasterrules.AssertJStringRules`.\
        \ [Source](https://error-prone.picnic.tech/refasterrules/AssertJStringRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjstringrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AbstractStringAssertStringIsEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AbstractStringAssertStringIsEmptyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractStringAssertStringIsEmpty {\n    \n    @BeforeTemplate\n\
        \    void before(AbstractStringAssert<?> stringAssert) {\n        stringAssert.isEqualTo(\"\
        \");\n    }\n    \n    @AfterTemplate\n    void after(AbstractStringAssert<?>\
        \ stringAssert) {\n        stringAssert.isEmpty();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjstringrulesrecipesusdabstractstringassertstringisemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AbstractStringAssertStringIsNotEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AbstractStringAssertStringIsNotEmptyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AbstractStringAssertStringIsNotEmpty {\n    \n    @BeforeTemplate\n\
        \    AbstractStringAssert<?> before(AbstractStringAssert<?> stringAssert)\
        \ {\n        return stringAssert.isNotEqualTo(\"\");\n    }\n    \n    @AfterTemplate\n\
        \    AbstractStringAssert<?> after(AbstractStringAssert<?> stringAssert) {\n\
        \        return stringAssert.isNotEmpty();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjstringrulesrecipesusdabstractstringassertstringisnotemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatDoesNotMatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatDoesNotMatchRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatDoesNotMatch {\n    \n    @BeforeTemplate\n \
        \   AbstractAssert<?, ?> before(String string, String regex) {\n        return\
        \ assertThat(string.matches(regex)).isFalse();\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    AbstractAssert<?,\
        \ ?> after(String string, String regex) {\n        return assertThat(string).doesNotMatch(regex);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjstringrulesrecipesusdassertthatdoesnotmatchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatMatchesRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatMatchesRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatMatches {\n    \n    @BeforeTemplate\n    AbstractAssert<?,\
        \ ?> before(String string, String regex) {\n        return assertThat(string.matches(regex)).isTrue();\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractAssert<?, ?> after(String string, String regex) {\n        return\
        \ assertThat(string).matches(regex);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjstringrulesrecipesusdassertthatmatchesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatPathContentRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatPathContentRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatPathContent {\n    \n    @BeforeTemplate\n  \
        \  AbstractStringAssert<?> before(Path path, Charset charset) throws IOException\
        \ {\n        return assertThat(Files.readString(path, charset));\n    }\n\
        \    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractStringAssert<?> after(Path path, Charset charset) {\n       \
        \ return assertThat(path).content(charset);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjstringrulesrecipesusdassertthatpathcontentrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatPathContentUtf8Recipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatPathContentUtf8Recipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatPathContentUtf8 {\n    \n    @BeforeTemplate\n\
        \    AbstractStringAssert<?> before(Path path) throws IOException {\n    \
        \    return assertThat(Files.readString(path));\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    AbstractStringAssert<?>\
        \ after(Path path) {\n        return assertThat(path).content(UTF_8);\n  \
        \  }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjstringrulesrecipesusdassertthatpathcontentutf8recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatStringContainsRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatStringContainsRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatStringContains {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(String string, CharSequence substring)\
        \ {\n        return assertThat(string.contains(substring)).isTrue();\n   \
        \ }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractStringAssert<?> after(String string, CharSequence substring)\
        \ {\n        return assertThat(string).contains(substring);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjstringrulesrecipesusdassertthatstringcontainsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatStringDoesNotContainRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJStringRulesRecipes$AssertThatStringDoesNotContainRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatStringDoesNotContain {\n    \n    @BeforeTemplate\n\
        \    AbstractBooleanAssert<?> before(String string, CharSequence substring)\
        \ {\n        return assertThat(string.contains(substring)).isFalse();\n  \
        \  }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractStringAssert<?> after(String string, CharSequence substring)\
        \ {\n        return assertThat(string).doesNotContain(substring);\n    }\n\
        }\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjstringrulesrecipesusdassertthatstringdoesnotcontainrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes"
      description: "For reasons of consistency we prefer `org.assertj.core.api.Assertions#assertThatThrownBy`\
        \ over static methods for specific exception\n types. Note that only the most\
        \ common assertion expressions are rewritten here; covering all\n cases would\
        \ require the implementation of an Error Prone check instead. [Source](https://error-prone.picnic.tech/refasterrules/AssertJThrowingCallableRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByHasMessageContainingRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByHasMessageContainingRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByHasMessageContaining {\n    \n    @BeforeTemplate\n\
        \    @SuppressWarnings(value = \"AssertThatThrownByAsInstanceOfThrowable\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ Class<? extends Throwable> exceptionType, String message) {\n        return\
        \ assertThatExceptionOfType(exceptionType).isThrownBy(throwingCallable).withMessageContaining(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, Class<?\
        \ extends Throwable> exceptionType, String message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(exceptionType).hasMessageContaining(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyhasmessagecontainingrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByHasMessageNotContainingRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByHasMessageNotContainingRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByHasMessageNotContaining {\n    \n   \
        \ @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByAsInstanceOfThrowable\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ Class<? extends Throwable> exceptionType, String message) {\n        return\
        \ assertThatExceptionOfType(exceptionType).isThrownBy(throwingCallable).withMessageNotContaining(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, Class<?\
        \ extends Throwable> exceptionType, String message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(exceptionType).hasMessageNotContaining(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyhasmessagenotcontainingrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByHasMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByHasMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByHasMessage {\n    \n    @BeforeTemplate\n\
        \    @SuppressWarnings(value = \"AssertThatThrownByAsInstanceOfThrowable\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ Class<? extends Throwable> exceptionType, String message) {\n        return\
        \ assertThatExceptionOfType(exceptionType).isThrownBy(throwingCallable).withMessage(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, Class<?\
        \ extends Throwable> exceptionType, String message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(exceptionType).hasMessage(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyhasmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByHasMessageStartingWithRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByHasMessageStartingWithRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByHasMessageStartingWith {\n    \n    @BeforeTemplate\n\
        \    @SuppressWarnings(value = \"AssertThatThrownByAsInstanceOfThrowable\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ Class<? extends Throwable> exceptionType, String message) {\n        return\
        \ assertThatExceptionOfType(exceptionType).isThrownBy(throwingCallable).withMessageStartingWith(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, Class<?\
        \ extends Throwable> exceptionType, String message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(exceptionType).hasMessageStartingWith(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyhasmessagestartingwithrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionHasMessageContainingRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionHasMessageContainingRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIOExceptionHasMessageContaining {\n \
        \   \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIOException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIOException().isThrownBy(throwingCallable).withMessageContaining(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IOException.class).hasMessageContaining(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyioexceptionhasmessagecontainingrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionHasMessageNotContainingRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionHasMessageNotContainingRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIOExceptionHasMessageNotContaining {\n\
        \    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIOException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIOException().isThrownBy(throwingCallable).withMessageNotContaining(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IOException.class).hasMessageNotContaining(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyioexceptionhasmessagenotcontainingrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionHasMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionHasMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIOExceptionHasMessage {\n    \n    @BeforeTemplate\n\
        \    @SuppressWarnings(value = \"AssertThatThrownByIOException\")\n    AbstractObjectAssert<?,\
        \ ?> before(ThrowingCallable throwingCallable, String message) {\n       \
        \ return assertThatIOException().isThrownBy(throwingCallable).withMessage(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IOException.class).hasMessage(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyioexceptionhasmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionHasMessageStartingWithRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionHasMessageStartingWithRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIOExceptionHasMessageStartingWith {\n\
        \    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIOException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIOException().isThrownBy(throwingCallable).withMessageStartingWith(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IOException.class).hasMessageStartingWith(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyioexceptionhasmessagestartingwithrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIOException {\n    \n    @BeforeTemplate\n\
        \    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable)\
        \ {\n        return assertThatIOException().isThrownBy(throwingCallable);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable) {\n\
        \        return assertThatThrownBy(throwingCallable).isInstanceOf(IOException.class);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyioexceptionrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionRootCauseHasMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIOExceptionRootCauseHasMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIOExceptionRootCauseHasMessage {\n  \
        \  \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIOException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIOException().isThrownBy(throwingCallable).havingRootCause().withMessage(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IOException.class).rootCause().hasMessage(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyioexceptionrootcausehasmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalArgumentExceptionHasMessageContainingRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalArgumentExceptionHasMessageContainingRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalArgumentExceptionHasMessageContaining\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIllegalArgumentException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIllegalArgumentException().isThrownBy(throwingCallable).withMessageContaining(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalArgumentException.class).hasMessageContaining(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalargumentexceptionhasmessagecontainingrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalArgumentExceptionHasMessageRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalArgumentExceptionHasMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalArgumentExceptionHasMessage {\n\
        \    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIllegalArgumentException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIllegalArgumentException().isThrownBy(throwingCallable).withMessage(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalArgumentException.class).hasMessage(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalargumentexceptionhasmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalArgumentExceptionHasMessageStartingWithRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalArgumentExceptionHasMessageStartingWithRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalArgumentExceptionHasMessageStartingWith\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIllegalArgumentException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIllegalArgumentException().isThrownBy(throwingCallable).withMessageStartingWith(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalArgumentException.class).hasMessageStartingWith(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalargumentexceptionhasmessagestartingwithrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalArgumentExceptionRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalArgumentExceptionRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalArgumentException {\n    \n  \
        \  @BeforeTemplate\n    AbstractObjectAssert<?, ?> before(ThrowingCallable\
        \ throwingCallable) {\n        return assertThatIllegalArgumentException().isThrownBy(throwingCallable);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable) {\n\
        \        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalArgumentException.class);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalargumentexceptionrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalArgumentExceptionRootCauseHasMessageRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalArgumentExceptionRootCauseHasMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalArgumentExceptionRootCauseHasMessage\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIllegalArgumentException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIllegalArgumentException().isThrownBy(throwingCallable).havingRootCause().withMessage(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalArgumentException.class).rootCause().hasMessage(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalargumentexceptionrootcausehasmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionHasMessageContainingRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionHasMessageContainingRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalStateExceptionHasMessageContaining\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIllegalStateException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIllegalStateException().isThrownBy(throwingCallable).withMessageContaining(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalStateException.class).hasMessageContaining(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalstateexceptionhasmessagecontainingrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionHasMessageNotContainingRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionHasMessageNotContainingRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalStateExceptionHasMessageNotContaining\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIllegalStateException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIllegalStateException().isThrownBy(throwingCallable).withMessageNotContaining(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalStateException.class).hasMessageNotContaining(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalstateexceptionhasmessagenotcontainingrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionHasMessageRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionHasMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalStateExceptionHasMessage {\n \
        \   \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIllegalStateException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIllegalStateException().isThrownBy(throwingCallable).withMessage(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalStateException.class).hasMessage(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalstateexceptionhasmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionHasMessageStartingWithRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionHasMessageStartingWithRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalStateExceptionHasMessageStartingWith\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIllegalStateException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIllegalStateException().isThrownBy(throwingCallable).withMessageStartingWith(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalStateException.class).hasMessageStartingWith(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalstateexceptionhasmessagestartingwithrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalStateException {\n    \n    @BeforeTemplate\n\
        \    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable)\
        \ {\n        return assertThatIllegalStateException().isThrownBy(throwingCallable);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable) {\n\
        \        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalStateException.class);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalstateexceptionrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionRootCauseHasMessageRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByIllegalStateExceptionRootCauseHasMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByIllegalStateExceptionRootCauseHasMessage\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByIllegalStateException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatIllegalStateException().isThrownBy(throwingCallable).havingRootCause().withMessage(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(IllegalStateException.class).rootCause().hasMessage(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyillegalstateexceptionrootcausehasmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionHasMessageContainingRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionHasMessageContainingRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByNullPointerExceptionHasMessageContaining\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByNullPointerException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatNullPointerException().isThrownBy(throwingCallable).withMessageContaining(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(NullPointerException.class).hasMessageContaining(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbynullpointerexceptionhasmessagecontainingrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionHasMessageNotContainingRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionHasMessageNotContainingRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByNullPointerExceptionHasMessageNotContaining\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByNullPointerException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatNullPointerException().isThrownBy(throwingCallable).withMessageNotContaining(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(NullPointerException.class).hasMessageNotContaining(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbynullpointerexceptionhasmessagenotcontainingrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionHasMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionHasMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByNullPointerExceptionHasMessage {\n  \
        \  \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByNullPointerException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatNullPointerException().isThrownBy(throwingCallable).withMessage(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(NullPointerException.class).hasMessage(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbynullpointerexceptionhasmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionHasMessageStartingWithRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionHasMessageStartingWithRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByNullPointerExceptionHasMessageStartingWith\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByNullPointerException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatNullPointerException().isThrownBy(throwingCallable).withMessageStartingWith(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(NullPointerException.class).hasMessageStartingWith(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbynullpointerexceptionhasmessagestartingwithrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByNullPointerException {\n    \n    @BeforeTemplate\n\
        \    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable)\
        \ {\n        return assertThatNullPointerException().isThrownBy(throwingCallable);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable) {\n\
        \        return assertThatThrownBy(throwingCallable).isInstanceOf(NullPointerException.class);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbynullpointerexceptionrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionRootCauseHasMessageRecipe
    : name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByNullPointerExceptionRootCauseHasMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByNullPointerExceptionRootCauseHasMessage\
        \ {\n    \n    @BeforeTemplate\n    @SuppressWarnings(value = \"AssertThatThrownByNullPointerException\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ String message) {\n        return assertThatNullPointerException().isThrownBy(throwingCallable).havingRootCause().withMessage(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, String\
        \ message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(NullPointerException.class).rootCause().hasMessage(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbynullpointerexceptionrootcausehasmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByRootCauseHasMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssertJThrowingCallableRulesRecipes$AssertThatThrownByRootCauseHasMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatThrownByRootCauseHasMessage {\n    \n    @BeforeTemplate\n\
        \    @SuppressWarnings(value = \"AssertThatThrownByAsInstanceOfThrowable\"\
        )\n    AbstractObjectAssert<?, ?> before(ThrowingCallable throwingCallable,\
        \ Class<? extends Throwable> exceptionType, String message) {\n        return\
        \ assertThatExceptionOfType(exceptionType).isThrownBy(throwingCallable).havingRootCause().withMessage(message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    AbstractObjectAssert<?, ?> after(ThrowingCallable throwingCallable, Class<?\
        \ extends Throwable> exceptionType, String message) {\n        return assertThatThrownBy(throwingCallable).isInstanceOf(exceptionType).rootCause().hasMessage(message);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assertjthrowingcallablerulesrecipesusdassertthatthrownbyrootcausehasmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssortedRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.AssortedRulesRecipes"
      description: "Assorted Refaster rules that do not (yet) belong in one of the\
        \ other classes with more topical Refaster rules [Source](https://error-prone.picnic.tech/refasterrules/AssortedRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assortedrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssortedRulesRecipes$CheckIndexRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssortedRulesRecipes$CheckIndexRecipe"
      description: "Prefer `Objects#checkIndex(int, int)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assortedrulesrecipesusdcheckindexrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssortedRulesRecipes$LogicalImplicationRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssortedRulesRecipes$LogicalImplicationRecipe"
      description: "Don't unnecessarily repeat boolean expressions"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assortedrulesrecipesusdlogicalimplicationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.AssortedRulesRecipes$SplitToStreamRecipe:
      name: "tech.picnic.errorprone.refasterrules.AssortedRulesRecipes$SplitToStreamRecipe"
      description: "Prefer `Splitter#splitToStream(CharSequence)` over less efficient\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/assortedrulesrecipesusdsplittostreamrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes"
      description: "Refaster rules related to expressions dealing with `BigDecimal`s\
        \ [Source](https://error-prone.picnic.tech/refasterrules/BigDecimalRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bigdecimalrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalOneRecipe:
      name: "tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalOneRecipe"
      description: "Prefer using the constant `BigDecimal#ONE` when possible"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bigdecimalrulesrecipesusdbigdecimalonerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalSignumIsNegativeRecipe:
      name: "tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalSignumIsNegativeRecipe"
      description: "Prefer a `BigDecimal#signum()` comparison to -1 over more contrived\
        \ or less clear alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bigdecimalrulesrecipesusdbigdecimalsignumisnegativerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalSignumIsPositiveRecipe:
      name: "tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalSignumIsPositiveRecipe"
      description: "Prefer a `BigDecimal#signum()` comparison to 1 over more contrived\
        \ or less clear alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bigdecimalrulesrecipesusdbigdecimalsignumispositiverecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalSignumIsZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalSignumIsZeroRecipe"
      description: "Prefer using `BigDecimal#signum()` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bigdecimalrulesrecipesusdbigdecimalsignumiszerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalTenRecipe:
      name: "tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalTenRecipe"
      description: "Prefer using the constant `BigDecimal#TEN` when possible"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bigdecimalrulesrecipesusdbigdecimaltenrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalValueOfRecipe:
      name: "tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalValueOfRecipe"
      description: "Prefer `BigDecimal#valueOf(double)` over the associated constructor"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bigdecimalrulesrecipesusdbigdecimalvalueofrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.BigDecimalRulesRecipes$BigDecimalZeroRecipe"
      description: "Prefer using the constant `BigDecimal#ZERO` when possible"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bigdecimalrulesrecipesusdbigdecimalzerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BugCheckerRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.BugCheckerRulesRecipes"
      description: "Refaster rules related to `com.google.errorprone.bugpatterns.BugChecker`\
        \ classes [Source](https://error-prone.picnic.tech/refasterrules/BugCheckerRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bugcheckerrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BugCheckerRulesRecipes$BugCheckerRefactoringTestHelperAddInputLinesExpectUnchangedRecipe:
      name: "tech.picnic.errorprone.refasterrules.BugCheckerRulesRecipes$BugCheckerRefactoringTestHelperAddInputLinesExpectUnchangedRecipe"
      description: "Prefer `BugCheckerRefactoringTestHelper.ExpectOutput#expectUnchanged()`\
        \ over repeating the input"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bugcheckerrulesrecipesusdbugcheckerrefactoringtesthelperaddinputlinesexpectunchangedrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BugCheckerRulesRecipes$BugCheckerRefactoringTestHelperIdentityRecipe:
      name: "tech.picnic.errorprone.refasterrules.BugCheckerRulesRecipes$BugCheckerRefactoringTestHelperIdentityRecipe"
      description: "Avoid calling `BugCheckerRefactoringTestHelper#setFixChooser(FixChooser)`\
        \ or `BugCheckerRefactoringTestHelper#setImportOrder(String)` with their respective\
        \ default values"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bugcheckerrulesrecipesusdbugcheckerrefactoringtesthelperidentityrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.BugCheckerRulesRecipes$NameContentEqualsRecipe:
      name: "tech.picnic.errorprone.refasterrules.BugCheckerRulesRecipes$NameContentEqualsRecipe"
      description: "Prefer `Name#contentEquals(CharSequence)` over more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/bugcheckerrulesrecipesusdnamecontentequalsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.CharSequenceRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.CharSequenceRulesRecipes"
      description: "Refaster rules related to expressions dealing with `CharSequence`s\
        \ [Source](https://error-prone.picnic.tech/refasterrules/CharSequenceRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/charsequencerulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.CharSequenceRulesRecipes$CharSequenceIsEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.CharSequenceRulesRecipes$CharSequenceIsEmptyRecipe"
      description: "Prefer `CharSequence#isEmpty()` over alternatives that consult\
        \ the char sequence's length"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/charsequencerulesrecipesusdcharsequenceisemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes"
      description: "Refaster rules related to expressions dealing with `DoubleStream`s\
        \ [Source](https://error-prone.picnic.tech/refasterrules/DoubleStreamRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$ConcatOneDoubleStreamRecipe:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$ConcatOneDoubleStreamRecipe"
      description: "Don't unnecessarily call `Streams#concat(DoubleStream...)`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipesusdconcatonedoublestreamrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$ConcatTwoDoubleStreamsRecipe:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$ConcatTwoDoubleStreamsRecipe"
      description: "Prefer `DoubleStream#concat(DoubleStream, DoubleStream)` over\
        \ the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipesusdconcattwodoublestreamsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamAllMatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamAllMatchRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class DoubleStreamAllMatch {\n    \n    @BeforeTemplate\n   \
        \ boolean before(DoubleStream stream, DoublePredicate predicate) {\n     \
        \   return stream.noneMatch(predicate.negate());\n    }\n    \n    @AfterTemplate\n\
        \    boolean after(DoubleStream stream, DoublePredicate predicate) {\n   \
        \     return stream.allMatch(predicate);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipesusddoublestreamallmatchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamAnyMatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamAnyMatchRecipe"
      description: "Prefer `DoubleStream#anyMatch(DoublePredicate)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipesusddoublestreamanymatchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamFilterSortedRecipe:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamFilterSortedRecipe"
      description: "Apply `DoubleStream#filter(DoublePredicate)` before `DoubleStream#sorted()`\
        \ to reduce the number of elements to sort"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipesusddoublestreamfiltersortedrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamIsEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamIsEmptyRecipe"
      description: "In order to test whether a stream has any element, simply try\
        \ to find one"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipesusddoublestreamisemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamIsNotEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamIsNotEmptyRecipe"
      description: "In order to test whether a stream has any element, simply try\
        \ to find one"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipesusddoublestreamisnotemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamMinRecipe:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamMinRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class DoubleStreamMin {\n    \n    @BeforeTemplate\n    OptionalDouble\
        \ before(DoubleStream stream) {\n        return stream.sorted().findFirst();\n\
        \    }\n    \n    @AfterTemplate\n    OptionalDouble after(DoubleStream stream)\
        \ {\n        return stream.min();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipesusddoublestreamminrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamNoneMatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamNoneMatchRecipe"
      description: "Prefer `DoubleStream#noneMatch(DoublePredicate)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipesusddoublestreamnonematchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamTakeWhileRecipe:
      name: "tech.picnic.errorprone.refasterrules.DoubleStreamRulesRecipes$DoubleStreamTakeWhileRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class DoubleStreamTakeWhile {\n    \n    @BeforeTemplate\n  \
        \  DoubleStream before(DoubleStream stream, DoublePredicate predicate) {\n\
        \        return stream.takeWhile(predicate).filter(predicate);\n    }\n  \
        \  \n    @AfterTemplate\n    DoubleStream after(DoubleStream stream, DoublePredicate\
        \ predicate) {\n        return stream.takeWhile(predicate);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/doublestreamrulesrecipesusddoublestreamtakewhilerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.EqualityRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.EqualityRulesRecipes"
      description: "Refaster rules related to expressions dealing with (in)equalities\
        \ [Source](https://error-prone.picnic.tech/refasterrules/EqualityRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/equalityrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.EqualityRulesRecipes$DoubleNegationRecipe:
      name: "tech.picnic.errorprone.refasterrules.EqualityRulesRecipes$DoubleNegationRecipe"
      description: "Avoid double negations; this is not Javascript"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/equalityrulesrecipesusddoublenegationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.EqualityRulesRecipes$IndirectDoubleNegationRecipe:
      name: "tech.picnic.errorprone.refasterrules.EqualityRulesRecipes$IndirectDoubleNegationRecipe"
      description: "Don't negate an inequality test or use the ternary operator to\
        \ compare two booleans; directly test for equality instead"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/equalityrulesrecipesusdindirectdoublenegationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.EqualityRulesRecipes$NegationRecipe:
      name: "tech.picnic.errorprone.refasterrules.EqualityRulesRecipes$NegationRecipe"
      description: "Don't negate an equality test or use the ternary operator to compare\
        \ two booleans; directly test for inequality instead"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/equalityrulesrecipesusdnegationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.FileRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.FileRulesRecipes"
      description: "Refaster rules related to expressions dealing with files [Source](https://error-prone.picnic.tech/refasterrules/FileRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/filerulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.FileRulesRecipes$FilesCreateTempFileInCustomDirectoryToFileRecipe:
      name: "tech.picnic.errorprone.refasterrules.FileRulesRecipes$FilesCreateTempFileInCustomDirectoryToFileRecipe"
      description: "Note that `File#createTempFile` treats the given prefix as a path,\
        \ and ignores all but\n its file name. That is, the actual prefix used is\
        \ derived from all characters following the\n final file separator (if any).\
        \ This is not the case with `Files#createTempFile`, which\n will instead throw\
        \ an `IllegalArgumentException` if the prefix contains any file\n separators."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/filerulesrecipesusdfilescreatetempfileincustomdirectorytofilerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.FileRulesRecipes$FilesCreateTempFileToFileRecipe:
      name: "tech.picnic.errorprone.refasterrules.FileRulesRecipes$FilesCreateTempFileToFileRecipe"
      description: "Note that `File#createTempFile` treats the given prefix as a path,\
        \ and ignores all but\n its file name. That is, the actual prefix used is\
        \ derived from all characters following the\n final file separator (if any).\
        \ This is not the case with `Files#createTempFile`, which\n will instead throw\
        \ an `IllegalArgumentException` if the prefix contains any file\n separators."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/filerulesrecipesusdfilescreatetempfiletofilerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.FileRulesRecipes$FilesReadStringRecipe:
      name: "tech.picnic.errorprone.refasterrules.FileRulesRecipes$FilesReadStringRecipe"
      description: "Prefer `Files#readString(Path)` over more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/filerulesrecipesusdfilesreadstringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.FileRulesRecipes$FilesReadStringWithCharsetRecipe:
      name: "tech.picnic.errorprone.refasterrules.FileRulesRecipes$FilesReadStringWithCharsetRecipe"
      description: "Prefer `Files#readString(Path, Charset)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/filerulesrecipesusdfilesreadstringwithcharsetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.FileRulesRecipes$PathInstanceRecipe:
      name: "tech.picnic.errorprone.refasterrules.FileRulesRecipes$PathInstanceRecipe"
      description: "Avoid redundant conversions from `Path` to `File`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/filerulesrecipesusdpathinstancerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.FileRulesRecipes$PathOfUriRecipe:
      name: "tech.picnic.errorprone.refasterrules.FileRulesRecipes$PathOfUriRecipe"
      description: "Prefer the more idiomatic `Path#of(URI)` over `Paths#get(URI)`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/filerulesrecipesusdpathofurirecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.InputStreamRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.InputStreamRulesRecipes"
      description: "Refaster rules related to expressions dealing with `InputStream`s\
        \ [Source](https://error-prone.picnic.tech/refasterrules/InputStreamRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/inputstreamrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.InputStreamRulesRecipes$InputStreamReadAllBytesRecipe:
      name: "tech.picnic.errorprone.refasterrules.InputStreamRulesRecipes$InputStreamReadAllBytesRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class InputStreamReadAllBytes {\n    \n    @BeforeTemplate\n\
        \    byte[] before(InputStream in) throws IOException {\n        return ByteStreams.toByteArray(in);\n\
        \    }\n    \n    @AfterTemplate\n    byte[] after(InputStream in) throws\
        \ IOException {\n        return in.readAllBytes();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/inputstreamrulesrecipesusdinputstreamreadallbytesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.InputStreamRulesRecipes$InputStreamReadNBytesRecipe:
      name: "tech.picnic.errorprone.refasterrules.InputStreamRulesRecipes$InputStreamReadNBytesRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class InputStreamReadNBytes {\n    \n    @BeforeTemplate\n  \
        \  byte[] before(InputStream in, int n) throws IOException {\n        return\
        \ ByteStreams.limit(in, n).readAllBytes();\n    }\n    \n    @AfterTemplate\n\
        \    byte[] after(InputStream in, int n) throws IOException {\n        return\
        \ in.readNBytes(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/inputstreamrulesrecipesusdinputstreamreadnbytesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.InputStreamRulesRecipes$InputStreamSkipNBytesRecipe:
      name: "tech.picnic.errorprone.refasterrules.InputStreamRulesRecipes$InputStreamSkipNBytesRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class InputStreamSkipNBytes {\n    \n    @BeforeTemplate\n  \
        \  void before(InputStream in, long n) throws IOException {\n        ByteStreams.skipFully(in,\
        \ n);\n    }\n    \n    @AfterTemplate\n    void after(InputStream in, long\
        \ n) throws IOException {\n        in.skipNBytes(n);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/inputstreamrulesrecipesusdinputstreamskipnbytesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.InputStreamRulesRecipes$InputStreamTransferToRecipe:
      name: "tech.picnic.errorprone.refasterrules.InputStreamRulesRecipes$InputStreamTransferToRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class InputStreamTransferTo {\n    \n    @BeforeTemplate\n  \
        \  long before(InputStream in, OutputStream out) throws IOException {\n  \
        \      return ByteStreams.copy(in, out);\n    }\n    \n    @AfterTemplate\n\
        \    long after(InputStream in, OutputStream out) throws IOException {\n \
        \       return in.transferTo(out);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/inputstreamrulesrecipesusdinputstreamtransfertorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes"
      description: "Refaster rules related to expressions dealing with `IntStream`s\
        \ [Source](https://error-prone.picnic.tech/refasterrules/IntStreamRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$ConcatOneIntStreamRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$ConcatOneIntStreamRecipe"
      description: "Don't unnecessarily call `Streams#concat(IntStream...)`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdconcatoneintstreamrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$ConcatTwoIntStreamsRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$ConcatTwoIntStreamsRecipe"
      description: "Prefer `IntStream#concat(IntStream, IntStream)` over the Guava\
        \ alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdconcattwointstreamsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamAllMatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamAllMatchRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class IntStreamAllMatch {\n    \n    @BeforeTemplate\n    boolean\
        \ before(IntStream stream, IntPredicate predicate) {\n        return stream.noneMatch(predicate.negate());\n\
        \    }\n    \n    @AfterTemplate\n    boolean after(IntStream stream, IntPredicate\
        \ predicate) {\n        return stream.allMatch(predicate);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdintstreamallmatchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamAnyMatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamAnyMatchRecipe"
      description: "Prefer `IntStream#anyMatch(IntPredicate)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdintstreamanymatchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamClosedOpenRangeRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamClosedOpenRangeRecipe"
      description: "Prefer `IntStream#range(int, int)` over the more contrived alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdintstreamclosedopenrangerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamFilterSortedRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamFilterSortedRecipe"
      description: "Apply `IntStream#filter(IntPredicate)` before `IntStream#sorted()`\
        \ to reduce the number of elements to sort"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdintstreamfiltersortedrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamIsEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamIsEmptyRecipe"
      description: "In order to test whether a stream has any element, simply try\
        \ to find one"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdintstreamisemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamIsNotEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamIsNotEmptyRecipe"
      description: "In order to test whether a stream has any element, simply try\
        \ to find one"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdintstreamisnotemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamMinRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamMinRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class IntStreamMin {\n    \n    @BeforeTemplate\n    OptionalInt\
        \ before(IntStream stream) {\n        return stream.sorted().findFirst();\n\
        \    }\n    \n    @AfterTemplate\n    OptionalInt after(IntStream stream)\
        \ {\n        return stream.min();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdintstreamminrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamNoneMatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamNoneMatchRecipe"
      description: "Prefer `IntStream#noneMatch(IntPredicate)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdintstreamnonematchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamTakeWhileRecipe:
      name: "tech.picnic.errorprone.refasterrules.IntStreamRulesRecipes$IntStreamTakeWhileRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class IntStreamTakeWhile {\n    \n    @BeforeTemplate\n    IntStream\
        \ before(IntStream stream, IntPredicate predicate) {\n        return stream.takeWhile(predicate).filter(predicate);\n\
        \    }\n    \n    @AfterTemplate\n    IntStream after(IntStream stream, IntPredicate\
        \ predicate) {\n        return stream.takeWhile(predicate);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/intstreamrulesrecipesusdintstreamtakewhilerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes"
      description: "Note that, while both libraries throw an `AssertionError` in case\
        \ of an assertion\n failure, the exact subtype used generally differs. [Source](https://error-prone.picnic.tech/refasterrules/JUnitToAssertJRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatBooleanArrayContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatBooleanArrayContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatBooleanArrayContainsExactly {\n    \n    @BeforeTemplate\n\
        \    void before(boolean[] actual, boolean[] expected) {\n        assertArrayEquals(expected,\
        \ actual);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(boolean[] actual, boolean[] expected)\
        \ {\n        assertThat(actual).containsExactly(expected);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatbooleanarraycontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatBooleanArrayWithFailMessageContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatBooleanArrayWithFailMessageContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatBooleanArrayWithFailMessageContainsExactly {\n\
        \    \n    @BeforeTemplate\n    void before(boolean[] actual, String message,\
        \ boolean[] expected) {\n        assertArrayEquals(expected, actual, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(boolean[] actual, String message, boolean[] expected) {\n\
        \        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatbooleanarraywithfailmessagecontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatBooleanArrayWithFailMessageSupplierContainsExactlyRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatBooleanArrayWithFailMessageSupplierContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatBooleanArrayWithFailMessageSupplierContainsExactly\
        \ {\n    \n    @BeforeTemplate\n    void before(boolean[] actual, Supplier<String>\
        \ message, boolean[] expected) {\n        assertArrayEquals(expected, actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(boolean[] actual, Supplier<String>\
        \ message, boolean[] expected) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatbooleanarraywithfailmessagesuppliercontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatByteArrayContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatByteArrayContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatByteArrayContainsExactly {\n    \n    @BeforeTemplate\n\
        \    void before(byte[] actual, byte[] expected) {\n        assertArrayEquals(expected,\
        \ actual);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(byte[] actual, byte[] expected) {\n\
        \        assertThat(actual).containsExactly(expected);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatbytearraycontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatByteArrayWithFailMessageContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatByteArrayWithFailMessageContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatByteArrayWithFailMessageContainsExactly {\n \
        \   \n    @BeforeTemplate\n    void before(byte[] actual, String message,\
        \ byte[] expected) {\n        assertArrayEquals(expected, actual, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(byte[] actual, String message, byte[] expected) {\n      \
        \  assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatbytearraywithfailmessagecontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatByteArrayWithFailMessageSupplierContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatByteArrayWithFailMessageSupplierContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatByteArrayWithFailMessageSupplierContainsExactly\
        \ {\n    \n    @BeforeTemplate\n    void before(byte[] actual, Supplier<String>\
        \ message, byte[] expected) {\n        assertArrayEquals(expected, actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(byte[] actual, Supplier<String> message,\
        \ byte[] expected) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatbytearraywithfailmessagesuppliercontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCharArrayContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCharArrayContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatCharArrayContainsExactly {\n    \n    @BeforeTemplate\n\
        \    void before(char[] actual, char[] expected) {\n        assertArrayEquals(expected,\
        \ actual);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(char[] actual, char[] expected) {\n\
        \        assertThat(actual).containsExactly(expected);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatchararraycontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCharArrayWithFailMessageContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCharArrayWithFailMessageContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatCharArrayWithFailMessageContainsExactly {\n \
        \   \n    @BeforeTemplate\n    void before(char[] actual, String message,\
        \ char[] expected) {\n        assertArrayEquals(expected, actual, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(char[] actual, String message, char[] expected) {\n      \
        \  assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatchararraywithfailmessagecontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCharArrayWithFailMessageSupplierContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCharArrayWithFailMessageSupplierContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatCharArrayWithFailMessageSupplierContainsExactly\
        \ {\n    \n    @BeforeTemplate\n    void before(char[] actual, Supplier<String>\
        \ message, char[] expected) {\n        assertArrayEquals(expected, actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(char[] actual, Supplier<String> message,\
        \ char[] expected) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatchararraywithfailmessagesuppliercontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCodeDoesNotThrowAnyExceptionRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCodeDoesNotThrowAnyExceptionRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatCodeDoesNotThrowAnyException {\n    \n    @BeforeTemplate\n\
        \    void before(Executable throwingCallable) {\n        assertDoesNotThrow(throwingCallable);\n\
        \    }\n    \n    @BeforeTemplate\n    void before(ThrowingSupplier<?> throwingCallable)\
        \ {\n        assertDoesNotThrow(throwingCallable);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(ThrowingCallable\
        \ throwingCallable) {\n        assertThatCode(throwingCallable).doesNotThrowAnyException();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatcodedoesnotthrowanyexceptionrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCodeWithFailMessageStringDoesNotThrowAnyExceptionRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCodeWithFailMessageStringDoesNotThrowAnyExceptionRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatCodeWithFailMessageStringDoesNotThrowAnyException\
        \ {\n    \n    @BeforeTemplate\n    void before(Executable throwingCallable,\
        \ String message) {\n        assertDoesNotThrow(throwingCallable, message);\n\
        \    }\n    \n    @BeforeTemplate\n    void before(ThrowingSupplier<?> throwingCallable,\
        \ String message) {\n        assertDoesNotThrow(throwingCallable, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(ThrowingCallable throwingCallable, String message) {\n   \
        \     assertThatCode(throwingCallable).withFailMessage(message).doesNotThrowAnyException();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatcodewithfailmessagestringdoesnotthrowanyexceptionrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCodeWithFailMessageSupplierDoesNotThrowAnyExceptionRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatCodeWithFailMessageSupplierDoesNotThrowAnyExceptionRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatCodeWithFailMessageSupplierDoesNotThrowAnyException\
        \ {\n    \n    @BeforeTemplate\n    void before(Executable throwingCallable,\
        \ Supplier<String> supplier) {\n        assertDoesNotThrow(throwingCallable,\
        \ supplier);\n    }\n    \n    @BeforeTemplate\n    void before(ThrowingSupplier<?>\
        \ throwingCallable, Supplier<String> supplier) {\n        assertDoesNotThrow(throwingCallable,\
        \ supplier);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(ThrowingCallable throwingCallable,\
        \ Supplier<String> supplier) {\n        assertThatCode(throwingCallable).withFailMessage(supplier).doesNotThrowAnyException();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatcodewithfailmessagesupplierdoesnotthrowanyexceptionrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatDoubleArrayContainsExactly {\n    \n    @BeforeTemplate\n\
        \    void before(double[] actual, double[] expected) {\n        assertArrayEquals(expected,\
        \ actual);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(double[] actual, double[] expected)\
        \ {\n        assertThat(actual).containsExactly(expected);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatdoublearraycontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayContainsExactlyWithOffsetRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayContainsExactlyWithOffsetRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatDoubleArrayContainsExactlyWithOffset {\n    \n\
        \    @BeforeTemplate\n    void before(double[] actual, double[] expected,\
        \ double delta) {\n        assertArrayEquals(expected, actual, delta);\n \
        \   }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(double[] actual, double[] expected, double delta) {\n    \
        \    assertThat(actual).containsExactly(expected, offset(delta));\n    }\n\
        }\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatdoublearraycontainsexactlywithoffsetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayWithFailMessageContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayWithFailMessageContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatDoubleArrayWithFailMessageContainsExactly {\n\
        \    \n    @BeforeTemplate\n    void before(double[] actual, String message,\
        \ double[] expected) {\n        assertArrayEquals(expected, actual, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(double[] actual, String message, double[] expected) {\n  \
        \      assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatdoublearraywithfailmessagecontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayWithFailMessageContainsExactlyWithOffsetRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayWithFailMessageContainsExactlyWithOffsetRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatDoubleArrayWithFailMessageContainsExactlyWithOffset\
        \ {\n    \n    @BeforeTemplate\n    void before(double[] actual, String message,\
        \ double[] expected, double delta) {\n        assertArrayEquals(expected,\
        \ actual, delta, message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(double[] actual, String message,\
        \ double[] expected, double delta) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatdoublearraywithfailmessagecontainsexactlywithoffsetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayWithFailMessageSupplierContainsExactlyRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayWithFailMessageSupplierContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatDoubleArrayWithFailMessageSupplierContainsExactly\
        \ {\n    \n    @BeforeTemplate\n    void before(double[] actual, Supplier<String>\
        \ message, double[] expected) {\n        assertArrayEquals(expected, actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(double[] actual, Supplier<String>\
        \ message, double[] expected) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatdoublearraywithfailmessagesuppliercontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayWithFailMessageSupplierContainsExactlyWithOffsetRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatDoubleArrayWithFailMessageSupplierContainsExactlyWithOffsetRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatDoubleArrayWithFailMessageSupplierContainsExactlyWithOffset\
        \ {\n    \n    @BeforeTemplate\n    void before(double[] actual, Supplier<String>\
        \ messageSupplier, double[] expected, double delta) {\n        assertArrayEquals(expected,\
        \ actual, delta, messageSupplier);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(double[] actual, Supplier<String>\
        \ messageSupplier, double[] expected, double delta) {\n        assertThat(actual).withFailMessage(messageSupplier).containsExactly(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatdoublearraywithfailmessagesuppliercontainsexactlywithoffsetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatFloatArrayContainsExactly {\n    \n    @BeforeTemplate\n\
        \    void before(float[] actual, float[] expected) {\n        assertArrayEquals(expected,\
        \ actual);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(float[] actual, float[] expected)\
        \ {\n        assertThat(actual).containsExactly(expected);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatfloatarraycontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayContainsExactlyWithOffsetRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayContainsExactlyWithOffsetRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatFloatArrayContainsExactlyWithOffset {\n    \n\
        \    @BeforeTemplate\n    void before(float[] actual, float[] expected, float\
        \ delta) {\n        assertArrayEquals(expected, actual, delta);\n    }\n \
        \   \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(float[] actual, float[] expected, float delta) {\n       \
        \ assertThat(actual).containsExactly(expected, offset(delta));\n    }\n}\n\
        ```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatfloatarraycontainsexactlywithoffsetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayWithFailMessageContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayWithFailMessageContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatFloatArrayWithFailMessageContainsExactly {\n\
        \    \n    @BeforeTemplate\n    void before(float[] actual, String message,\
        \ float[] expected) {\n        assertArrayEquals(expected, actual, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(float[] actual, String message, float[] expected) {\n    \
        \    assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatfloatarraywithfailmessagecontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayWithFailMessageContainsExactlyWithOffsetRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayWithFailMessageContainsExactlyWithOffsetRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatFloatArrayWithFailMessageContainsExactlyWithOffset\
        \ {\n    \n    @BeforeTemplate\n    void before(float[] actual, String message,\
        \ float[] expected, float delta) {\n        assertArrayEquals(expected, actual,\
        \ delta, message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(float[] actual, String message,\
        \ float[] expected, float delta) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatfloatarraywithfailmessagecontainsexactlywithoffsetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayWithFailMessageSupplierContainsExactlyRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayWithFailMessageSupplierContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatFloatArrayWithFailMessageSupplierContainsExactly\
        \ {\n    \n    @BeforeTemplate\n    void before(float[] actual, Supplier<String>\
        \ message, float[] expected) {\n        assertArrayEquals(expected, actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(float[] actual, Supplier<String> message,\
        \ float[] expected) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatfloatarraywithfailmessagesuppliercontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayWithFailMessageSupplierContainsExactlyWithOffsetRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatFloatArrayWithFailMessageSupplierContainsExactlyWithOffsetRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatFloatArrayWithFailMessageSupplierContainsExactlyWithOffset\
        \ {\n    \n    @BeforeTemplate\n    void before(float[] actual, Supplier<String>\
        \ message, float[] expected, float delta) {\n        assertArrayEquals(expected,\
        \ actual, delta, message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(float[] actual, Supplier<String>\
        \ message, float[] expected, float delta) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatfloatarraywithfailmessagesuppliercontainsexactlywithoffsetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIntArrayContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIntArrayContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIntArrayContainsExactly {\n    \n    @BeforeTemplate\n\
        \    void before(int[] actual, int[] expected) {\n        assertArrayEquals(expected,\
        \ actual);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(int[] actual, int[] expected) {\n\
        \        assertThat(actual).containsExactly(expected);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatintarraycontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIntArrayWithFailMessageContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIntArrayWithFailMessageContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIntArrayWithFailMessageContainsExactly {\n  \
        \  \n    @BeforeTemplate\n    void before(int[] actual, String message, int[]\
        \ expected) {\n        assertArrayEquals(expected, actual, message);\n   \
        \ }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(int[] actual, String message, int[] expected) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatintarraywithfailmessagecontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIntArrayWithFailMessageSupplierContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIntArrayWithFailMessageSupplierContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIntArrayWithFailMessageSupplierContainsExactly\
        \ {\n    \n    @BeforeTemplate\n    void before(int[] actual, Supplier<String>\
        \ message, int[] expected) {\n        assertArrayEquals(expected, actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(int[] actual, Supplier<String> message,\
        \ int[] expected) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatintarraywithfailmessagesuppliercontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsFalseRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsFalseRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsFalse {\n    \n    @BeforeTemplate\n    void\
        \ before(boolean actual) {\n        assertFalse(actual);\n    }\n    \n  \
        \  @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n  \
        \  void after(boolean actual) {\n        assertThat(actual).isFalse();\n \
        \   }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatisfalserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsNotNullRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsNotNullRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsNotNull {\n    \n    @BeforeTemplate\n    void\
        \ before(Object actual) {\n        assertNotNull(actual);\n    }\n    \n \
        \   @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n \
        \   void after(Object actual) {\n        assertThat(actual).isNotNull();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatisnotnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsNotSameAsRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsNotSameAsRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsNotSameAs {\n    \n    @BeforeTemplate\n  \
        \  void before(Object actual, Object expected) {\n        assertNotSame(expected,\
        \ actual);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(Object actual, Object expected) {\n\
        \        assertThat(actual).isNotSameAs(expected);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatisnotsameasrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsNullRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsNullRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsNull {\n    \n    @BeforeTemplate\n    void\
        \ before(Object actual) {\n        assertNull(actual);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(Object\
        \ actual) {\n        assertThat(actual).isNull();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatisnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsSameAsRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsSameAsRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsSameAs {\n    \n    @BeforeTemplate\n    void\
        \ before(Object actual, Object expected) {\n        assertSame(expected, actual);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(Object actual, Object expected) {\n        assertThat(actual).isSameAs(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatissameasrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsTrueRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatIsTrueRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatIsTrue {\n    \n    @BeforeTemplate\n    void\
        \ before(boolean actual) {\n        assertTrue(actual);\n    }\n    \n   \
        \ @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n   \
        \ void after(boolean actual) {\n        assertThat(actual).isTrue();\n   \
        \ }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatistruerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatLongArrayContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatLongArrayContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatLongArrayContainsExactly {\n    \n    @BeforeTemplate\n\
        \    void before(long[] actual, long[] expected) {\n        assertArrayEquals(expected,\
        \ actual);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(long[] actual, long[] expected) {\n\
        \        assertThat(actual).containsExactly(expected);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatlongarraycontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatLongArrayWithFailMessageContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatLongArrayWithFailMessageContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatLongArrayWithFailMessageContainsExactly {\n \
        \   \n    @BeforeTemplate\n    void before(long[] actual, String message,\
        \ long[] expected) {\n        assertArrayEquals(expected, actual, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(long[] actual, String message, long[] expected) {\n      \
        \  assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatlongarraywithfailmessagecontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatLongArrayWithFailMessageSupplierContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatLongArrayWithFailMessageSupplierContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatLongArrayWithFailMessageSupplierContainsExactly\
        \ {\n    \n    @BeforeTemplate\n    void before(long[] actual, Supplier<String>\
        \ message, long[] expected) {\n        assertArrayEquals(expected, actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(long[] actual, Supplier<String> message,\
        \ long[] expected) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatlongarraywithfailmessagesuppliercontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatObjectArrayContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatObjectArrayContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatObjectArrayContainsExactly {\n    \n    @BeforeTemplate\n\
        \    void before(Object[] actual, Object[] expected) {\n        assertArrayEquals(expected,\
        \ actual);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(Object[] actual, Object[] expected)\
        \ {\n        assertThat(actual).containsExactly(expected);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatobjectarraycontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatObjectArrayWithFailMessageContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatObjectArrayWithFailMessageContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatObjectArrayWithFailMessageContainsExactly {\n\
        \    \n    @BeforeTemplate\n    void before(Object[] actual, String message,\
        \ Object[] expected) {\n        assertArrayEquals(expected, actual, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(Object[] actual, String message, Object[] expected) {\n  \
        \      assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatobjectarraywithfailmessagecontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatObjectArrayWithFailMessageSupplierContainsExactlyRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatObjectArrayWithFailMessageSupplierContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatObjectArrayWithFailMessageSupplierContainsExactly\
        \ {\n    \n    @BeforeTemplate\n    void before(Object[] actual, Supplier<String>\
        \ message, Object[] expected) {\n        assertArrayEquals(expected, actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(Object[] actual, Supplier<String>\
        \ message, Object[] expected) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatobjectarraywithfailmessagesuppliercontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatShortArrayContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatShortArrayContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatShortArrayContainsExactly {\n    \n    @BeforeTemplate\n\
        \    void before(short[] actual, short[] expected) {\n        assertArrayEquals(expected,\
        \ actual);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(short[] actual, short[] expected)\
        \ {\n        assertThat(actual).containsExactly(expected);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatshortarraycontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatShortArrayWithFailMessageContainsExactlyRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatShortArrayWithFailMessageContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatShortArrayWithFailMessageContainsExactly {\n\
        \    \n    @BeforeTemplate\n    void before(short[] actual, String message,\
        \ short[] expected) {\n        assertArrayEquals(expected, actual, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(short[] actual, String message, short[] expected) {\n    \
        \    assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatshortarraywithfailmessagecontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    ? tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatShortArrayWithFailMessageSupplierContainsExactlyRecipe
    : name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatShortArrayWithFailMessageSupplierContainsExactlyRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatShortArrayWithFailMessageSupplierContainsExactly\
        \ {\n    \n    @BeforeTemplate\n    void before(short[] actual, Supplier<String>\
        \ message, short[] expected) {\n        assertArrayEquals(expected, actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(short[] actual, Supplier<String> message,\
        \ short[] expected) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatshortarraywithfailmessagesuppliercontainsexactlyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsFalseRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsFalseRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageStringIsFalse {\n    \n    @BeforeTemplate\n\
        \    void before(boolean actual, String message) {\n        assertFalse(actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(boolean actual, String message) {\n\
        \        assertThat(actual).withFailMessage(message).isFalse();\n    }\n}\n\
        ```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagestringisfalserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsNotNullRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsNotNullRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageStringIsNotNull {\n    \n    @BeforeTemplate\n\
        \    void before(Object actual, String message) {\n        assertNotNull(actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(Object actual, String message) {\n\
        \        assertThat(actual).withFailMessage(message).isNotNull();\n    }\n\
        }\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagestringisnotnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsNotSameAsRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsNotSameAsRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageStringIsNotSameAs {\n    \n  \
        \  @BeforeTemplate\n    void before(Object actual, String message, Object\
        \ expected) {\n        assertNotSame(expected, actual, message);\n    }\n\
        \    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(Object actual, String message, Object expected) {\n      \
        \  assertThat(actual).withFailMessage(message).isNotSameAs(expected);\n  \
        \  }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagestringisnotsameasrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsNullRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsNullRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageStringIsNull {\n    \n    @BeforeTemplate\n\
        \    void before(Object actual, String message) {\n        assertNull(actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(Object actual, String message) {\n\
        \        assertThat(actual).withFailMessage(message).isNull();\n    }\n}\n\
        ```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagestringisnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsSameAsRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsSameAsRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageStringIsSameAs {\n    \n    @BeforeTemplate\n\
        \    void before(Object actual, String message, Object expected) {\n     \
        \   assertSame(expected, actual, message);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(Object\
        \ actual, String message, Object expected) {\n        assertThat(actual).withFailMessage(message).isSameAs(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagestringissameasrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsTrueRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageStringIsTrueRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageStringIsTrue {\n    \n    @BeforeTemplate\n\
        \    void before(boolean actual, String message) {\n        assertTrue(actual,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(boolean actual, String message) {\n\
        \        assertThat(actual).withFailMessage(message).isTrue();\n    }\n}\n\
        ```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagestringistruerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsFalseRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsFalseRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageSupplierIsFalse {\n    \n    @BeforeTemplate\n\
        \    void before(boolean actual, Supplier<String> supplier) {\n        assertFalse(actual,\
        \ supplier);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(boolean actual, Supplier<String>\
        \ supplier) {\n        assertThat(actual).withFailMessage(supplier).isFalse();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagesupplierisfalserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsNotNullRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsNotNullRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageSupplierIsNotNull {\n    \n  \
        \  @BeforeTemplate\n    void before(Object actual, Supplier<String> supplier)\
        \ {\n        assertNotNull(actual, supplier);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(Object\
        \ actual, Supplier<String> supplier) {\n        assertThat(actual).withFailMessage(supplier).isNotNull();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagesupplierisnotnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsNotSameAsRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsNotSameAsRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageSupplierIsNotSameAs {\n    \n\
        \    @BeforeTemplate\n    void before(Object actual, Supplier<String> supplier,\
        \ Object expected) {\n        assertNotSame(expected, actual, supplier);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(Object actual, Supplier<String> supplier, Object expected)\
        \ {\n        assertThat(actual).withFailMessage(supplier).isNotSameAs(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagesupplierisnotsameasrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsNullRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsNullRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageSupplierIsNull {\n    \n    @BeforeTemplate\n\
        \    void before(Object actual, Supplier<String> supplier) {\n        assertNull(actual,\
        \ supplier);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(Object actual, Supplier<String>\
        \ supplier) {\n        assertThat(actual).withFailMessage(supplier).isNull();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagesupplierisnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsSameAsRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsSameAsRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageSupplierIsSameAs {\n    \n   \
        \ @BeforeTemplate\n    void before(Object actual, Supplier<String> supplier,\
        \ Object expected) {\n        assertSame(expected, actual, supplier);\n  \
        \  }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(Object actual, Supplier<String> supplier, Object expected)\
        \ {\n        assertThat(actual).withFailMessage(supplier).isSameAs(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagesupplierissameasrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsTrueRecipe:
      name: "tech.picnic.errorprone.refasterrules.JUnitToAssertJRulesRecipes$AssertThatWithFailMessageSupplierIsTrueRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThatWithFailMessageSupplierIsTrue {\n    \n    @BeforeTemplate\n\
        \    void before(boolean actual, Supplier<String> supplier) {\n        assertTrue(actual,\
        \ supplier);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(boolean actual, Supplier<String>\
        \ supplier) {\n        assertThat(actual).withFailMessage(supplier).isTrue();\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/junittoassertjrulesrecipesusdassertthatwithfailmessagesupplieristruerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes"
      description: "Refaster rules related to expressions dealing with `LongStream`s\
        \ [Source](https://error-prone.picnic.tech/refasterrules/LongStreamRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$ConcatOneLongStreamRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$ConcatOneLongStreamRecipe"
      description: "Don't unnecessarily call `Streams#concat(LongStream...)`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdconcatonelongstreamrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$ConcatTwoLongStreamsRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$ConcatTwoLongStreamsRecipe"
      description: "Prefer `LongStream#concat(LongStream, LongStream)` over the Guava\
        \ alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdconcattwolongstreamsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamAllMatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamAllMatchRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class LongStreamAllMatch {\n    \n    @BeforeTemplate\n    boolean\
        \ before(LongStream stream, LongPredicate predicate) {\n        return stream.noneMatch(predicate.negate());\n\
        \    }\n    \n    @AfterTemplate\n    boolean after(LongStream stream, LongPredicate\
        \ predicate) {\n        return stream.allMatch(predicate);\n    }\n}\n```\n\
        ."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdlongstreamallmatchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamAnyMatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamAnyMatchRecipe"
      description: "Prefer `LongStream#anyMatch(LongPredicate)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdlongstreamanymatchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamClosedOpenRangeRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamClosedOpenRangeRecipe"
      description: "Prefer `LongStream#range(long, long)` over the more contrived\
        \ alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdlongstreamclosedopenrangerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamFilterSortedRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamFilterSortedRecipe"
      description: "Apply `LongStream#filter(LongPredicate)` before `LongStream#sorted()`\
        \ to reduce the number of elements to sort"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdlongstreamfiltersortedrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamIsEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamIsEmptyRecipe"
      description: "In order to test whether a stream has any element, simply try\
        \ to find one"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdlongstreamisemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamIsNotEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamIsNotEmptyRecipe"
      description: "In order to test whether a stream has any element, simply try\
        \ to find one"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdlongstreamisnotemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamMinRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamMinRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class LongStreamMin {\n    \n    @BeforeTemplate\n    OptionalLong\
        \ before(LongStream stream) {\n        return stream.sorted().findFirst();\n\
        \    }\n    \n    @AfterTemplate\n    OptionalLong after(LongStream stream)\
        \ {\n        return stream.min();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdlongstreamminrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamNoneMatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamNoneMatchRecipe"
      description: "Prefer `LongStream#noneMatch(LongPredicate)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdlongstreamnonematchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamTakeWhileRecipe:
      name: "tech.picnic.errorprone.refasterrules.LongStreamRulesRecipes$LongStreamTakeWhileRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class LongStreamTakeWhile {\n    \n    @BeforeTemplate\n    LongStream\
        \ before(LongStream stream, LongPredicate predicate) {\n        return stream.takeWhile(predicate).filter(predicate);\n\
        \    }\n    \n    @AfterTemplate\n    LongStream after(LongStream stream,\
        \ LongPredicate predicate) {\n        return stream.takeWhile(predicate);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/longstreamrulesrecipesusdlongstreamtakewhilerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes"
      description: "Refaster rules related to expressions dealing with Micrometer\
        \ [Source](https://error-prone.picnic.tech/refasterrules/MicrometerRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/micrometerrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes$TagsOf1Recipe:
      name: "tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes$TagsOf1Recipe"
      description: "Prefer using `Tags` over other immutable collections"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/micrometerrulesrecipesusdtagsof1recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes$TagsOf2Recipe:
      name: "tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes$TagsOf2Recipe"
      description: "Prefer using `Tags` over other immutable collections"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/micrometerrulesrecipesusdtagsof2recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes$TagsOf3Recipe:
      name: "tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes$TagsOf3Recipe"
      description: "Prefer using `Tags` over other immutable collections"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/micrometerrulesrecipesusdtagsof3recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes$TagsOf4Recipe:
      name: "tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes$TagsOf4Recipe"
      description: "Prefer using `Tags` over other immutable collections"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/micrometerrulesrecipesusdtagsof4recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes$TagsOf5Recipe:
      name: "tech.picnic.errorprone.refasterrules.MicrometerRulesRecipes$TagsOf5Recipe"
      description: "Prefer using `Tags` over other immutable collections"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/micrometerrulesrecipesusdtagsof5recipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.MockitoRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.MockitoRulesRecipes"
      description: "Refaster rules related to Mockito expressions and statements [Source](https://error-prone.picnic.tech/refasterrules/MockitoRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/mockitorulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.MockitoRulesRecipes$InvocationOnMockGetArgumentsRecipe:
      name: "tech.picnic.errorprone.refasterrules.MockitoRulesRecipes$InvocationOnMockGetArgumentsRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class InvocationOnMockGetArguments {\n    \n    @BeforeTemplate\n\
        \    Object before(InvocationOnMock invocation, int i) {\n        return invocation.getArguments()[i];\n\
        \    }\n    \n    @AfterTemplate\n    Object after(InvocationOnMock invocation,\
        \ int i) {\n        return invocation.getArgument(i);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/mockitorulesrecipesusdinvocationonmockgetargumentsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.MockitoRulesRecipes$NeverRecipe:
      name: "tech.picnic.errorprone.refasterrules.MockitoRulesRecipes$NeverRecipe"
      description: "Prefer `Mockito#never()`} over explicitly specifying that the\
        \ associated invocation must happen precisely zero times"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/mockitorulesrecipesusdneverrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.NullRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.NullRulesRecipes"
      description: "Refaster rules related to expressions dealing with (possibly)\
        \ null values [Source](https://error-prone.picnic.tech/refasterrules/NullRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/nullrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.NullRulesRecipes$IsNotNullRecipe:
      name: "tech.picnic.errorprone.refasterrules.NullRulesRecipes$IsNotNullRecipe"
      description: "Prefer the `!=` operator (with `null` as the second operand) over\
        \ `Objects#nonNull(Object)`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/nullrulesrecipesusdisnotnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.NullRulesRecipes$IsNullRecipe:
      name: "tech.picnic.errorprone.refasterrules.NullRulesRecipes$IsNullRecipe"
      description: "Prefer the `==` operator (with `null` as the second operand) over\
        \ `Objects#isNull(Object)`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/nullrulesrecipesusdisnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PatternRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.PatternRulesRecipes"
      description: "Refaster rules related to code dealing with regular expressions\
        \ [Source](https://error-prone.picnic.tech/refasterrules/PatternRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/patternrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PatternRulesRecipes$PatternAsPredicateRecipe:
      name: "tech.picnic.errorprone.refasterrules.PatternRulesRecipes$PatternAsPredicateRecipe"
      description: "Prefer `Pattern#asPredicate()` over non-JDK alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/patternrulesrecipesusdpatternaspredicaterecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PatternRulesRecipes$PatternCompileAsPredicateRecipe:
      name: "tech.picnic.errorprone.refasterrules.PatternRulesRecipes$PatternCompileAsPredicateRecipe"
      description: "Prefer `Pattern#asPredicate()` over non-JDK alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/patternrulesrecipesusdpatterncompileaspredicaterecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes"
      description: "Refaster rules related to expressions dealing with primitives\
        \ [Source](https://error-prone.picnic.tech/refasterrules/PrimitiveRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$BooleanHashCodeRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$BooleanHashCodeRecipe"
      description: "Prefer `Boolean#hashCode(boolean)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdbooleanhashcoderecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$ByteHashCodeRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$ByteHashCodeRecipe"
      description: "Prefer `Byte#hashCode(byte)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdbytehashcoderecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$CharacterBytesRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$CharacterBytesRecipe"
      description: "Prefer `Character#BYTES` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdcharacterbytesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$CharacterHashCodeRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$CharacterHashCodeRecipe"
      description: "Prefer `Character#hashCode(char)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdcharacterhashcoderecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$DoubleBytesRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$DoubleBytesRecipe"
      description: "Prefer `Double#BYTES` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusddoublebytesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$DoubleHashCodeRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$DoubleHashCodeRecipe"
      description: "Prefer `Double#hashCode(double)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusddoublehashcoderecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$DoubleIsFiniteRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$DoubleIsFiniteRecipe"
      description: "Prefer `Double#isFinite(double)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusddoubleisfiniterecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$FloatBytesRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$FloatBytesRecipe"
      description: "Prefer `Float#BYTES` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdfloatbytesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$FloatHashCodeRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$FloatHashCodeRecipe"
      description: "Prefer `Float#hashCode(float)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdfloathashcoderecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$FloatIsFiniteRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$FloatIsFiniteRecipe"
      description: "Prefer `Float#isFinite(float)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdfloatisfiniterecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$GreaterThanOrEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$GreaterThanOrEqualToRecipe"
      description: "Avoid contrived ways of expressing the \"greater than or equal\
        \ to\" relationship"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdgreaterthanorequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$GreaterThanRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$GreaterThanRecipe"
      description: "Avoid contrived ways of expressing the \"greater than\" relationship"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdgreaterthanrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerBytesRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerBytesRecipe"
      description: "Prefer `Integer#BYTES` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegerbytesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerCompareUnsignedRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerCompareUnsignedRecipe"
      description: "Prefer JDK's `Integer#compareUnsigned(int, int)` over third-party\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegercompareunsignedrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerDivideUnsignedRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerDivideUnsignedRecipe"
      description: "Prefer JDK's `Integer#divideUnsigned(int, int)` over third-party\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegerdivideunsignedrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerHashCodeRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerHashCodeRecipe"
      description: "Prefer `Integer#hashCode(int)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegerhashcoderecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerParseUnsignedIntRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerParseUnsignedIntRecipe"
      description: "Prefer JDK's `Integer#parseUnsignedInt(String)` over third-party\
        \ or more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegerparseunsignedintrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerParseUnsignedIntWithRadixRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerParseUnsignedIntWithRadixRecipe"
      description: "Prefer JDK's `Integer#parseUnsignedInt(String, int)` over third-party\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegerparseunsignedintwithradixrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerRemainderUnsignedRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerRemainderUnsignedRecipe"
      description: "Prefer JDK's `Integer#remainderUnsigned(int, int)` over third-party\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegerremainderunsignedrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerSignumIsNegativeRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerSignumIsNegativeRecipe"
      description: "Prefer an `Integer#signum(int)` comparison to -1 over less clear\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegersignumisnegativerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerSignumIsPositiveRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerSignumIsPositiveRecipe"
      description: "Prefer an `Integer#signum(int)` comparison to 1 over less clear\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegersignumispositiverecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerToUnsignedStringRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerToUnsignedStringRecipe"
      description: "Prefer JDK's `Integer#toUnsignedString(int)` over third-party\
        \ or more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegertounsignedstringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerToUnsignedStringWithRadixRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$IntegerToUnsignedStringWithRadixRecipe"
      description: "Prefer JDK's `Integer#toUnsignedString(int,int)` over third-party\
        \ or more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdintegertounsignedstringwithradixrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LessThanOrEqualToRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LessThanOrEqualToRecipe"
      description: "Avoid contrived ways of expressing the \"less than or equal to\"\
        \ relationship"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlessthanorequaltorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LessThanRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LessThanRecipe"
      description: "Avoid contrived ways of expressing the \"less than\" relationship"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlessthanrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongBytesRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongBytesRecipe"
      description: "Prefer `Long#BYTES` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongbytesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongCompareUnsignedRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongCompareUnsignedRecipe"
      description: "Prefer JDK's `Long#compareUnsigned(long, long)` over third-party\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongcompareunsignedrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongDivideUnsignedRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongDivideUnsignedRecipe"
      description: "Prefer JDK's `Long#divideUnsigned(long, long)` over third-party\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongdivideunsignedrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongHashCodeRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongHashCodeRecipe"
      description: "Prefer `Long#hashCode(long)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlonghashcoderecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongParseUnsignedLongRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongParseUnsignedLongRecipe"
      description: "Prefer JDK's `Long#parseUnsignedLong(String)` over third-party\
        \ or more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongparseunsignedlongrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongParseUnsignedLongWithRadixRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongParseUnsignedLongWithRadixRecipe"
      description: "Prefer JDK's `Long#parseUnsignedLong(String, int)` over third-party\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongparseunsignedlongwithradixrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongRemainderUnsignedRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongRemainderUnsignedRecipe"
      description: "Prefer JDK's `Long#remainderUnsigned(long, long)` over third-party\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongremainderunsignedrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongSignumIsNegativeRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongSignumIsNegativeRecipe"
      description: "Prefer an `Long#signum(long)` comparison to -1 over less clear\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongsignumisnegativerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongSignumIsPositiveRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongSignumIsPositiveRecipe"
      description: "Prefer an `Long#signum(long)` comparison to 1 over less clear\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongsignumispositiverecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongToIntExactRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongToIntExactRecipe"
      description: "Prefer `Math#toIntExact(long)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongtointexactrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongToUnsignedStringRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongToUnsignedStringRecipe"
      description: "Prefer JDK's `Long#toUnsignedString(long)` over third-party or\
        \ more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongtounsignedstringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongToUnsignedStringWithRadixRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$LongToUnsignedStringWithRadixRecipe"
      description: "Prefer JDK's `Long#toUnsignedString(long,int)` over third-party\
        \ or more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdlongtounsignedstringwithradixrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$ShortBytesRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$ShortBytesRecipe"
      description: "Prefer `Short#BYTES` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdshortbytesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$ShortHashCodeRecipe:
      name: "tech.picnic.errorprone.refasterrules.PrimitiveRulesRecipes$ShortHashCodeRecipe"
      description: "Prefer `Short#hashCode(short)` over the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/primitiverulesrecipesusdshorthashcoderecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.ReactorRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.ReactorRulesRecipes"
      description: "Refaster rules related to Reactor expressions and statements [Source](https://error-prone.picnic.tech/refasterrules/ReactorRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/reactorrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyCompleteRecipe:
      name: "tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyCompleteRecipe"
      description: "Prefer `StepVerifier.LastStep#verifyComplete()` over more verbose\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/reactorrulesrecipesusdstepverifierlaststepverifycompleterecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyErrorMatchesRecipe:
      name: "tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyErrorMatchesRecipe"
      description: "Prefer `StepVerifier.LastStep#verifyErrorMatches(Predicate)` over\
        \ more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/reactorrulesrecipesusdstepverifierlaststepverifyerrormatchesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyErrorMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyErrorMessageRecipe"
      description: "Prefer `StepVerifier.LastStep#verifyErrorMessage(String)` over\
        \ more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/reactorrulesrecipesusdstepverifierlaststepverifyerrormessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyErrorRecipe:
      name: "tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyErrorRecipe"
      description: "Prefer `StepVerifier.LastStep#verifyError()` over more verbose\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/reactorrulesrecipesusdstepverifierlaststepverifyerrorrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyErrorSatisfiesRecipe:
      name: "tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyErrorSatisfiesRecipe"
      description: "Prefer `StepVerifier.LastStep#verifyErrorSatisfies(Consumer)`\
        \ over more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/reactorrulesrecipesusdstepverifierlaststepverifyerrorsatisfiesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyTimeoutRecipe:
      name: "tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierLastStepVerifyTimeoutRecipe"
      description: "Prefer `StepVerifier.LastStep#verifyTimeout(Duration)` over more\
        \ verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/reactorrulesrecipesusdstepverifierlaststepverifytimeoutrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierVerifyDurationRecipe:
      name: "tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierVerifyDurationRecipe"
      description: "Prefer `StepVerifier#verify(Duration)` over a dangling `StepVerifier#verifyThenAssertThat(Duration)`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/reactorrulesrecipesusdstepverifierverifydurationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierVerifyLaterRecipe:
      name: "tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierVerifyLaterRecipe"
      description: "Don't unnecessarily invoke `StepVerifier#verifyLater()` multiple\
        \ times"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/reactorrulesrecipesusdstepverifierverifylaterrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierVerifyRecipe:
      name: "tech.picnic.errorprone.refasterrules.ReactorRulesRecipes$StepVerifierVerifyRecipe"
      description: "Prefer `StepVerifier#verify()` over a dangling `StepVerifier#verifyThenAssertThat()`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/reactorrulesrecipesusdstepverifierverifyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.RxJava2AdapterRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.RxJava2AdapterRulesRecipes"
      description: "Refaster rules related to expressions dealing with `RxJava2Adapter`\
        \ [Source](https://error-prone.picnic.tech/refasterrules/RxJava2AdapterRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/rxjava2adapterrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.RxJava2AdapterRulesRecipes$CompletableToMonoRecipe:
      name: "tech.picnic.errorprone.refasterrules.RxJava2AdapterRulesRecipes$CompletableToMonoRecipe"
      description: "Use the fluent API style when using `RxJava2Adapter#completableToMono`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/rxjava2adapterrulesrecipesusdcompletabletomonorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StreamRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.StreamRulesRecipes"
      description: "Refaster rules related to expressions dealing with `Stream`s [Source](https://error-prone.picnic.tech/refasterrules/StreamRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/streamrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StreamRulesRecipes$JoiningRecipe:
      name: "tech.picnic.errorprone.refasterrules.StreamRulesRecipes$JoiningRecipe"
      description: "Prefer `Collectors#joining()` over `Collectors#joining(CharSequence)`\
        \ with an empty delimiter string"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/streamrulesrecipesusdjoiningrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes"
      description: "Refaster rules related to expressions dealing with `String`s [Source](https://error-prone.picnic.tech/refasterrules/StringRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$FilterEmptyStringRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$FilterEmptyStringRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class FilterEmptyString {\n    \n    @BeforeTemplate\n    Optional<String>\
        \ before(Optional<String> optional) {\n        return optional.map(Strings::emptyToNull);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    Optional<String> after(Optional<String> optional) {\n        return optional.filter(not(String::isEmpty));\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdfilteremptystringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$JoinStringsRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$JoinStringsRecipe"
      description: "Prefer `String#join(CharSequence, Iterable)` and variants over\
        \ the Guava alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdjoinstringsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$NewStringFromCharArrayRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$NewStringFromCharArrayRecipe"
      description: "Prefer direct invocation of `String#String(char[])` over the indirection\
        \ introduced by alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdnewstringfromchararrayrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$NewStringFromCharArraySubSequenceRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$NewStringFromCharArraySubSequenceRecipe"
      description: "Prefer direct invocation of `String#String(char[], int, int)`\
        \ over the indirection introduced by alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdnewstringfromchararraysubsequencerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$OptionalNonEmptyStringRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$OptionalNonEmptyStringRecipe"
      description: "Don't use the ternary operator to create an optionally-absent\
        \ string"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdoptionalnonemptystringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringIndexOfCharRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringIndexOfCharRecipe"
      description: "Prefer `String#indexOf(int, int)` over less efficient alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdstringindexofcharrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringIndexOfStringRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringIndexOfStringRecipe"
      description: "Prefer `String#indexOf(String, int)` over less efficient alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdstringindexofstringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringIsEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringIsEmptyRecipe"
      description: "Prefer `String#isEmpty()` over alternatives that consult the string's\
        \ length"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdstringisemptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringIsNullOrEmptyRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringIsNullOrEmptyRecipe"
      description: "Prefer `Strings#isNullOrEmpty(String)` over the more verbose alternative"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdstringisnulloremptyrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringLastIndexOfCharRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringLastIndexOfCharRecipe"
      description: "Prefer `String#lastIndexOf(int, int)` over less efficient alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdstringlastindexofcharrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringLastIndexOfCharWithIndexRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringLastIndexOfCharWithIndexRecipe"
      description: "Prefer `String#lastIndexOf(int, int)` over less efficient alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdstringlastindexofcharwithindexrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringLastIndexOfStringRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringLastIndexOfStringRecipe"
      description: "Prefer `String#lastIndexOf(String, int)` over less efficient alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdstringlastindexofstringrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringLastIndexOfStringWithIndexRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringLastIndexOfStringWithIndexRecipe"
      description: "Prefer `String#lastIndexOf(String, int)` over less efficient alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdstringlastindexofstringwithindexrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringStartsWithRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringStartsWithRecipe"
      description: "Prefer `String#startsWith(String, int)` over less efficient alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdstringstartswithrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringValueOfRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$StringValueOfRecipe"
      description: "Prefer direct invocation of `String#valueOf(Object)` over the\
        \ indirection introduced by `Objects#toString(Object)`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdstringvalueofrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$SubstringRemainderRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$SubstringRemainderRecipe"
      description: "Don't unnecessarily use the two-argument `String#substring(int,\
        \ int)`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdsubstringremainderrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.StringRulesRecipes$Utf8EncodedLengthRecipe:
      name: "tech.picnic.errorprone.refasterrules.StringRulesRecipes$Utf8EncodedLengthRecipe"
      description: "Prefer `Utf8#encodedLength(CharSequence)` over less efficient\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/stringrulesrecipesusdutf8encodedlengthrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes"
      description: "Refaster rules related to expressions dealing with `SuggestedFix`es\
        \ [Source](https://error-prone.picnic.tech/refasterrules/SuggestedFixRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/suggestedfixrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixDeleteRecipe:
      name: "tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixDeleteRecipe"
      description: "Prefer `SuggestedFix#delete(Tree)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/suggestedfixrulesrecipesusdsuggestedfixdeleterecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixPostfixWithRecipe:
      name: "tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixPostfixWithRecipe"
      description: "Prefer `SuggestedFix#postfixWith(Tree, String)`} over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/suggestedfixrulesrecipesusdsuggestedfixpostfixwithrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixPrefixWithRecipe:
      name: "tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixPrefixWithRecipe"
      description: "Prefer `SuggestedFix#prefixWith(Tree, String)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/suggestedfixrulesrecipesusdsuggestedfixprefixwithrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixReplaceStartEndRecipe:
      name: "tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixReplaceStartEndRecipe"
      description: "Prefer `SuggestedFix#replace(int, int, String)`} over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/suggestedfixrulesrecipesusdsuggestedfixreplacestartendrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixReplaceTreeRecipe:
      name: "tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixReplaceTreeRecipe"
      description: "Prefer `SuggestedFix#replace(Tree, String)`} over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/suggestedfixrulesrecipesusdsuggestedfixreplacetreerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixReplaceTreeStartEndRecipe:
      name: "tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixReplaceTreeStartEndRecipe"
      description: "Prefer `SuggestedFix#replace(Tree, String, int, int)`} over more\
        \ contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/suggestedfixrulesrecipesusdsuggestedfixreplacetreestartendrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixSwapRecipe:
      name: "tech.picnic.errorprone.refasterrules.SuggestedFixRulesRecipes$SuggestedFixSwapRecipe"
      description: "Prefer `SuggestedFix#swap(Tree, Tree)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/suggestedfixrulesrecipesusdsuggestedfixswaprecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes"
      description: "Some of the classes below have TestNG `@BeforeTemplate`s that\
        \ reference wildcard type\n bounds (`<?>`), while the associated AssertJ `@AfterTemplate`s\
        \ reference stricter\n type bounds. This introduces the risk of producing\
        \ invalid code. We do this anyway, because\n TestNG's wildcard types can cause\
        \ javac to infer less specific types than AssertJ requires, while\n the appropriate\
        \ (more specific) types _will_ be inferred properly when plugged into AssertJ's\n\
        \ API.\n\n The following is an example of a TestNG statement, which would\
        \ not be rewritten if it weren't\n for the wildcard matching (note that the\
        \ type parameters of the map on the right-hand side will\n be inferred to\
        \ be `<Object, Object>` rather than `<String, Object>`).\n\n ```java\n List<Map<String,\
        \ Object>> myMaps = new ArrayList<>();\n assertEquals(myMaps, ImmutableList.of(ImmutableMap.of()));\n\
        \ ```. [Source](https://error-prone.picnic.tech/refasterrules/TestNGToAssertJRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualArrayIterationOrderRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualArrayIterationOrderRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualArrayIterationOrder {\n    \n    @BeforeTemplate\n\
        \    void before(boolean[] actual, boolean[] expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(byte[] actual,\
        \ byte[] expected) {\n        assertEquals(actual, expected);\n    }\n   \
        \ \n    @BeforeTemplate\n    void before(char[] actual, char[] expected) {\n\
        \        assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(short[] actual, short[] expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(int[] actual,\
        \ int[] expected) {\n        assertEquals(actual, expected);\n    }\n    \n\
        \    @BeforeTemplate\n    void before(long[] actual, long[] expected) {\n\
        \        assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(float[] actual, float[] expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(double[] actual,\
        \ double[] expected) {\n        assertEquals(actual, expected);\n    }\n \
        \   \n    @BeforeTemplate\n    void before(Object[] actual, Object[] expected)\
        \ {\n        assertEquals(actual, expected);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(Object[]\
        \ actual, Object[] expected) {\n        assertThat(actual).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequalarrayiterationorderrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualArrayIterationOrderWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualArrayIterationOrderWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualArrayIterationOrderWithMessage {\n    \n   \
        \ @BeforeTemplate\n    void before(boolean[] actual, String message, boolean[]\
        \ expected) {\n        assertEquals(actual, expected, message);\n    }\n \
        \   \n    @BeforeTemplate\n    void before(byte[] actual, String message,\
        \ byte[] expected) {\n        assertEquals(actual, expected, message);\n \
        \   }\n    \n    @BeforeTemplate\n    void before(char[] actual, String message,\
        \ char[] expected) {\n        assertEquals(actual, expected, message);\n \
        \   }\n    \n    @BeforeTemplate\n    void before(short[] actual, String message,\
        \ short[] expected) {\n        assertEquals(actual, expected, message);\n\
        \    }\n    \n    @BeforeTemplate\n    void before(int[] actual, String message,\
        \ int[] expected) {\n        assertEquals(actual, expected, message);\n  \
        \  }\n    \n    @BeforeTemplate\n    void before(long[] actual, String message,\
        \ long[] expected) {\n        assertEquals(actual, expected, message);\n \
        \   }\n    \n    @BeforeTemplate\n    void before(float[] actual, String message,\
        \ float[] expected) {\n        assertEquals(actual, expected, message);\n\
        \    }\n    \n    @BeforeTemplate\n    void before(double[] actual, String\
        \ message, double[] expected) {\n        assertEquals(actual, expected, message);\n\
        \    }\n    \n    @BeforeTemplate\n    void before(Object[] actual, String\
        \ message, Object[] expected) {\n        assertEquals(actual, expected, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(Object[] actual, String message, Object[] expected) {\n  \
        \      assertThat(actual).withFailMessage(message).containsExactly(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequalarrayiterationorderwithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualArraysIrrespectiveOfOrderRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualArraysIrrespectiveOfOrderRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualArraysIrrespectiveOfOrder {\n    \n    @BeforeTemplate\n\
        \    void before(Object[] actual, Object[] expected) {\n        assertEqualsNoOrder(actual,\
        \ expected);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(Object[] actual, Object[] expected)\
        \ {\n        assertThat(actual).containsExactlyInAnyOrder(expected);\n   \
        \ }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequalarraysirrespectiveoforderrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualArraysIrrespectiveOfOrderWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualArraysIrrespectiveOfOrderWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualArraysIrrespectiveOfOrderWithMessage {\n   \
        \ \n    @BeforeTemplate\n    void before(Object[] actual, String message,\
        \ Object[] expected) {\n        assertEqualsNoOrder(actual, expected, message);\n\
        \    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(Object[] actual, String message, Object[] expected) {\n  \
        \      assertThat(actual).withFailMessage(message).containsExactlyInAnyOrder(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequalarraysirrespectiveoforderwithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualDoubleArraysWithDeltaRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualDoubleArraysWithDeltaRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualDoubleArraysWithDelta {\n    \n    @BeforeTemplate\n\
        \    void before(double[] actual, double[] expected, double delta) {\n   \
        \     assertEquals(actual, expected, delta);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(double[]\
        \ actual, double[] expected, double delta) {\n        assertThat(actual).containsExactly(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequaldoublearrayswithdeltarecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualDoubleArraysWithDeltaWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualDoubleArraysWithDeltaWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualDoubleArraysWithDeltaWithMessage {\n    \n \
        \   @BeforeTemplate\n    void before(double[] actual, String message, double[]\
        \ expected, double delta) {\n        assertEquals(actual, expected, delta,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(double[] actual, String message, double[]\
        \ expected, double delta) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequaldoublearrayswithdeltawithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualDoublesWithDeltaRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualDoublesWithDeltaRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualDoublesWithDelta {\n    \n    @BeforeTemplate\n\
        \    void before(double actual, double expected, double delta) {\n       \
        \ assertEquals(actual, expected, delta);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(double\
        \ actual, double expected, double delta) {\n        assertThat(actual).isCloseTo(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequaldoubleswithdeltarecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualDoublesWithDeltaWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualDoublesWithDeltaWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualDoublesWithDeltaWithMessage {\n    \n    @BeforeTemplate\n\
        \    void before(double actual, String message, double expected, double delta)\
        \ {\n        assertEquals(actual, expected, delta, message);\n    }\n    \n\
        \    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(double actual, String message, double expected, double delta)\
        \ {\n        assertThat(actual).withFailMessage(message).isCloseTo(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequaldoubleswithdeltawithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualFloatArraysWithDeltaRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualFloatArraysWithDeltaRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualFloatArraysWithDelta {\n    \n    @BeforeTemplate\n\
        \    void before(float[] actual, float[] expected, float delta) {\n      \
        \  assertEquals(actual, expected, delta);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(float[]\
        \ actual, float[] expected, float delta) {\n        assertThat(actual).containsExactly(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequalfloatarrayswithdeltarecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualFloatArraysWithDeltaWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualFloatArraysWithDeltaWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualFloatArraysWithDeltaWithMessage {\n    \n  \
        \  @BeforeTemplate\n    void before(float[] actual, String message, float[]\
        \ expected, float delta) {\n        assertEquals(actual, expected, delta,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(float[] actual, String message, float[]\
        \ expected, float delta) {\n        assertThat(actual).withFailMessage(message).containsExactly(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequalfloatarrayswithdeltawithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualFloatsWithDeltaRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualFloatsWithDeltaRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualFloatsWithDelta {\n    \n    @BeforeTemplate\n\
        \    void before(float actual, float expected, float delta) {\n        assertEquals(actual,\
        \ expected, delta);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(Float actual, float expected, float\
        \ delta) {\n        assertThat(actual).isCloseTo(expected, offset(delta));\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequalfloatswithdeltarecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualFloatsWithDeltaWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualFloatsWithDeltaWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualFloatsWithDeltaWithMessage {\n    \n    @BeforeTemplate\n\
        \    void before(float actual, String message, float expected, float delta)\
        \ {\n        assertEquals(actual, expected, delta, message);\n    }\n    \n\
        \    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(float actual, String message, float expected, float delta)\
        \ {\n        assertThat(actual).withFailMessage(message).isCloseTo(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequalfloatswithdeltawithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqual {\n    \n    @BeforeTemplate\n    void before(boolean\
        \ actual, boolean expected) {\n        assertEquals(actual, expected);\n \
        \   }\n    \n    @BeforeTemplate\n    void before(boolean actual, Boolean\
        \ expected) {\n        assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(Boolean actual, boolean expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(Boolean actual,\
        \ Boolean expected) {\n        assertEquals(actual, expected);\n    }\n  \
        \  \n    @BeforeTemplate\n    void before(byte actual, byte expected) {\n\
        \        assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(byte actual, Byte expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(Byte actual,\
        \ byte expected) {\n        assertEquals(actual, expected);\n    }\n    \n\
        \    @BeforeTemplate\n    void before(Byte actual, Byte expected) {\n    \
        \    assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n \
        \   void before(char actual, char expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(char actual,\
        \ Character expected) {\n        assertEquals(actual, expected);\n    }\n\
        \    \n    @BeforeTemplate\n    void before(Character actual, char expected)\
        \ {\n        assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(Character actual, Character expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(short actual,\
        \ short expected) {\n        assertEquals(actual, expected);\n    }\n    \n\
        \    @BeforeTemplate\n    void before(short actual, Short expected) {\n  \
        \      assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(Short actual, short expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(Short actual,\
        \ Short expected) {\n        assertEquals(actual, expected);\n    }\n    \n\
        \    @BeforeTemplate\n    void before(int actual, int expected) {\n      \
        \  assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n   \
        \ void before(int actual, Integer expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(Integer actual,\
        \ int expected) {\n        assertEquals(actual, expected);\n    }\n    \n\
        \    @BeforeTemplate\n    void before(Integer actual, Integer expected) {\n\
        \        assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(long actual, long expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(long actual,\
        \ Long expected) {\n        assertEquals(actual, expected);\n    }\n    \n\
        \    @BeforeTemplate\n    void before(Long actual, long expected) {\n    \
        \    assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n \
        \   void before(Long actual, Long expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(float actual,\
        \ float expected) {\n        assertEquals(actual, expected);\n    }\n    \n\
        \    @BeforeTemplate\n    void before(float actual, Float expected) {\n  \
        \      assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(Float actual, float expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(Float actual,\
        \ Float expected) {\n        assertEquals(actual, expected);\n    }\n    \n\
        \    @BeforeTemplate\n    void before(double actual, double expected) {\n\
        \        assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(double actual, Double expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(Double actual,\
        \ double expected) {\n        assertEquals(actual, expected);\n    }\n   \
        \ \n    @BeforeTemplate\n    void before(Double actual, Double expected) {\n\
        \        assertEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(Object actual, Object expected) {\n        assertEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(String actual,\
        \ String expected) {\n        assertEquals(actual, expected);\n    }\n   \
        \ \n    @BeforeTemplate\n    void before(Map<?, ?> actual, Map<?, ?> expected)\
        \ {\n        assertEquals(actual, expected);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(Object\
        \ actual, Object expected) {\n        assertThat(actual).isEqualTo(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequalrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertEqualWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertEqualWithMessage {\n    \n    @BeforeTemplate\n \
        \   void before(boolean actual, String message, boolean expected) {\n    \
        \    assertEquals(actual, expected, message);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(boolean actual, String message, Boolean expected) {\n   \
        \     assertEquals(actual, expected, message);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(Boolean actual, String message, boolean expected) {\n   \
        \     assertEquals(actual, expected, message);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(Boolean actual, String message, Boolean expected) {\n   \
        \     assertEquals(actual, expected, message);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(byte actual, String message, byte expected) {\n        assertEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(byte\
        \ actual, String message, Byte expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Byte actual,\
        \ String message, byte expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Byte actual,\
        \ String message, Byte expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(char actual,\
        \ String message, char expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(char actual,\
        \ String message, Character expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Character actual,\
        \ String message, char expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Character actual,\
        \ String message, Character expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(short actual,\
        \ String message, short expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(short actual,\
        \ String message, Short expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Short actual,\
        \ String message, short expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Short actual,\
        \ String message, Short expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(int actual,\
        \ String message, int expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(int actual,\
        \ String message, Integer expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Integer actual,\
        \ String message, int expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Integer actual,\
        \ String message, Integer expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(long actual,\
        \ String message, long expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Long actual,\
        \ String message, long expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Long actual,\
        \ String message, Long expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(float actual,\
        \ String message, float expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(float actual,\
        \ String message, Float expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Float actual,\
        \ String message, float expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Float actual,\
        \ String message, Float expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(double actual,\
        \ String message, double expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(double actual,\
        \ String message, Double expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Double actual,\
        \ String message, double expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Double actual,\
        \ String message, Double expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Object actual,\
        \ String message, Object expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(String actual,\
        \ String message, String expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @BeforeTemplate\n    void before(Map<?, ?> actual,\
        \ String message, Map<?, ?> expected) {\n        assertEquals(actual, expected,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(Object actual, String message, Object\
        \ expected) {\n        assertThat(actual).withFailMessage(message).isEqualTo(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertequalwithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertFalseRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertFalseRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertFalse {\n    \n    @BeforeTemplate\n    void before(boolean\
        \ condition) {\n        assertFalse(condition);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(boolean\
        \ condition) {\n        assertThat(condition).isFalse();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertfalserecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertFalseWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertFalseWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertFalseWithMessage {\n    \n    @BeforeTemplate\n \
        \   void before(boolean condition, String message) {\n        assertFalse(condition,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(boolean condition, String message)\
        \ {\n        assertThat(condition).withFailMessage(message).isFalse();\n \
        \   }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertfalsewithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNotNullRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNotNullRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertNotNull {\n    \n    @BeforeTemplate\n    void before(Object\
        \ object) {\n        assertNotNull(object);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(Object\
        \ object) {\n        assertThat(object).isNotNull();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertnotnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNotNullWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNotNullWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertNotNullWithMessage {\n    \n    @BeforeTemplate\n\
        \    void before(Object object, String message) {\n        assertNotNull(object,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(Object object, String message) {\n\
        \        assertThat(object).withFailMessage(message).isNotNull();\n    }\n\
        }\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertnotnullwithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNotSameRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNotSameRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertNotSame {\n    \n    @BeforeTemplate\n    void before(Object\
        \ actual, Object expected) {\n        assertNotSame(actual, expected);\n \
        \   }\n    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(Object actual, Object expected) {\n        assertThat(actual).isNotSameAs(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertnotsamerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNotSameWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNotSameWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertNotSameWithMessage {\n    \n    @BeforeTemplate\n\
        \    void before(Object actual, String message, Object expected) {\n     \
        \   assertNotSame(actual, expected, message);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(Object\
        \ actual, String message, Object expected) {\n        assertThat(actual).withFailMessage(message).isNotSameAs(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertnotsamewithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNullRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNullRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertNull {\n    \n    @BeforeTemplate\n    void before(Object\
        \ object) {\n        assertNull(object);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(Object\
        \ object) {\n        assertThat(object).isNull();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertnullrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNullWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertNullWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertNullWithMessage {\n    \n    @BeforeTemplate\n  \
        \  void before(Object object, String message) {\n        assertNull(object,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(Object object, String message) {\n\
        \        assertThat(object).withFailMessage(message).isNull();\n    }\n}\n\
        ```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertnullwithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertSameRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertSameRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertSame {\n    \n    @BeforeTemplate\n    void before(Object\
        \ actual, Object expected) {\n        assertSame(actual, expected);\n    }\n\
        \    \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(Object actual, Object expected) {\n        assertThat(actual).isSameAs(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertsamerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertSameWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertSameWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertSameWithMessage {\n    \n    @BeforeTemplate\n  \
        \  void before(Object actual, String message, Object expected) {\n       \
        \ assertSame(actual, expected, message);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(Object\
        \ actual, String message, Object expected) {\n        assertThat(actual).withFailMessage(message).isSameAs(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertsamewithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertThrowsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertThrowsRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertThrows {\n    \n    @BeforeTemplate\n    void before(ThrowingRunnable\
        \ runnable) {\n        assertThrows(runnable);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(ThrowingCallable\
        \ runnable) {\n        assertThatThrownBy(runnable);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertthrowsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertTrueRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertTrueRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertTrue {\n    \n    @BeforeTemplate\n    void before(boolean\
        \ condition) {\n        assertTrue(condition);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(boolean\
        \ condition) {\n        assertThat(condition).isTrue();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdasserttruerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertTrueWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertTrueWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertTrueWithMessage {\n    \n    @BeforeTemplate\n  \
        \  void before(boolean condition, String message) {\n        assertTrue(condition,\
        \ message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value =\
        \ STATIC_IMPORT_ALWAYS)\n    void after(boolean condition, String message)\
        \ {\n        assertThat(condition).withFailMessage(message).isTrue();\n  \
        \  }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdasserttruewithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalDoublesWithDeltaRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalDoublesWithDeltaRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertUnequalDoublesWithDelta {\n    \n    @BeforeTemplate\n\
        \    void before(double actual, double expected, double delta) {\n       \
        \ assertNotEquals(actual, expected, delta);\n    }\n    \n    @AfterTemplate\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after(double\
        \ actual, double expected, double delta) {\n        assertThat(actual).isNotCloseTo(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertunequaldoubleswithdeltarecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalDoublesWithDeltaWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalDoublesWithDeltaWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertUnequalDoublesWithDeltaWithMessage {\n    \n    @BeforeTemplate\n\
        \    void before(double actual, String message, double expected, double delta)\
        \ {\n        assertNotEquals(actual, expected, delta, message);\n    }\n \
        \   \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(double actual, String message, double expected, double delta)\
        \ {\n        assertThat(actual).withFailMessage(message).isNotCloseTo(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertunequaldoubleswithdeltawithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalFloatsWithDeltaRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalFloatsWithDeltaRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertUnequalFloatsWithDelta {\n    \n    @BeforeTemplate\n\
        \    void before(float actual, float expected, float delta) {\n        assertNotEquals(actual,\
        \ expected, delta);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(float actual, float expected, float\
        \ delta) {\n        assertThat(actual).isNotCloseTo(expected, offset(delta));\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertunequalfloatswithdeltarecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalFloatsWithDeltaWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalFloatsWithDeltaWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertUnequalFloatsWithDeltaWithMessage {\n    \n    @BeforeTemplate\n\
        \    void before(float actual, String message, float expected, float delta)\
        \ {\n        assertNotEquals(actual, expected, delta, message);\n    }\n \
        \   \n    @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n\
        \    void after(float actual, String message, float expected, float delta)\
        \ {\n        assertThat(actual).withFailMessage(message).isNotCloseTo(expected,\
        \ offset(delta));\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertunequalfloatswithdeltawithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertUnequal {\n    \n    @BeforeTemplate\n    void before(boolean\
        \ actual, boolean expected) {\n        assertNotEquals(actual, expected);\n\
        \    }\n    \n    @BeforeTemplate\n    void before(byte actual, byte expected)\
        \ {\n        assertNotEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(char actual, char expected) {\n        assertNotEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(short actual,\
        \ short expected) {\n        assertNotEquals(actual, expected);\n    }\n \
        \   \n    @BeforeTemplate\n    void before(int actual, int expected) {\n \
        \       assertNotEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(long actual, long expected) {\n        assertNotEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(float actual,\
        \ float expected) {\n        assertNotEquals(actual, expected);\n    }\n \
        \   \n    @BeforeTemplate\n    void before(double actual, double expected)\
        \ {\n        assertNotEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(Object actual, Object expected) {\n        assertNotEquals(actual,\
        \ expected);\n    }\n    \n    @BeforeTemplate\n    void before(String actual,\
        \ String expected) {\n        assertNotEquals(actual, expected);\n    }\n\
        \    \n    @BeforeTemplate\n    void before(Set<?> actual, Set<?> expected)\
        \ {\n        assertNotEquals(actual, expected);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(Map<?, ?> actual, Map<?, ?> expected) {\n        assertNotEquals(actual,\
        \ expected);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(Object actual, Object expected)\
        \ {\n        assertThat(actual).isNotEqualTo(expected);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertunequalrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$AssertUnequalWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class AssertUnequalWithMessage {\n    \n    @BeforeTemplate\n\
        \    void before(boolean actual, String message, boolean expected) {\n   \
        \     assertNotEquals(actual, expected, message);\n    }\n    \n    @BeforeTemplate\n\
        \    void before(byte actual, String message, byte expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(char\
        \ actual, String message, char expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(short\
        \ actual, String message, short expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(int\
        \ actual, String message, int expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(long\
        \ actual, String message, long expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(float\
        \ actual, String message, float expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(double\
        \ actual, String message, double expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(Object\
        \ actual, String message, Object expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(String\
        \ actual, String message, String expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(Set<?>\
        \ actual, String message, Set<?> expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @BeforeTemplate\n    void before(Map<?,\
        \ ?> actual, String message, Map<?, ?> expected) {\n        assertNotEquals(actual,\
        \ expected, message);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(Object actual, String message, Object\
        \ expected) {\n        assertThat(actual).withFailMessage(message).isNotEqualTo(expected);\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdassertunequalwithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$FailRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$FailRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class Fail {\n    \n    @BeforeTemplate\n    void before() {\n\
        \        Assert.fail();\n    }\n    \n    @AfterTemplate\n    @DoNotCall\n\
        \    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n    void after() {\n\
        \        fail();\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdfailrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$FailWithMessageAndThrowableRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$FailWithMessageAndThrowableRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class FailWithMessageAndThrowable {\n    \n    @BeforeTemplate\n\
        \    void before(String message, Throwable throwable) {\n        Assert.fail(message,\
        \ throwable);\n    }\n    \n    @AfterTemplate\n    @UseImportPolicy(value\
        \ = STATIC_IMPORT_ALWAYS)\n    void after(String message, Throwable throwable)\
        \ {\n        fail(message, throwable);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdfailwithmessageandthrowablerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$FailWithMessageRecipe:
      name: "tech.picnic.errorprone.refasterrules.TestNGToAssertJRulesRecipes$FailWithMessageRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class FailWithMessage {\n    \n    @BeforeTemplate\n    void\
        \ before(String message) {\n        Assert.fail(message);\n    }\n    \n \
        \   @AfterTemplate\n    @UseImportPolicy(value = STATIC_IMPORT_ALWAYS)\n \
        \   void after(String message) {\n        fail(message);\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/testngtoassertjrulesrecipesusdfailwithmessagerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes"
      description: "Refaster rules related to expressions dealing with time [Source](https://error-prone.picnic.tech/refasterrules/TimeRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoLocalDateIsAfterRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoLocalDateIsAfterRecipe"
      description: "Prefer `ChronoLocalDate#isBefore(ChronoLocalDate)` over explicit\
        \ comparison, as it yields more readable code"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdchronolocaldateisafterrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoLocalDateIsBeforeRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoLocalDateIsBeforeRecipe"
      description: "Prefer `ChronoLocalDate#isBefore(ChronoLocalDate)` over explicit\
        \ comparison, as it yields more readable code"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdchronolocaldateisbeforerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoLocalDateTimeIsAfterRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoLocalDateTimeIsAfterRecipe"
      description: "Prefer `ChronoLocalDateTime#isBefore(ChronoLocalDateTime)` over\
        \ explicit comparison, as it yields more readable code"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdchronolocaldatetimeisafterrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoLocalDateTimeIsBeforeRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoLocalDateTimeIsBeforeRecipe"
      description: "Prefer `ChronoLocalDateTime#isBefore(ChronoLocalDateTime)` over\
        \ explicit comparison, as it yields more readable code"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdchronolocaldatetimeisbeforerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoZonedDateTimeIsAfterRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoZonedDateTimeIsAfterRecipe"
      description: "Prefer `ChronoZonedDateTime#isBefore(ChronoZonedDateTime)` over\
        \ explicit comparison, as it yields more readable code"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdchronozoneddatetimeisafterrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoZonedDateTimeIsBeforeRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ChronoZonedDateTimeIsBeforeRecipe"
      description: "Prefer `ChronoZonedDateTime#isBefore(ChronoZonedDateTime)` over\
        \ explicit comparison, as it yields more readable code"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdchronozoneddatetimeisbeforerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ClockInstantRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ClockInstantRecipe"
      description: "Prefer `Clock#instant()` over `Instant#now(Clock)`, as it is more\
        \ concise and more \"OOP-py\""
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdclockinstantrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationBetweenInstantsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationBetweenInstantsRecipe"
      description: "Don't unnecessarily convert to and from milliseconds. (This way\
        \ nanosecond precision is retained.) <strong>Warning:</strong> this rewrite\
        \ rule increases precision!"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusddurationbetweeninstantsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationBetweenOffsetDateTimesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationBetweenOffsetDateTimesRecipe"
      description: "Don't unnecessarily convert to and from milliseconds. (This way\
        \ nanosecond precision is retained.) <strong>Warning:</strong> this rewrite\
        \ rule increases precision!"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusddurationbetweenoffsetdatetimesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationIsZeroRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationIsZeroRecipe"
      description: "Prefer `Duration#isZero()` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusddurationiszerorecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfDaysRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfDaysRecipe"
      description: "Prefer `Duration#ofDays(long)` over alternative representations"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusddurationofdaysrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfHoursRecipe"
      description: "Prefer `Duration#ofHours(long)` over alternative representations"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusddurationofhoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfMillisRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfMillisRecipe"
      description: "Prefer `Duration#ofMillis(long)` over alternative representations"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusddurationofmillisrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfMinutesRecipe"
      description: "Prefer `Duration#ofMinutes(long)` over alternative representations"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusddurationofminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfNanosRecipe"
      description: "Prefer `Duration#ofNanos(long)` over alternative representations"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusddurationofnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$DurationOfSecondsRecipe"
      description: "Prefer `Duration#ofSeconds(long)` over alternative representations"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusddurationofsecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$EpochInstantRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$EpochInstantRecipe"
      description: "Prefer `Instant#EPOCH` over alternative representations"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdepochinstantrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantAtOffsetRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantAtOffsetRecipe"
      description: "Prefer `Instant#atOffset(ZoneOffset)` over more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdinstantatoffsetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantAtZoneRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantAtZoneRecipe"
      description: "Prefer `Instant#atZone(ZoneId)` over more verbose alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdinstantatzonerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantIdentityRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantIdentityRecipe"
      description: "Don't unnecessarily transform an `Instant` to an equivalent instance"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdinstantidentityrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantIsAfterRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantIsAfterRecipe"
      description: "Prefer `Instant#isBefore(Instant)` over explicit comparison, as\
        \ it yields more readable code"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdinstantisafterrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantIsBeforeRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantIsBeforeRecipe"
      description: "Prefer `Instant#isBefore(Instant)` over explicit comparison, as\
        \ it yields more readable code"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdinstantisbeforerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantTruncatedToMillisecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantTruncatedToMillisecondsRecipe"
      description: "Note that `Instant#toEpochMilli()` throws an `ArithmeticException`\
        \ for dates\n very far in the past or future, while the suggested alternative\
        \ doesn't."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdinstanttruncatedtomillisecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantTruncatedToSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$InstantTruncatedToSecondsRecipe"
      description: "Prefer `Instant#truncatedTo(TemporalUnit)` over less obvious alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdinstanttruncatedtosecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateAtStartOfDayRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateAtStartOfDayRecipe"
      description: "Prefer `LocalDate#atStartOfDay()` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldateatstartofdayrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateMinusDaysRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateMinusDaysRecipe"
      description: "Prefer `LocalDate#minusDays(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldateminusdaysrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateMinusMonthsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateMinusMonthsRecipe"
      description: "Prefer `LocalDate#minusMonths(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldateminusmonthsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateMinusWeeksRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateMinusWeeksRecipe"
      description: "Prefer `LocalDate#minusWeeks(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldateminusweeksrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateMinusYearsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateMinusYearsRecipe"
      description: "Prefer `LocalDate#minusYears(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldateminusyearsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateOfInstantRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateOfInstantRecipe"
      description: "Prefer `LocalDate#ofInstant(Instant, ZoneId)` over more indirect\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldateofinstantrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDatePlusDaysRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDatePlusDaysRecipe"
      description: "Prefer `LocalDate#plusDays(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldateplusdaysrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDatePlusMonthsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDatePlusMonthsRecipe"
      description: "Prefer `LocalDate#plusMonths(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldateplusmonthsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDatePlusWeeksRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDatePlusWeeksRecipe"
      description: "Prefer `LocalDate#plusWeeks(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldateplusweeksrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDatePlusYearsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDatePlusYearsRecipe"
      description: "Prefer `LocalDate#plusYears(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldateplusyearsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusDaysRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusDaysRecipe"
      description: "Prefer `LocalDateTime#minusDays(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeminusdaysrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusHoursRecipe"
      description: "Prefer `LocalDateTime#minusHours(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeminushoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusMinutesRecipe"
      description: "Prefer `LocalDateTime#minusMinutes(long)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeminusminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusMonthsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusMonthsRecipe"
      description: "Prefer `LocalDateTime#minusMonths(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeminusmonthsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusNanosRecipe"
      description: "Prefer `LocalDateTime#minusNanos(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeminusnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusSecondsRecipe"
      description: "Prefer `LocalDateTime#minusSeconds(long)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeminussecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusWeeksRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusWeeksRecipe"
      description: "Prefer `LocalDateTime#minusWeeks(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeminusweeksrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusYearsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeMinusYearsRecipe"
      description: "Prefer `LocalDateTime#minusYears(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeminusyearsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeOfInstantRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimeOfInstantRecipe"
      description: "Prefer `LocalDateTime#ofInstant(Instant, ZoneId)` over more indirect\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeofinstantrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusDaysRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusDaysRecipe"
      description: "Prefer `LocalDateTime#plusDays(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeplusdaysrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusHoursRecipe"
      description: "Prefer `LocalDateTime#plusHours(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeplushoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusMinutesRecipe"
      description: "Prefer `LocalDateTime#plusMinutes(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeplusminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusMonthsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusMonthsRecipe"
      description: "Prefer `LocalDateTime#plusMonths(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeplusmonthsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusNanosRecipe"
      description: "Prefer `LocalDateTime#plusNanos(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeplusnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusSecondsRecipe"
      description: "Prefer `LocalDateTime#plusSeconds(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeplussecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusWeeksRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusWeeksRecipe"
      description: "Prefer `LocalDateTime#plusWeeks(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeplusweeksrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusYearsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalDateTimePlusYearsRecipe"
      description: "Prefer `LocalDateTime#plusYears(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaldatetimeplusyearsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeMinRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeMinRecipe"
      description: "Prefer the `LocalTime#MIN` over alternative representations"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaltimeminrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeMinusHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeMinusHoursRecipe"
      description: "Prefer `LocalTime#minusHours(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaltimeminushoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeMinusMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeMinusMinutesRecipe"
      description: "Prefer `LocalTime#minusMinutes(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaltimeminusminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeMinusNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeMinusNanosRecipe"
      description: "Prefer `LocalTime#minusNanos(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaltimeminusnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeMinusSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeMinusSecondsRecipe"
      description: "Prefer `LocalTime#minusSeconds(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaltimeminussecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeOfInstantRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimeOfInstantRecipe"
      description: "Prefer `LocalTime#ofInstant(Instant, ZoneId)` over more indirect\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaltimeofinstantrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimePlusHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimePlusHoursRecipe"
      description: "Prefer `LocalTime#plusHours(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaltimeplushoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimePlusMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimePlusMinutesRecipe"
      description: "Prefer `LocalTime#plusMinutes(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaltimeplusminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimePlusNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimePlusNanosRecipe"
      description: "Prefer `LocalTime#plusNanos(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaltimeplusnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimePlusSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$LocalTimePlusSecondsRecipe"
      description: "Prefer `LocalTime#plusSeconds(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdlocaltimeplussecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeIsAfterRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeIsAfterRecipe"
      description: "Prefer `OffsetDateTime#isBefore(OffsetDateTime)` over explicit\
        \ comparison, as it yields more readable code"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeisafterrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeIsBeforeRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeIsBeforeRecipe"
      description: "Prefer `OffsetDateTime#isBefore(OffsetDateTime)` over explicit\
        \ comparison, as it yields more readable code"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeisbeforerecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusDaysRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusDaysRecipe"
      description: "Prefer `OffsetDateTime#minusDays(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeminusdaysrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusHoursRecipe"
      description: "Prefer `OffsetDateTime#minusHours(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeminushoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusMinutesRecipe"
      description: "Prefer `OffsetDateTime#minusMinutes(long)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeminusminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusMonthsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusMonthsRecipe"
      description: "Prefer `OffsetDateTime#minusMonths(long)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeminusmonthsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusNanosRecipe"
      description: "Prefer `OffsetDateTime#minusNanos(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeminusnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusSecondsRecipe"
      description: "Prefer `OffsetDateTime#minusSeconds(long)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeminussecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusWeeksRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusWeeksRecipe"
      description: "Prefer `OffsetDateTime#minusWeeks(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeminusweeksrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusYearsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeMinusYearsRecipe"
      description: "Prefer `OffsetDateTime#minusYears(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeminusyearsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeOfInstantRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimeOfInstantRecipe"
      description: "Prefer `OffsetDateTime#ofInstant(Instant, ZoneId)` over more indirect\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeofinstantrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusDaysRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusDaysRecipe"
      description: "Prefer `OffsetDateTime#plusDays(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeplusdaysrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusHoursRecipe"
      description: "Prefer `OffsetDateTime#plusHours(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeplushoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusMinutesRecipe"
      description: "Prefer `OffsetDateTime#plusMinutes(long)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeplusminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusMonthsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusMonthsRecipe"
      description: "Prefer `OffsetDateTime#plusMonths(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeplusmonthsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusNanosRecipe"
      description: "Prefer `OffsetDateTime#plusNanos(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeplusnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusSecondsRecipe"
      description: "Prefer `OffsetDateTime#plusSeconds(long)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeplussecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusWeeksRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusWeeksRecipe"
      description: "Prefer `OffsetDateTime#plusWeeks(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeplusweeksrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusYearsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetDateTimePlusYearsRecipe"
      description: "Prefer `OffsetDateTime#plusYears(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsetdatetimeplusyearsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimeMinusHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimeMinusHoursRecipe"
      description: "Prefer `OffsetTime#minusHours(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsettimeminushoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimeMinusMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimeMinusMinutesRecipe"
      description: "Prefer `OffsetTime#minusMinutes(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsettimeminusminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimeMinusNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimeMinusNanosRecipe"
      description: "Prefer `OffsetTime#minusNanos(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsettimeminusnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimeMinusSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimeMinusSecondsRecipe"
      description: "Prefer `OffsetTime#minusSeconds(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsettimeminussecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimeOfInstantRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimeOfInstantRecipe"
      description: "Prefer `OffsetTime#ofInstant(Instant, ZoneId)` over more indirect\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsettimeofinstantrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimePlusHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimePlusHoursRecipe"
      description: "Prefer `OffsetTime#plusHours(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsettimeplushoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimePlusMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimePlusMinutesRecipe"
      description: "Prefer `OffsetTime#plusMinutes(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsettimeplusminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimePlusNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimePlusNanosRecipe"
      description: "Prefer `OffsetTime#plusNanos(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsettimeplusnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimePlusSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$OffsetTimePlusSecondsRecipe"
      description: "Prefer `OffsetTime#plusSeconds(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdoffsettimeplussecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$UtcClockRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$UtcClockRecipe"
      description: "Use `Clock#systemUTC()` when possible"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdutcclockrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$UtcConstantRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$UtcConstantRecipe"
      description: "Use `ZoneOffset#UTC` when possible"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdutcconstantrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZeroDurationRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZeroDurationRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class ZeroDuration {\n    \n    @BeforeTemplate\n    Duration\
        \ before(TemporalUnit temporalUnit) {\n        return Refaster.anyOf(Duration.ofNanos(0),\
        \ Duration.ofMillis(0), Duration.ofSeconds(0), Duration.ofSeconds(0, 0), Duration.ofMinutes(0),\
        \ Duration.ofHours(0), Duration.ofDays(0), Duration.of(0, temporalUnit));\n\
        \    }\n    \n    @AfterTemplate\n    Duration after() {\n        return Duration.ZERO;\n\
        \    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzerodurationrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZeroPeriodRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZeroPeriodRecipe"
      description: "Recipe created for the following Refaster template:\n```java\n\
        static final class ZeroPeriod {\n    \n    @BeforeTemplate\n    Period before()\
        \ {\n        return Refaster.anyOf(Period.ofDays(0), Period.ofWeeks(0), Period.ofMonths(0),\
        \ Period.ofYears(0), Period.of(0, 0, 0));\n    }\n    \n    @AfterTemplate\n\
        \    Period after() {\n        return Period.ZERO;\n    }\n}\n```\n."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzeroperiodrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusDaysRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusDaysRecipe"
      description: "Prefer `ZonedDateTime#minusDays(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeminusdaysrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusHoursRecipe"
      description: "Prefer `ZonedDateTime#minusHours(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeminushoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusMinutesRecipe"
      description: "Prefer `ZonedDateTime#minusMinutes(long)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeminusminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusMonthsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusMonthsRecipe"
      description: "Prefer `ZonedDateTime#minusMonths(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeminusmonthsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusNanosRecipe"
      description: "Prefer `ZonedDateTime#minusNanos(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeminusnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusSecondsRecipe"
      description: "Prefer `ZonedDateTime#minusSeconds(long)` over more contrived\
        \ alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeminussecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusWeeksRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusWeeksRecipe"
      description: "Prefer `ZonedDateTime#minusWeeks(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeminusweeksrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusYearsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimeMinusYearsRecipe"
      description: "Prefer `ZonedDateTime#minusYears(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeminusyearsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusDaysRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusDaysRecipe"
      description: "Prefer `ZonedDateTime#plusDays(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeplusdaysrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusHoursRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusHoursRecipe"
      description: "Prefer `ZonedDateTime#plusHours(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeplushoursrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusMinutesRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusMinutesRecipe"
      description: "Prefer `ZonedDateTime#plusMinutes(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeplusminutesrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusMonthsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusMonthsRecipe"
      description: "Prefer `ZonedDateTime#plusMonths(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeplusmonthsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusNanosRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusNanosRecipe"
      description: "Prefer `ZonedDateTime#plusNanos(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeplusnanosrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusSecondsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusSecondsRecipe"
      description: "Prefer `ZonedDateTime#plusSeconds(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeplussecondsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusWeeksRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusWeeksRecipe"
      description: "Prefer `ZonedDateTime#plusWeeks(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeplusweeksrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusYearsRecipe:
      name: "tech.picnic.errorprone.refasterrules.TimeRulesRecipes$ZonedDateTimePlusYearsRecipe"
      description: "Prefer `ZonedDateTime#plusYears(long)` over more contrived alternatives"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/timerulesrecipesusdzoneddatetimeplusyearsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.WebClientRulesRecipes:
      name: "tech.picnic.errorprone.refasterrules.WebClientRulesRecipes"
      description: "Refaster rules related to expressions dealing with `org.springframework.web.reactive.function.client.WebClient`\
        \ and related types [Source](https://error-prone.picnic.tech/refasterrules/WebClientRules)."
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/webclientrulesrecipes"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientGetRecipe:
      name: "tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientGetRecipe"
      description: "Prefer `WebClient#get()` over `WebClient#method(HttpMethod)` with\
        \ `HttpMethod#GET`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/webclientrulesrecipesusdwebclientgetrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientHeadRecipe:
      name: "tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientHeadRecipe"
      description: "Prefer `WebClient#head()` over `WebClient#method(HttpMethod)`\
        \ with `HttpMethod#HEAD`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/webclientrulesrecipesusdwebclientheadrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientOptionsRecipe:
      name: "tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientOptionsRecipe"
      description: "Prefer `WebClient#options()` over `WebClient#method(HttpMethod)`\
        \ with `HttpMethod#OPTIONS`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/webclientrulesrecipesusdwebclientoptionsrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientPatchRecipe:
      name: "tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientPatchRecipe"
      description: "Prefer `WebClient#patch()` over `WebClient#method(HttpMethod)`\
        \ with `HttpMethod#PATCH`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/webclientrulesrecipesusdwebclientpatchrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientPostRecipe:
      name: "tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientPostRecipe"
      description: "Prefer `WebClient#post()` over `WebClient#method(HttpMethod)`\
        \ with `HttpMethod#POST`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/webclientrulesrecipesusdwebclientpostrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
    tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientPutRecipe:
      name: "tech.picnic.errorprone.refasterrules.WebClientRulesRecipes$WebClientPutRecipe"
      description: "Prefer `WebClient#put()` over `WebClient#method(HttpMethod)` with\
        \ `HttpMethod#PUT`"
      docLink: "https://docs.openrewrite.org/recipes/tech/picnic/errorprone/refasterrules/webclientrulesrecipesusdwebclientputrecipe"
      options: []
      isImperative: true
      artifactId: "rewrite-third-party"
rewrite-xml:
  artifactId: "rewrite-xml"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.xml.AddCommentToXmlTag:
      name: "org.openrewrite.xml.AddCommentToXmlTag"
      description: "Adds a comment as the first element in an XML tag."
      docLink: "https://docs.openrewrite.org/recipes/xml/addcommenttoxmltag"
      options:
      - name: "commentText"
        type: "String"
        required: true
      - name: "xPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.AddOrUpdateChildTag:
      name: "org.openrewrite.xml.AddOrUpdateChildTag"
      description: "Adds or updates a child element below the parent(s) matching the\
        \ provided `parentXPath` expression. If a child with the same name already\
        \ exists, it will be replaced by default. Otherwise, a new child will be added.\
        \ This ensures idempotent behaviour."
      docLink: "https://docs.openrewrite.org/recipes/xml/addorupdatechildtag"
      options:
      - name: "newChildTag"
        type: "String"
        required: true
      - name: "parentXPath"
        type: "String"
        required: true
      - name: "replaceExisting"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.ChangeNamespaceValue:
      name: "org.openrewrite.xml.ChangeNamespaceValue"
      description: "Alters XML Attribute value within specified element of a specific\
        \ resource versions."
      docLink: "https://docs.openrewrite.org/recipes/xml/changenamespacevalue"
      options:
      - name: "elementName"
        type: "String"
        required: false
      - name: "newSchemaLocation"
        type: "String"
        required: false
      - name: "newValue"
        type: "String"
        required: true
      - name: "newVersion"
        type: "String"
        required: true
      - name: "oldValue"
        type: "String"
        required: false
      - name: "searchAllNamespaces"
        type: "Boolean"
        required: false
      - name: "versionMatcher"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.ChangeTagAttribute:
      name: "org.openrewrite.xml.ChangeTagAttribute"
      description: "Alters XML attribute value on a specified element."
      docLink: "https://docs.openrewrite.org/recipes/xml/changetagattribute"
      options:
      - name: "attributeName"
        type: "String"
        required: true
      - name: "elementName"
        type: "String"
        required: true
      - name: "newValue"
        type: "String"
        required: true
      - name: "oldValue"
        type: "String"
        required: false
      - name: "regex"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.ChangeTagName:
      name: "org.openrewrite.xml.ChangeTagName"
      description: "Alters the name of XML tags matching the provided expression."
      docLink: "https://docs.openrewrite.org/recipes/xml/changetagname"
      options:
      - name: "elementName"
        type: "String"
        required: true
      - name: "newName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.ChangeTagValue:
      name: "org.openrewrite.xml.ChangeTagValue"
      description: "Alters the value of XML tags matching the provided expression.\
        \ When regex is enabled the replacement happens only for text nodes provided\
        \ the pattern matches."
      docLink: "https://docs.openrewrite.org/recipes/xml/changetagvalue"
      options:
      - name: "elementName"
        type: "String"
        required: true
      - name: "newValue"
        type: "String"
        required: true
      - name: "oldValue"
        type: "String"
        required: false
      - name: "regex"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.CreateXmlFile:
      name: "org.openrewrite.xml.CreateXmlFile"
      description: "Create a new XML file."
      docLink: "https://docs.openrewrite.org/recipes/xml/createxmlfile"
      options:
      - name: "fileContents"
        type: "String"
        required: false
      - name: "overwriteExisting"
        type: "Boolean"
        required: false
      - name: "relativeFileName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.RemoveEmptyXmlTags:
      name: "org.openrewrite.xml.RemoveEmptyXmlTags"
      description: "Removes XML tags that do not have attributes or children, including\
        \ self closing tags."
      docLink: "https://docs.openrewrite.org/recipes/xml/removeemptyxmltags"
      options: []
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.RemoveTrailingWhitespace:
      name: "org.openrewrite.xml.RemoveTrailingWhitespace"
      description: "Remove any extra trailing whitespace from the end of each line."
      docLink: "https://docs.openrewrite.org/recipes/xml/removetrailingwhitespace"
      options: []
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.RemoveXmlTag:
      name: "org.openrewrite.xml.RemoveXmlTag"
      description: "Removes XML tags matching the provided expression."
      docLink: "https://docs.openrewrite.org/recipes/xml/removexmltag"
      options:
      - name: "fileMatcher"
        type: "String"
        required: false
      - name: "xPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.XsltTransformation:
      name: "org.openrewrite.xml.XsltTransformation"
      description: "Apply the specified XSLT transformation on matching files. Note\
        \ that there are no format matching guarantees when running this recipe."
      docLink: "https://docs.openrewrite.org/recipes/xml/xslttransformation"
      options:
      - name: "filePattern"
        type: "String"
        required: true
      - name: "xslt"
        type: "String"
        required: false
      - name: "xsltResource"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.format.AutoFormat:
      name: "org.openrewrite.xml.format.AutoFormat"
      description: "Indents XML using the most common indentation size and tabs or\
        \ space choice in use in the file."
      docLink: "https://docs.openrewrite.org/recipes/xml/format/autoformat"
      options: []
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.format.LineBreaks:
      name: "org.openrewrite.xml.format.LineBreaks"
      description: "Add line breaks at appropriate places between XML syntax elements."
      docLink: "https://docs.openrewrite.org/recipes/xml/format/linebreaks"
      options: []
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.format.NormalizeFormat:
      name: "org.openrewrite.xml.format.NormalizeFormat"
      description: "Move whitespace to the outermost LST element possible."
      docLink: "https://docs.openrewrite.org/recipes/xml/format/normalizeformat"
      options: []
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.format.NormalizeLineBreaks:
      name: "org.openrewrite.xml.format.NormalizeLineBreaks"
      description: "Consistently use either Windows style (CRLF) or Linux style (LF)\
        \ line breaks. If no `GeneralFormatStyle` is specified this will use whichever\
        \ style of line endings are more common."
      docLink: "https://docs.openrewrite.org/recipes/xml/format/normalizelinebreaks"
      options: []
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.format.NormalizeTabsOrSpaces:
      name: "org.openrewrite.xml.format.NormalizeTabsOrSpaces"
      description: "Consistently use either tabs or spaces in indentation."
      docLink: "https://docs.openrewrite.org/recipes/xml/format/normalizetabsorspaces"
      options: []
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.format.TabsAndIndents:
      name: "org.openrewrite.xml.format.TabsAndIndents"
      description: "Format tabs and indents in XML code."
      docLink: "https://docs.openrewrite.org/recipes/xml/format/tabsandindents"
      options: []
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.search.FindNamespacePrefix:
      name: "org.openrewrite.xml.search.FindNamespacePrefix"
      description: "Find XML namespace prefixes, optionally restricting the search\
        \ by a XPath expression."
      docLink: "https://docs.openrewrite.org/recipes/xml/search/findnamespaceprefix"
      options:
      - name: "namespacePrefix"
        type: "String"
        required: true
      - name: "xPath"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.search.FindTags:
      name: "org.openrewrite.xml.search.FindTags"
      description: "Find XML tags by XPath expression."
      docLink: "https://docs.openrewrite.org/recipes/xml/search/findtags"
      options:
      - name: "xPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.search.HasNamespaceUri:
      name: "org.openrewrite.xml.search.HasNamespaceUri"
      description: "Find XML namespace URIs, optionally restricting the search by\
        \ a XPath expression."
      docLink: "https://docs.openrewrite.org/recipes/xml/search/hasnamespaceuri"
      options:
      - name: "namespaceUri"
        type: "String"
        required: true
      - name: "xPath"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.security.AddOwaspDateBoundSuppressions:
      name: "org.openrewrite.xml.security.AddOwaspDateBoundSuppressions"
      description: "Adds an expiration date to all OWASP suppressions in order to\
        \ ensure that they are periodically reviewed. For use with the OWASP `dependency-check`\
        \ tool. More details: https://jeremylong.github.io/DependencyCheck/general/suppression.html."
      docLink: "https://docs.openrewrite.org/recipes/xml/security/addowaspdateboundsuppressions"
      options:
      - name: "untilDate"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.security.IsOwaspSuppressionsFile:
      name: "org.openrewrite.xml.security.IsOwaspSuppressionsFile"
      description: "These files are used to suppress false positives in OWASP [Dependency\
        \ Check](https://jeremylong.github.io/DependencyCheck)."
      docLink: "https://docs.openrewrite.org/recipes/xml/security/isowaspsuppressionsfile"
      options: []
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.security.RemoveOwaspSuppressions:
      name: "org.openrewrite.xml.security.RemoveOwaspSuppressions"
      description: "Remove all OWASP suppressions with a suppression end date in the\
        \ past, as these are no longer valid. For use with the OWASP `dependency-check`\
        \ tool. More details on OWASP suppression files can be found [here](https://jeremylong.github.io/DependencyCheck/general/suppression.html)."
      docLink: "https://docs.openrewrite.org/recipes/xml/security/removeowaspsuppressions"
      options:
      - name: "cutOffDate"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.security.UpdateOwaspSuppressionDate:
      name: "org.openrewrite.xml.security.UpdateOwaspSuppressionDate"
      description: "Updates the expiration date for OWASP suppressions having a matching\
        \ cve tag. For use with the OWASP `dependency-check` tool. More details: https://jeremylong.github.io/DependencyCheck/general/suppression.html."
      docLink: "https://docs.openrewrite.org/recipes/xml/security/updateowaspsuppressiondate"
      options:
      - name: "cveList"
        type: "List"
        required: true
      - name: "untilDate"
        type: "String"
        required: false
      isImperative: true
      artifactId: "rewrite-xml"
    org.openrewrite.xml.style.AutodetectDebug:
      name: "org.openrewrite.xml.style.AutodetectDebug"
      description: "Runs XML Autodetect and records the results in data tables and\
        \ search markers. A debugging tool for figuring out why XML documents get\
        \ styled the way they do."
      docLink: "https://docs.openrewrite.org/recipes/xml/style/autodetectdebug"
      options: []
      isImperative: true
      artifactId: "rewrite-xml"
rewrite-yaml:
  artifactId: "rewrite-yaml"
  version: "8.48.0"
  markdownRecipeDescriptors:
    org.openrewrite.yaml.AppendToSequence:
      name: "org.openrewrite.yaml.AppendToSequence"
      description: "Append item to YAML sequence."
      docLink: "https://docs.openrewrite.org/recipes/yaml/appendtosequence"
      options:
      - name: "existingSequenceValues"
        type: "List"
        required: false
      - name: "matchExistingSequenceValuesInAnyOrder"
        type: "Boolean"
        required: false
      - name: "sequencePath"
        type: "String"
        required: true
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.ChangeKey:
      name: "org.openrewrite.yaml.ChangeKey"
      description: "Change a YAML mapping entry key while leaving the value intact."
      docLink: "https://docs.openrewrite.org/recipes/yaml/changekey"
      options:
      - name: "newKey"
        type: "String"
        required: true
      - name: "oldKeyPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.ChangePropertyKey:
      name: "org.openrewrite.yaml.ChangePropertyKey"
      description: "Change a YAML property key while leaving the value intact. Expects\
        \ dot notation for nested YAML mappings, similar to how Spring Boot interprets\
        \ `application.yml` files."
      docLink: "https://docs.openrewrite.org/recipes/yaml/changepropertykey"
      options:
      - name: "except"
        type: "List"
        required: false
      - name: "filePattern"
        type: "String"
        required: false
      - name: "newPropertyKey"
        type: "String"
        required: true
      - name: "oldPropertyKey"
        type: "String"
        required: true
      - name: "relaxedBinding"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.ChangePropertyValue:
      name: "org.openrewrite.yaml.ChangePropertyValue"
      description: "Change a YAML property. Expects dot notation for nested YAML mappings,\
        \ similar to how Spring Boot interprets `application.yml` files."
      docLink: "https://docs.openrewrite.org/recipes/yaml/changepropertyvalue"
      options:
      - name: "filePattern"
        type: "String"
        required: false
      - name: "newValue"
        type: "String"
        required: true
      - name: "oldValue"
        type: "String"
        required: false
      - name: "propertyKey"
        type: "String"
        required: true
      - name: "regex"
        type: "Boolean"
        required: false
      - name: "relaxedBinding"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.ChangeValue:
      name: "org.openrewrite.yaml.ChangeValue"
      description: "Change a YAML mapping entry value while leaving the key intact."
      docLink: "https://docs.openrewrite.org/recipes/yaml/changevalue"
      options:
      - name: "filePattern"
        type: "String"
        required: false
      - name: "keyPath"
        type: "String"
        required: true
      - name: "value"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.CoalesceProperties:
      name: "org.openrewrite.yaml.CoalesceProperties"
      description: "Simplify nested map hierarchies into their simplest dot separated\
        \ property form, similar to how Spring Boot interprets `application.yml` files."
      docLink: "https://docs.openrewrite.org/recipes/yaml/coalesceproperties"
      options: []
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.CommentOutProperty:
      name: "org.openrewrite.yaml.CommentOutProperty"
      description: "Comment out a YAML property and add a comment in front."
      docLink: "https://docs.openrewrite.org/recipes/yaml/commentoutproperty"
      options:
      - name: "commentOutProperty"
        type: "Boolean"
        required: false
      - name: "commentText"
        type: "String"
        required: true
      - name: "propertyKey"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.CopyValue:
      name: "org.openrewrite.yaml.CopyValue"
      description: "Copies a YAML value from one key to another. The existing key/value\
        \ pair remains unaffected by this change. Attempts to merge the copied value\
        \ into the new key if it already exists. Attempts to create the new key if\
        \ it does not exist."
      docLink: "https://docs.openrewrite.org/recipes/yaml/copyvalue"
      options:
      - name: "newFilePath"
        type: "String"
        required: false
      - name: "newKey"
        type: "String"
        required: true
      - name: "oldFilePath"
        type: "String"
        required: false
      - name: "oldKeyPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.CreateYamlFile:
      name: "org.openrewrite.yaml.CreateYamlFile"
      description: "Create a new YAML file."
      docLink: "https://docs.openrewrite.org/recipes/yaml/createyamlfile"
      options:
      - name: "fileContents"
        type: "String"
        required: false
      - name: "fileContentsUrl"
        type: "String"
        required: false
      - name: "overwriteExisting"
        type: "Boolean"
        required: false
      - name: "relativeFileName"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.DeleteKey:
      name: "org.openrewrite.yaml.DeleteKey"
      description: "Delete a YAML mapping entry key."
      docLink: "https://docs.openrewrite.org/recipes/yaml/deletekey"
      options:
      - name: "filePattern"
        type: "String"
        required: false
      - name: "keyPath"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.DeleteProperty:
      name: "org.openrewrite.yaml.DeleteProperty"
      description: "Delete a YAML property. Nested YAML mappings are interpreted as\
        \ dot separated property names, i.e.  as Spring Boot interprets application.yml\
        \ files like `a.b.c.d` or `a.b.c:d`."
      docLink: "https://docs.openrewrite.org/recipes/yaml/deleteproperty"
      options:
      - name: "coalesce"
        type: "Boolean"
        required: false
      - name: "filePattern"
        type: "String"
        required: false
      - name: "propertyKey"
        type: "String"
        required: true
      - name: "relaxedBinding"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.MergeYaml:
      name: "org.openrewrite.yaml.MergeYaml"
      description: "Merge a YAML snippet with an existing YAML document."
      docLink: "https://docs.openrewrite.org/recipes/yaml/mergeyaml"
      options:
      - name: "acceptTheirs"
        type: "Boolean"
        required: false
      - name: "createNewKeys"
        type: "Boolean"
        required: false
      - name: "filePattern"
        type: "String"
        required: false
      - name: "insertMode"
        type: "InsertMode"
        required: false
      - name: "insertProperty"
        type: "String"
        required: false
      - name: "key"
        type: "String"
        required: true
      - name: "objectIdentifyingProperty"
        type: "String"
        required: false
      - name: "yaml"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.cleanup.RemoveUnused:
      name: "org.openrewrite.yaml.cleanup.RemoveUnused"
      description: "Remove YAML mappings and sequence keys that have no value."
      docLink: "https://docs.openrewrite.org/recipes/yaml/cleanup/removeunused"
      options: []
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.format.Indents:
      name: "org.openrewrite.yaml.format.Indents"
      description: "Format tabs and indents in YAML."
      docLink: "https://docs.openrewrite.org/recipes/yaml/format/indents"
      options: []
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.search.FindKey:
      name: "org.openrewrite.yaml.search.FindKey"
      description: "Find YAML entries that match the specified [JsonPath](https://docs.openrewrite.org/reference/jsonpath-and-jsonpathmatcher-reference)\
        \ expression."
      docLink: "https://docs.openrewrite.org/recipes/yaml/search/findkey"
      options:
      - name: "key"
        type: "String"
        required: true
      isImperative: true
      artifactId: "rewrite-yaml"
    org.openrewrite.yaml.search.FindProperty:
      name: "org.openrewrite.yaml.search.FindProperty"
      description: "Find YAML properties that match the specified `propertyKey`. Expects\
        \ dot notation for nested YAML mappings, similar to how Spring Boot interprets\
        \ `application.yml` files."
      docLink: "https://docs.openrewrite.org/recipes/yaml/search/findproperty"
      options:
      - name: "propertyKey"
        type: "String"
        required: true
      - name: "propertyValue"
        type: "String"
        required: false
      - name: "relaxedBinding"
        type: "Boolean"
        required: false
      isImperative: true
      artifactId: "rewrite-yaml"
