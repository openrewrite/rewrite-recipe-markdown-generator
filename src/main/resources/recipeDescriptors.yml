- artifactId: "rewrite-circleci"
  version: "1.14.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.circleci.InstallOrb"
    description: "Install a CircleCI [orb](https://circleci.com/docs/2.0/orb-intro/)\
      \ if it is not already installed."
    options:
    - name: "orbKey"
      type: "String"
      required: true
    - name: "slug"
      type: "String"
      required: true
  - name: "org.openrewrite.circleci.UpdateImage"
    description: "See the list of [pre-built CircleCI images](https://circleci.com/docs/2.0/circleci-images/)."
    options:
    - name: "image"
      type: "String"
      required: true
- artifactId: "rewrite-concourse"
  version: "1.13.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.concourse.ChangeResourceVersion"
    description: "Pin or unpin a resource to a particular version."
    options:
    - name: "resourceType"
      type: "String"
      required: true
    - name: "version"
      type: "String"
      required: false
  - name: "org.openrewrite.concourse.ChangeValue"
    description: "Change every value matching the key pattern."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "keyPath"
      type: "String"
      required: true
    - name: "newValue"
      type: "String"
      required: true
    - name: "oldValue"
      type: "String"
      required: false
  - name: "org.openrewrite.concourse.FindResource"
    description: "Find a Concourse resource by name."
    options:
    - name: "type"
      type: "String"
      required: true
  - name: "org.openrewrite.concourse.UpdateGitResourceUri"
    description: "Update git resource `source.uri` URI values to point to a new URI\
      \ value."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "newURI"
      type: "String"
      required: true
    - name: "oldURIPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.concourse.search.FindPinnedResource"
    description: "Find resources of a particular type that have pinned versions."
    options:
    - name: "resourceType"
      type: "String"
      required: false
  - name: "org.openrewrite.concourse.search.FindPrivilegedResourceType"
    description: "By default, `resource_type` definitions are unprivileged."
    options: []
- artifactId: "rewrite-core"
  version: "7.33.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.DeleteSourceFiles"
    description: "Delete files by source path."
    options:
    - name: "filePattern"
      type: "String"
      required: true
  - name: "org.openrewrite.FindParseFailures"
    description: "This recipe explores parse failures after an AST is produced for\
      \ classifying the types of failures that can occur and prioritizing fixes according\
      \ to the most common problems."
    options: []
  - name: "org.openrewrite.FindQuarks"
    description: "Find instances of type `Quark`."
    options: []
  - name: "org.openrewrite.FindSourceFiles"
    description: "Find files by source path."
    options:
    - name: "filePattern"
      type: "String"
      required: true
  - name: "org.openrewrite.RenameFile"
    description: "Rename a file while keeping it in the same directory."
    options:
    - name: "fileMatcher"
      type: "String"
      required: true
    - name: "fileName"
      type: "String"
      required: true
  - name: "org.openrewrite.SetFilePermissions"
    description: "Set a files read, write and executable permission attributes."
    options:
    - name: "fileMatcher"
      type: "String"
      required: true
    - name: "isExecutable"
      type: "Boolean"
      required: true
    - name: "isReadable"
      type: "Boolean"
      required: true
    - name: "isWritable"
      type: "Boolean"
      required: true
  - name: "org.openrewrite.config.CompositeRecipe"
    description: ""
    options: []
- artifactId: "rewrite-github-actions"
  version: "1.13.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.github.ActionsSetupJavaAdoptOpenJDKToTemurin"
    description: "Adopt OpenJDK got moved to Eclipse Temurin and won't be updated\
      \ anymore. It is highly recommended to migrate workflows from adopt to temurin\
      \ to keep receiving software and security updates. See more details in the [Good-bye\
      \ AdoptOpenJDK post](https://blog.adoptopenjdk.net/2021/08/goodbye-adoptopenjdk-hello-adoptium/)."
    options: []
  - name: "org.openrewrite.github.AddCronTrigger"
    description: "The `schedule` [event](https://docs.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events)\
      \ allows you to trigger a workflow at a scheduled time."
    options:
    - name: "cron"
      type: "String"
      required: true
  - name: "org.openrewrite.github.AddManualTrigger"
    description: "You can manually trigger workflow runs. To trigger specific workflows\
      \ in a repository, use the `workflow_dispatch` event."
    options: []
  - name: "org.openrewrite.github.AutoCancelInProgressWorkflow"
    description: "When a workflow is already running and would be triggered again,\
      \ cancel the existing workflow. See [`styfle/cancel-workflow-action`](https://github.com/styfle/cancel-workflow-action)\
      \ for details."
    options:
    - name: "accessToken"
      type: "String"
      required: false
  - name: "org.openrewrite.github.ChangeDependabotScheduleInterval"
    description: "Change the schedule interval for a given package-ecosystem in a\
      \ `dependabot.yml` configuration file. [The available configuration options\
      \ for dependabot are listed on GitHub](https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/configuration-options-for-dependency-updates)."
    options:
    - name: "interval"
      type: "String"
      required: true
    - name: "packageEcosystem"
      type: "String"
      required: true
  - name: "org.openrewrite.github.DependabotCheckForGithubActionsUpdatesDaily"
    description: "Set dependabot to check for github-actions updates daily."
    options: []
  - name: "org.openrewrite.github.DependabotCheckForGithubActionsUpdatesWeekly"
    description: "Set dependabot to check for github-actions updates weekly."
    options: []
  - name: "org.openrewrite.github.SetupJavaCaching"
    description: "Github actions supports dependency caching on Maven and Gradle projects.\
      \ See the [blog post](https://github.blog/changelog/2021-08-30-github-actions-setup-java-now-supports-dependency-caching/)."
    options: []
- artifactId: "rewrite-gradle"
  version: "7.32.1"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.gradle.ActivateStyle"
    description: "Sets the specified style as active. Once the style has been set,\
      \ future recipes will use the specified style for any changes they make. This\
      \ recipe does not reformat anything on its own. Prefers to set the `activeStyle()`\
      \ method in the `rewrite` DSL in a build.gradle.If no `rewrite` DSL can be found\
      \ to update, will instead place a \"systemProp.rewrite.activeStyles\" entry\
      \ within the project's gradle.properties. Styles can be provided by rewrite\
      \ itself, defined in a rewrite.yml, or provided by recipe modules."
    options:
    - name: "fullyQualifiedStyleName"
      type: "String"
      required: true
    - name: "overwriteExistingStyles"
      type: "boolean"
      required: false
  - name: "org.openrewrite.gradle.AddDelegatesToGradleApi"
    description: "The Gradle API has methods which accept `groovy.lang.Closure`. Typically,\
      \ there is an overload which accepts an `org.gradle.api.Action`.This recipe\
      \ takes the type declared as the receiver of the `Action` overload and adds\
      \ an appropriate `@groovy.lang.DelegatesTo` annotation to the `Closure` overload."
    options: []
  - name: "org.openrewrite.gradle.AddGradleWrapper"
    description: "Add a Gradle wrapper where one does not exist."
    options:
    - name: "distribution"
      type: "String"
      required: false
    - name: "version"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.ChangeDependencyArtifactId"
    description: "Change the artifactId of a specified Gradle dependency. "
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "configuration"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
    - name: "newArtifactId"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.ChangeDependencyClassifier"
    description: "Finds dependencies declared in `build.gradle` files."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "configuration"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
    - name: "newClassifier"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.ChangeDependencyConfiguration"
    description: "Finds dependencies declared in `build.gradle` files."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "configuration"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
    - name: "newConfiguration"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.ChangeDependencyExtension"
    description: "Finds dependencies declared in `build.gradle` files."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "configuration"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
    - name: "newExtension"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.ChangeDependencyGroupId"
    description: "Change the group id of a specified Gradle dependency."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "configuration"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
    - name: "newGroupId"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.ChangeDependencyVersion"
    description: "Finds dependencies declared in `build.gradle` files."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "configuration"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
    - name: "newVersion"
      type: "String"
      required: true
    - name: "versionPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.gradle.ChangeJavaCompatibility"
    description: "Find and updates the Java compatibility for the Gradle project"
    options:
    - name: "compatibilityType"
      type: "String"
      required: true
    - name: "newVersion"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.DependencyUseMapNotation"
    description: "In Gradle, dependencies can be expressed as a `String` like `\"\
      groupId:artifactId:version\"`, or equivalently as a `Map` like `group: 'groupId',\
      \ name: 'artifactId', version: 'version'`. This recipe replaces dependencies\
      \ represented as `Strings` with an equivalent dependency represented as a `Map`."
    options: []
  - name: "org.openrewrite.gradle.DependencyUseStringNotation"
    description: "In Gradle, dependencies can be expressed as a `String` like `\"\
      groupId:artifactId:version\"`, or equivalently as a `Map` like `group: 'groupId',\
      \ name: 'artifactId', version: 'version'`. This recipe replaces dependencies\
      \ represented as `Maps` with an equivalent dependency represented as a `String`."
    options: []
  - name: "org.openrewrite.gradle.RemoveGradleDependency"
    description: "Removes a single dependency from the dependencies section of the\
      \ `build.gradle`."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "configuration"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.RemoveRepository"
    description: "Removes a repository from Gradle build scripts. Named repositories\
      \ include \"jcenter\", \"mavenCentral\", \"mavenLocal\", and \"google\""
    options:
    - name: "repository"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.UpdateGradleWrapper"
    description: "Update the version of Gradle used in an existing Gradle wrapper."
    options:
    - name: "distribution"
      type: "String"
      required: false
    - name: "version"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.UpgradePluginVersion"
    description: "Update a Gradle plugin by id to a later version."
    options:
    - name: "newVersion"
      type: "String"
      required: true
    - name: "pluginIdPattern"
      type: "String"
      required: true
    - name: "versionPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.gradle.search.FindDependency"
    description: "Finds dependencies declared in `build.gradle` files. See the [reference](https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_configurations_graph)\
      \ on Gradle configurations or the diagram below for a description of what configuration\
      \ to use. A project's compile and runtime classpath is based on these configurations.\n\
      \n<img alt=\"Gradle compile classpath\" src=\"https://docs.gradle.org/current/userguide/img/java-library-ignore-deprecated-main.png\"\
      \ width=\"200px\"/>\n A project's test classpath is based on these configurations.\n\
      \n<img alt=\"Gradle test classpath\" src=\"https://docs.gradle.org/current/userguide/img/java-library-ignore-deprecated-test.png\"\
      \ width=\"200px\"/>"
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "configuration"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.search.FindDependencyHandler"
    description: "Find the dependency handler containing any number of dependency\
      \ definitions."
    options: []
  - name: "org.openrewrite.gradle.search.FindPlugin"
    description: "Find a Gradle plugin by id."
    options:
    - name: "pluginId"
      type: "String"
      required: true
  - name: "org.openrewrite.gradle.security.UseHttpsForRepositories"
    description: "Use HTTPS for repository urls"
    options: []
- artifactId: "rewrite-groovy"
  version: "7.33.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.groovy.format.OmitParenthesesForLastArgumentLambda"
    description: "Groovy allows a shorthand syntax that allows a closure to be placed\
      \ outside of parentheses."
    options: []
  - name: "org.openrewrite.groovy.format.OmitParenthesesFormat"
    description: "Format tabs and indents in Java code."
    options: []
- artifactId: "rewrite-hcl"
  version: "7.32.1"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.hcl.DeleteContent"
    description: "Delete HCL content by path."
    options:
    - name: "contentPath"
      type: "String"
      required: true
  - name: "org.openrewrite.hcl.MoveContentToFile"
    description: "Move content to another HCL file, deleting it in the original file."
    options:
    - name: "contentPath"
      type: "String"
      required: true
    - name: "destinationPath"
      type: "String"
      required: true
    - name: "fromPath"
      type: "String"
      required: true
  - name: "org.openrewrite.hcl.format.AutoFormat"
    description: "Format HCL code using a standard comprehensive set of HCL formatting\
      \ recipes."
    options: []
  - name: "org.openrewrite.hcl.format.BlankLines"
    description: "Add and/or remove blank lines."
    options: []
  - name: "org.openrewrite.hcl.format.NormalizeFormat"
    description: "Move whitespace to the outermost AST element possible."
    options: []
  - name: "org.openrewrite.hcl.format.RemoveTrailingWhitespace"
    description: "Remove any extra trailing whitespace from the end of each line."
    options: []
  - name: "org.openrewrite.hcl.format.Spaces"
    description: "Format whitespace in HCL code."
    options: []
  - name: "org.openrewrite.hcl.format.TabsAndIndents"
    description: "Format tabs and indents in HCL code."
    options: []
  - name: "org.openrewrite.hcl.search.FindContent"
    description: "Find HCL content by path."
    options:
    - name: "contentPath"
      type: "String"
      required: true
- artifactId: "rewrite-java"
  version: "7.33.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.java.AddApache2LicenseHeader"
    description: "Adds the Apache Software License Version 2.0 to Java source files\
      \ which are missing a license header."
    options: []
  - name: "org.openrewrite.java.AddLicenseHeader"
    description: "Adds license headers to Java source files when missing. Does not\
      \ override existing license headers."
    options:
    - name: "licenseText"
      type: "String"
      required: true
  - name: "org.openrewrite.java.AddOrUpdateAnnotationAttribute"
    description: "Some annotations accept arguments. This recipe sets an existing\
      \ argument to the specified value, or adds the argument if it is not already\
      \ set."
    options:
    - name: "addOnly"
      type: "Boolean"
      required: true
    - name: "annotationType"
      type: "String"
      required: true
    - name: "attributeName"
      type: "String"
      required: false
    - name: "attributeValue"
      type: "String"
      required: true
  - name: "org.openrewrite.java.ChangeMethodAccessLevel"
    description: "Change the access level (public, protected, private, package private)\
      \ of a method."
    options:
    - name: "matchOverrides"
      type: "Boolean"
      required: false
    - name: "methodPattern"
      type: "String"
      required: true
    - name: "newAccessLevel"
      type: "String"
      required: true
  - name: "org.openrewrite.java.ChangeMethodName"
    description: "Rename a method."
    options:
    - name: "ignoreDefinition"
      type: "Boolean"
      required: false
    - name: "matchOverrides"
      type: "Boolean"
      required: false
    - name: "methodPattern"
      type: "String"
      required: true
    - name: "newMethodName"
      type: "String"
      required: true
  - name: "org.openrewrite.java.ChangeMethodTargetToStatic"
    description: "Change method invocations to static method calls."
    options:
    - name: "fullyQualifiedTargetTypeName"
      type: "String"
      required: true
    - name: "matchOverrides"
      type: "Boolean"
      required: false
    - name: "matchUnknownTypes"
      type: "Boolean"
      required: false
    - name: "methodPattern"
      type: "String"
      required: true
    - name: "returnType"
      type: "String"
      required: false
  - name: "org.openrewrite.java.ChangeMethodTargetToVariable"
    description: "Change method invocations to method calls on a variable."
    options:
    - name: "matchOverrides"
      type: "Boolean"
      required: false
    - name: "methodPattern"
      type: "String"
      required: true
    - name: "variableName"
      type: "String"
      required: true
    - name: "variableType"
      type: "String"
      required: true
  - name: "org.openrewrite.java.ChangePackage"
    description: "A recipe that will rename a package name in package statements,\
      \ imports, and fully-qualified types."
    options:
    - name: "newPackageName"
      type: "String"
      required: true
    - name: "oldPackageName"
      type: "String"
      required: true
    - name: "recursive"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.ChangeStaticFieldToMethod"
    description: "Migrate accesses to a static field to invocations of a static method."
    options:
    - name: "newClassName"
      type: "String"
      required: false
    - name: "newMethodName"
      type: "String"
      required: true
    - name: "newTarget"
      type: "String"
      required: false
    - name: "oldClassName"
      type: "String"
      required: true
    - name: "oldFieldName"
      type: "String"
      required: true
  - name: "org.openrewrite.java.ChangeType"
    description: "Change a given type to another."
    options:
    - name: "ignoreDefinition"
      type: "Boolean"
      required: false
    - name: "newFullyQualifiedTypeName"
      type: "String"
      required: true
    - name: "oldFullyQualifiedTypeName"
      type: "String"
      required: true
  - name: "org.openrewrite.java.DeleteMethodArgument"
    description: "Delete an argument from method invocations."
    options:
    - name: "argumentIndex"
      type: "int"
      required: true
    - name: "methodPattern"
      type: "String"
      required: true
  - name: "org.openrewrite.java.DoesNotUseRewriteSkip"
    description: "The annotation provides a mechanism to skip a whole source file\
      \ from consideration"
    options: []
  - name: "org.openrewrite.java.NoStaticImport"
    description: "Removes static imports and replaces them with qualified references.\
      \ For example, `emptyList()` becomes `Collections.emptyList()`."
    options:
    - name: "methodPattern"
      type: "String"
      required: true
  - name: "org.openrewrite.java.OrderImports"
    description: "Group and order imports."
    options:
    - name: "removeUnused"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.RandomizeId"
    description: "Scramble the IDs. This was intended as a utility to test _en masse_\
      \ different techniques for UUID generation and compare their relative performance\
      \ outside of a microbenchmark."
    options: []
  - name: "org.openrewrite.java.RecipeExceptionDemonstration"
    description: "Show how recipe exceptions are rendered in various forms of OpenRewrite\
      \ tooling."
    options:
    - name: "throwOnApplicableTest"
      type: "Boolean"
      required: false
    - name: "throwOnApplicableTestVisitor"
      type: "Boolean"
      required: false
    - name: "throwOnMethodPattern"
      type: "String"
      required: false
    - name: "throwOnSingleSourceApplicableTest"
      type: "Boolean"
      required: false
    - name: "throwOnSingleSourceApplicableTestVisitor"
      type: "Boolean"
      required: false
    - name: "throwOnVisitAll"
      type: "Boolean"
      required: false
    - name: "throwOnVisitAllVisitor"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.RecipeMarkupDemonstration"
    description: "Tooling may decide to elide or display differently markup of different\
      \ levels."
    options:
    - name: "level"
      type: "String"
      required: true
  - name: "org.openrewrite.java.RemoveAnnotation"
    description: "Remove matching annotations wherever they occur."
    options:
    - name: "annotationPattern"
      type: "String"
      required: true
  - name: "org.openrewrite.java.RemoveImplements"
    description: "Removes `implements` clauses from classes implementing the specified\
      \ interface. Removes `@Overrides` annotations from methods which no longer override\
      \ anything."
    options:
    - name: "filter"
      type: "String"
      required: true
    - name: "interfaceType"
      type: "String"
      required: true
  - name: "org.openrewrite.java.RemoveObjectsIsNull"
    description: "Replace calls to `Objects.isNull(..)` and `Objects.nonNull(..)`\
      \ with a simple null check. Using these methods outside of stream predicates\
      \ is not idiomatic."
    options: []
  - name: "org.openrewrite.java.RemoveUnusedImports"
    description: "Remove imports for types that are not referenced."
    options: []
  - name: "org.openrewrite.java.ReorderMethodArguments"
    description: "Reorder method arguments into the specified order."
    options:
    - name: "ignoreDefinition"
      type: "Boolean"
      required: false
    - name: "methodPattern"
      type: "String"
      required: true
    - name: "newParameterNames"
      type: "String[]"
      required: true
    - name: "oldParameterNames"
      type: "String[]"
      required: false
  - name: "org.openrewrite.java.ReplaceConstant"
    description: "Replace a named constant with a literal value when you wish to remove\
      \ the old constant."
    options:
    - name: "constantName"
      type: "String"
      required: true
    - name: "literalValue"
      type: "String"
      required: true
    - name: "owningType"
      type: "String"
      required: true
  - name: "org.openrewrite.java.SimplifyMethodChain"
    description: "Simplify `a.b().c()` to `a.d()`."
    options:
    - name: "methodPatternChain"
      type: "List"
      required: true
    - name: "newMethodName"
      type: "String"
      required: true
  - name: "org.openrewrite.java.UpdateSourcePositions"
    description: "Calculate start position and length for every AST element."
    options: []
  - name: "org.openrewrite.java.UseStaticImport"
    description: "Removes unnecessary receiver types from static method invocations.\
      \ For example, `Collections.emptyList()` becomes `emptyList()`."
    options:
    - name: "methodPattern"
      type: "String"
      required: true
  - name: "org.openrewrite.java.cleanup.AddSerialVersionUidToSerializable"
    description: "A `serialVersionUID` field is strongly recommended in all `Serializable`\
      \ classes. If this is not defined on a `Serializable` class, the compiler will\
      \ generate this value. If a change is later made to the class, the generated\
      \ value will change and attempts to deserialize the class will fail."
    options: []
  - name: "org.openrewrite.java.cleanup.AtomicPrimitiveEqualsUsesGet"
    description: "`AtomicBoolean#equals(Object)`, `AtomicInteger#equals(Object)` and\
      \ `AtomicLong#equals(Object)` are only equal to their instance. This recipe\
      \ converts `a.equals(b)` to `a.get() == b.get()`."
    options: []
  - name: "org.openrewrite.java.cleanup.AvoidBoxedBooleanExpressions"
    description: "Under certain conditions the `java.lang.Boolean` type is used as\
      \ an expression, and it may throw a `NullPointerException` if the value is null."
    options: []
  - name: "org.openrewrite.java.cleanup.BigDecimalRoundingConstantsToEnums"
    description: "Convert `BigDecimal` rounding constants to the equivalent `RoundingMode`\
      \ enum."
    options: []
  - name: "org.openrewrite.java.cleanup.BooleanChecksNotInverted"
    description: "It is needlessly complex to invert the result of a boolean comparison.\
      \ The opposite comparison should be made instead."
    options: []
  - name: "org.openrewrite.java.cleanup.CaseInsensitiveComparisonsDoNotChangeCase"
    description: "Remove `String#toLowerCase()` or `String#toUpperCase()` from `String#equalsIgnoreCase(..)`\
      \ comparisons."
    options: []
  - name: "org.openrewrite.java.cleanup.CatchClauseOnlyRethrows"
    description: "A `catch` clause that only rethrows the caught exception is unnecessary.\
      \ Letting the exception bubble up as normal achieves the same result with less\
      \ code."
    options: []
  - name: "org.openrewrite.java.cleanup.Cleanup"
    description: "Automatically cleanup code, e.g. remove unnecessary parentheses,\
      \ simplify expressions."
    options: []
  - name: "org.openrewrite.java.cleanup.CombineSemanticallyEqualCatchBlocks"
    description: "Combine catches in a try that contain semantically equivalent blocks.\
      \ No change will be made when a caught exception exists if combing catches may\
      \ change application behavior or type attribution is missing."
    options: []
  - name: "org.openrewrite.java.cleanup.CommonStaticAnalysis"
    description: "Resolve common static analysis issues discovered through 3rd party\
      \ tools."
    options: []
  - name: "org.openrewrite.java.cleanup.CompareEnumsWithEqualityOperator"
    description: "Replaces `Enum equals(java.lang.Object)` with `Enum == java.lang.Object`.\
      \ An `!Enum equals(java.lang.Object)` will change to `!=`."
    options: []
  - name: "org.openrewrite.java.cleanup.ControlFlowIndentation"
    description: "Program flow control statements like `if`, `while`, and `for` can\
      \ omit curly braces when they apply to only a single statement. This recipe\
      \ ensures that any statements which follow that statement are correctly indented\
      \ to show they are not part of the flow control statement."
    options: []
  - name: "org.openrewrite.java.cleanup.CovariantEquals"
    description: "Checks that classes and records which define a covariant `equals()`\
      \ method also override method `equals(Object)`. Covariant `equals()` means a\
      \ method that is similar to `equals(Object)`, but with a covariant parameter\
      \ type (any subtype of `Object`)."
    options: []
  - name: "org.openrewrite.java.cleanup.DefaultComesLast"
    description: "Ensure the `default` case comes last after all the cases in a switch\
      \ statement."
    options: []
  - name: "org.openrewrite.java.cleanup.EmptyBlock"
    description: "Remove empty blocks that effectively do nothing."
    options: []
  - name: "org.openrewrite.java.cleanup.EqualsAvoidsNull"
    description: "Checks that any combination of String literals is on the left side\
      \ of an `equals()` comparison. Also checks for String literals assigned to some\
      \ field (such as `someString.equals(anotherString = \"text\"))`."
    options: []
  - name: "org.openrewrite.java.cleanup.ExplicitCharsetOnStringGetBytes"
    description: "This makes the behavior of the code platform neutral. It will not\
      \ override any existing explicit encodings, even if they don't match the default\
      \ encoding option."
    options:
    - name: "encoding"
      type: "String"
      required: false
  - name: "org.openrewrite.java.cleanup.ExplicitInitialization"
    description: "Checks if any class or object member is explicitly initialized to\
      \ default for its type value (`null` for object references, zero for numeric\
      \ types and `char` and `false` for `boolean`."
    options: []
  - name: "org.openrewrite.java.cleanup.ExplicitLambdaArgumentTypes"
    description: "Adds explicit types on lambda arguments, which are otherwise optional.\
      \ This can make the code clearer and easier to read. This does not add explicit\
      \ types on arguments when the lambda has one or two parameters and does not\
      \ have a block body, as things are considered more readable in those cases.\
      \ For example, `stream.map((a, b) -> a.length);` will not have explicit types\
      \ added."
    options: []
  - name: "org.openrewrite.java.cleanup.ExternalizableHasNoArgsConstructor"
    description: "`Externalizable` classes handle both serialization and deserialization\
      \ and must have a no-args constructor for the deserialization process."
    options: []
  - name: "org.openrewrite.java.cleanup.FallThrough"
    description: "Checks for fall-through in switch statements, adding `break` statements\
      \ in locations where a case contains Java code but does not have a `break`,\
      \ `return`, `throw`, or `continue` statement."
    options: []
  - name: "org.openrewrite.java.cleanup.FinalClass"
    description: "Adds the `final` modifier to classes that expose no public or package-private\
      \ constructors."
    options: []
  - name: "org.openrewrite.java.cleanup.FinalizeLocalVariables"
    description: "Adds the `final` modifier keyword to local variables which are not\
      \ reassigned."
    options: []
  - name: "org.openrewrite.java.cleanup.FixSerializableFields"
    description: "The fields of a class that implements `Serializable` must also implement\
      \ `Serializable` or be marked as `transient`.\n\nThis recipe will look for any\
      \ classes that directly or indirectly implement `Serializable` and for any member\
      \ fields that are not serializable it will do one of two things:\n\n- If a non-serializable\
      \ field has a type that is represented by a `SourceFile` within the same project,\
      \ that SourceFile will be changed to implement `Serializable`.\n\n- If a non-serializable\
      \ field has a type that is not represented as a `SourceFile`, the field will\
      \ be marked as `transient`\n\nNOTE: If `markAllAsTransient` is set to `true`,\
      \ this recipe will mark all non-serializable fields as `transient`.\n\nNOTE:\
      \ Any fullyQualified names listed in the `fullyQualifiedExclusions` will be\
      \ marked as transient, even if that SourceFile exists in the same project.\n\
      \nNOTE: This recipe does NOT recursively modify newly `Serilazable` classes\
      \ to cut down on the graph of SourceFiles that may be impacted during a recipe\
      \ run."
    options:
    - name: "fullyQualifiedExclusions"
      type: "List"
      required: false
    - name: "markAllAsTransient"
      type: "Boolean"
      required: true
  - name: "org.openrewrite.java.cleanup.FixStringFormatExpressions"
    description: "Fix `String#format` and `String#formatted` expressions by replacing\
      \ `\\n` newline characters with `%n` and removing any unused arguments. Note\
      \ this recipe is scoped to only transform format expressions which do not specify\
      \ the argument index."
    options: []
  - name: "org.openrewrite.java.cleanup.ForLoopControlVariablePostfixOperators"
    description: "Replace `for` loop control variables using pre-increment (`++i`)\
      \ or pre-decrement (`--i`) operators with their post-increment (`i++`) or post-decrement\
      \ (`i++`) notation equivalents."
    options: []
  - name: "org.openrewrite.java.cleanup.ForLoopIncrementInUpdate"
    description: "The increment should be moved to the loop's increment clause if\
      \ possible."
    options: []
  - name: "org.openrewrite.java.cleanup.HiddenField"
    description: "Refactor local variables or parameters which shadow a field defined\
      \ in the same class."
    options: []
  - name: "org.openrewrite.java.cleanup.HideUtilityClassConstructor"
    description: "Ensures utility classes (classes containing only static methods\
      \ or fields in their API) do not have a public constructor."
    options: []
  - name: "org.openrewrite.java.cleanup.IndexOfChecksShouldUseAStartPosition"
    description: "Replaces `indexOf(String)` in binary operations if the compared\
      \ value is an int and not less than 1."
    options: []
  - name: "org.openrewrite.java.cleanup.IndexOfReplaceableByContains"
    description: "Checking if a value is included in a `String` or `List` using `indexOf(value)>-1`\
      \ or `indexOf(value)>=0` can be replaced with `contains(value)`."
    options: []
  - name: "org.openrewrite.java.cleanup.IndexOfShouldNotCompareGreaterThanZero"
    description: "Replaces `String#indexOf(String) > 0` and `List#indexOf(Object)\
      \ > 0` with `>=1`. Checking `indexOf` against `>0` ignores the first element,\
      \ whereas `>-1` is inclusive of the first element. For clarity, `>=1` is used,\
      \ because `>0` and `>=1` are semantically equal. Using `>0` may appear to be\
      \ a mistake with the intent of including all elements. If the intent is to check\
      \ whether a value in included in a `String` or `List`, the `String#contains(String)`\
      \ or `List#contains(Object)` methods may be better options altogether."
    options: []
  - name: "org.openrewrite.java.cleanup.InlineVariable"
    description: "Inline variables when they are immediately used to return or throw."
    options: []
  - name: "org.openrewrite.java.cleanup.IsEmptyCallOnCollections"
    description: "Also check for _not_ `isEmpty()` when testing for not equal to zero\
      \ size."
    options: []
  - name: "org.openrewrite.java.cleanup.JavaApiBestPractices"
    description: "Use the Java standard library in a way that is most idiomatic."
    options: []
  - name: "org.openrewrite.java.cleanup.LambdaBlockToExpression"
    description: "Single-line statement lambdas returning a value can be replaced\
      \ with expression lambdas."
    options: []
  - name: "org.openrewrite.java.cleanup.LowercasePackage"
    description: "By convention all Java package names should contain only lowercase\
      \ letters, numbers, and dashes. This recipe converts any uppercase letters in\
      \ package names to be lowercase."
    options: []
  - name: "org.openrewrite.java.cleanup.MethodNameCasing"
    description: "Method names should comply with a naming convention."
    options:
    - name: "includeTestSources"
      type: "Boolean"
      required: false
    - name: "renamePublicMethods"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.cleanup.MethodParamPad"
    description: "Fixes whitespace padding between the identifier of a method definition\
      \ or method invocation and the left parenthesis of the parameter list. For example,\
      \ when configured to remove spacing, `someMethodInvocation (x);` becomes `someMethodInvocation(x)`."
    options: []
  - name: "org.openrewrite.java.cleanup.MinimumSwitchCases"
    description: "`switch` statements are useful when many code paths branch depending\
      \ on the value of a single expression. For just one or two code paths, the code\
      \ will be more readable with `if` statements."
    options: []
  - name: "org.openrewrite.java.cleanup.MissingOverrideAnnotation"
    description: "Adds `@Override` to methods overriding superclass methods or implementing\
      \ interface methods. Annotating methods improves readability by showing the\
      \ author's intent to override. Additionally, when annotated, the compiler will\
      \ emit an error when a signature of the overridden method does not match the\
      \ superclass method."
    options:
    - name: "ignoreAnonymousClassMethods"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.cleanup.ModifierOrder"
    description: "Modifiers should be declared in the correct order as recommended\
      \ by the JLS."
    options: []
  - name: "org.openrewrite.java.cleanup.MultipleVariableDeclarations"
    description: "Places each variable declaration in its own statement and on its\
      \ own line. Using one variable declaration per line encourages commenting and\
      \ can increase readability."
    options: []
  - name: "org.openrewrite.java.cleanup.NeedBraces"
    description: "Adds missing braces around code such as single-line `if`, `for`,\
      \ `while`, and `do-while` block bodies."
    options: []
  - name: "org.openrewrite.java.cleanup.NestedEnumsAreNotStatic"
    description: "Remove static modifier from nested enum types since they are implicitly\
      \ static."
    options: []
  - name: "org.openrewrite.java.cleanup.NewStringBuilderBufferWithCharArgument"
    description: "Instantiating a `StringBuilder` or a `StringBuffer` with a `Character`\
      \ results in the `int` representation of the character being used for the initial\
      \ size."
    options: []
  - name: "org.openrewrite.java.cleanup.NoDoubleBraceInitialization"
    description: "Replace `List`, `Map`, and `Set` double brace initialization with\
      \ an initialization block."
    options: []
  - name: "org.openrewrite.java.cleanup.NoEmptyCollectionWithRawType"
    description: "Replaces `Collections#EMPTY_..` with methods that return generic\
      \ types."
    options: []
  - name: "org.openrewrite.java.cleanup.NoEqualityInForCondition"
    description: "Testing for loop termination using an equality operator (`==` and\
      \ `!=`) is dangerous, because it could set up an infinite loop. Using a relational\
      \ operator instead makes it harder to accidentally write an infinite loop."
    options: []
  - name: "org.openrewrite.java.cleanup.NoFinalizer"
    description: "Finalizers are deprecated. Use of `finalize()` can lead to performance\
      \ issues, deadlocks, hangs, and other undesirable behavior."
    options: []
  - name: "org.openrewrite.java.cleanup.NoPrimitiveWrappersForToStringOrCompareTo"
    description: "Primitive wrappers should not be instantiated only for `#toString()`\
      \ or `#compareTo(..)` invocations."
    options: []
  - name: "org.openrewrite.java.cleanup.NoRedundantJumpStatements"
    description: "Jump statements such as return and continue let you change the default\
      \ flow of program execution, but jump statements that direct the control flow\
      \ to the original direction are just a waste of keystrokes."
    options: []
  - name: "org.openrewrite.java.cleanup.NoToStringOnStringType"
    description: "Remove unnecessary `String#toString()` invocations on objects which\
      \ are already a string."
    options: []
  - name: "org.openrewrite.java.cleanup.NoValueOfOnStringType"
    description: "Replace unnecessary `String#valueOf(..)` method invocations with\
      \ the argument directly. This occurs when the argument to `String#valueOf(arg)`\
      \ is a string literal, such as `String.valueOf(\"example\")`. Or, when the `String#valueOf(..)`\
      \ invocation is used in a concatenation, such as `\"example\" + String.valueOf(\"\
      example\")`."
    options: []
  - name: "org.openrewrite.java.cleanup.NoWhitespaceAfter"
    description: "Removes unnecessary whitespace appearing after a token. A linebreak\
      \ after a token is allowed unless `allowLineBreaks` is set to `false`, in which\
      \ case it will be removed."
    options: []
  - name: "org.openrewrite.java.cleanup.NoWhitespaceBefore"
    description: "Removes unnecessary whitespace preceding a token. A linebreak before\
      \ a token will be removed unless `allowLineBreaks` is set to `true`."
    options: []
  - name: "org.openrewrite.java.cleanup.ObjectFinalizeCallsSuper"
    description: "Overrides of `Object#finalize()` should call super."
    options: []
  - name: "org.openrewrite.java.cleanup.OperatorWrap"
    description: "Fixes line wrapping policies on operators."
    options: []
  - name: "org.openrewrite.java.cleanup.PadEmptyForLoopComponents"
    description: "Fixes padding on empty `for` loop iterators and initializers to\
      \ match Checkstyle policies."
    options: []
  - name: "org.openrewrite.java.cleanup.PrimitiveWrapperClassConstructorToValueOf"
    description: "The constructor of all primitive types has been deprecated in favor\
      \ of using the static factory method `valueOf` available for each of the primitive\
      \ type wrappers."
    options: []
  - name: "org.openrewrite.java.cleanup.RedundantFileCreation"
    description: "Remove unnecessary intermediate creations of files."
    options: []
  - name: "org.openrewrite.java.cleanup.ReferentialEqualityToObjectEquals"
    description: "Using `==` or `!=` compares object references, not the equality\
      \ of two objects. This modifies code where both sides of a binary operation\
      \ (`==` or `!=`) override `Object.equals(Object obj)` except when the comparison\
      \ is within an overridden `Object.equals(Object obj)` method declaration itself.WARNING,\
      \ The resulting transformation must be carefully reviewed since any modifications\
      \ change the programs semantics."
    options: []
  - name: "org.openrewrite.java.cleanup.RemoveCallsToSystemGc"
    description: "Removes calls to `System.gc()` and `Runtime.gc()`. When to invoke\
      \ garbage collection is best left to the JVM."
    options: []
  - name: "org.openrewrite.java.cleanup.RemoveEmptyJavaDocParameters"
    description: "Removes `@params`, `@return`, and `@throws` with no description\
      \ from JavaDocs."
    options: []
  - name: "org.openrewrite.java.cleanup.RemoveExtraSemicolons"
    description: "Optional semicolons at the end of try-with-resources are also removed."
    options: []
  - name: "org.openrewrite.java.cleanup.RemoveJavaDocAuthorTag"
    description: "Removes author tags from JavaDocs to reduce code maintenance."
    options: []
  - name: "org.openrewrite.java.cleanup.RemoveRedundantTypeCast"
    description: "Removes unnecessary type casts. Does not currently check casts in\
      \ lambdas, class constructors, and method invocations."
    options: []
  - name: "org.openrewrite.java.cleanup.RemoveUnneededAssertion"
    description: "Remove unneeded assertions like `assert true`, `assertTrue(true)`,\
      \ or `assertFalse(false)`."
    options: []
  - name: "org.openrewrite.java.cleanup.RemoveUnneededBlock"
    description: "Flatten blocks into inline statements when possible."
    options: []
  - name: "org.openrewrite.java.cleanup.RemoveUnusedLocalVariables"
    description: "If a local variable is declared but not used, it is dead code and\
      \ should be removed."
    options:
    - name: "ignoreVariablesNamed"
      type: "String[]"
      required: false
  - name: "org.openrewrite.java.cleanup.RemoveUnusedPrivateFields"
    description: "If a private field is declared but not used in the program, it can\
      \ be considered dead code and should therefore be removed."
    options: []
  - name: "org.openrewrite.java.cleanup.RemoveUnusedPrivateMethods"
    description: "`private` methods that are never executed are dead code and should\
      \ be removed."
    options: []
  - name: "org.openrewrite.java.cleanup.RenameExceptionInEmptyCatch"
    description: "Renames caught exceptions in empty catch blocks to `ignored`. `ignored`\
      \ will be incremented by 1 if a namespace conflict exists."
    options: []
  - name: "org.openrewrite.java.cleanup.RenameLocalVariablesToCamelCase"
    description: "Reformat local variable and method parameter names to camelCase\
      \ to comply with Java naming convention. The recipe will not rename variables\
      \ declared in for loop controls or catches with a single character. The first\
      \ character is set to lower case and existing capital letters are preserved.\
      \ Special characters that are allowed in java field names `$` and `_` are removed.\
      \ If a special character is removed the next valid alpha-numeric will be capitalized.\
      \ Currently, does not support renaming members of classes. The recipe will not\
      \ rename a variable if the result already exists in the class, conflicts with\
      \ a java reserved keyword, or the result is blank."
    options: []
  - name: "org.openrewrite.java.cleanup.RenameMethodsNamedHashcodeEqualOrTostring"
    description: "Methods should not be named `hashcode`, `equal`, or `tostring`.\
      \ Any of these are confusing as they appear to be intended as overridden methods\
      \ from the `Object` base class, despite being case-insensitive."
    options: []
  - name: "org.openrewrite.java.cleanup.RenamePrivateFieldsToCamelCase"
    description: "Reformat private field names to camelCase to comply with Java naming\
      \ convention. The recipe will not rename fields with default, protected or public\
      \ access modifiers.The recipe will not rename private constants.The first character\
      \ is set to lower case and existing capital letters are preserved. Special characters\
      \ that are allowed in java field names `$` and `_` are removed. If a special\
      \ character is removed the next valid alphanumeric will be capitalized. The\
      \ recipe will not rename a field if the result already exists in the class,\
      \ conflicts with a java reserved keyword, or the result is blank."
    options: []
  - name: "org.openrewrite.java.cleanup.ReplaceDuplicateStringLiterals"
    description: "Replaces `String` literals with a length of 5 or greater repeated\
      \ a minimum of 3 times. Qualified `String` literals include final Strings, method\
      \ invocations, and new class invocations. Adds a new `private static final String`\
      \ or uses an existing equivalent class field. A new variable name will be generated\
      \ based on the literal value if an existing field does not exist. The generated\
      \ name will append a numeric value to the variable name if a name already exists\
      \ in the compilation unit."
    options:
    - name: "includeTestSources"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.cleanup.ReplaceLambdaWithMethodReference"
    description: "Replaces the single statement lambdas `o -> o instanceOf X`, `o\
      \ -> (A) o`, `o -> System.out.println(o)`, `o -> o != null`, `o -> o == null`\
      \ with the equivalent method reference."
    options: []
  - name: "org.openrewrite.java.cleanup.ReplaceStackWithDeque"
    description: "From the Javadoc of `Stack`:\n> A more complete and consistent set\
      \ of LIFO stack operations is provided by the Deque interface and its implementations,\
      \ which should be used in preference to this class."
    options: []
  - name: "org.openrewrite.java.cleanup.ReplaceThreadRunWithThreadStart"
    description: "`Thread.run()` should not be called directly."
    options: []
  - name: "org.openrewrite.java.cleanup.SimplifyBooleanExpression"
    description: "Checks for over-complicated boolean expressions. Finds code like\
      \ `if (b == true)`, `b || true`, `!false`, etc."
    options: []
  - name: "org.openrewrite.java.cleanup.SimplifyBooleanReturn"
    description: "Simplifies Boolean expressions by removing redundancies, e.g.: `a\
      \ && true` simplifies to `a`."
    options: []
  - name: "org.openrewrite.java.cleanup.SimplifyCompoundStatement"
    description: "Fixes or removes useless compound statements. For example, removing\
      \ `b &= true`, and replacing `b &= false` with `b = false`."
    options: []
  - name: "org.openrewrite.java.cleanup.SimplifyConsecutiveAssignments"
    description: "Combine consecutive assignments into a single statement where possible."
    options: []
  - name: "org.openrewrite.java.cleanup.SimplifyConstantIfBranchExecution"
    description: "Checks for if expressions that are always `true` or `false` and\
      \ simplifies them."
    options: []
  - name: "org.openrewrite.java.cleanup.StaticMethodNotFinal"
    description: "Static methods do not need to be declared final because they cannot\
      \ be overridden."
    options: []
  - name: "org.openrewrite.java.cleanup.StringLiteralEquality"
    description: "`String.equals()` should be used when checking value equality on\
      \ String literals. Using `==` or `!=` compares object references, not the actual\
      \ value of the Strings. This only modifies code where at least one side of the\
      \ binary operation (`==` or `!=`) is a String literal, such as `\"someString\"\
      \ == someVariable;`. This is to prevent inadvertently changing code where referential\
      \ equality is the user's intent."
    options: []
  - name: "org.openrewrite.java.cleanup.TypecastParenPad"
    description: "Fixes whitespace padding between a typecast type identifier and\
      \ the enclosing left and right parenthesis. For example, when configured to\
      \ remove spacing, `( int ) 0L;` becomes `(int) 0L;`."
    options: []
  - name: "org.openrewrite.java.cleanup.UnnecessaryCatch"
    description: "A refactoring operation may result in a checked exception that is\
      \ no longer thrown from a `try` block. This recipe will find and remove unnecessary\
      \ catch blocks."
    options: []
  - name: "org.openrewrite.java.cleanup.UnnecessaryCloseInTryWithResources"
    description: "Remove unnecessary `AutoCloseable#close()` statements in try-with-resources."
    options: []
  - name: "org.openrewrite.java.cleanup.UnnecessaryExplicitTypeArguments"
    description: "When explicit type arguments are inferrable by the compiler, they\
      \ may be removed."
    options: []
  - name: "org.openrewrite.java.cleanup.UnnecessaryParentheses"
    description: "Removes unnecessary parentheses from code where extra parentheses\
      \ pairs are redundant."
    options: []
  - name: "org.openrewrite.java.cleanup.UnnecessaryPrimitiveAnnotations"
    description: "Remove `@Nullable` and `@CheckForNull` annotations from primitives\
      \ since they can't be null."
    options: []
  - name: "org.openrewrite.java.cleanup.UnnecessaryThrows"
    description: "Remove unnecessary `throws` declarations. This recipe will only\
      \ remove unused, checked exception if:\n\n- The declaring class or the method\
      \ declaration is `final`.\n- The method declaration is `static` or `private`.\n\
      - If the method overriding a method declaration in a super class and the super\
      \ does not throw the exception.\n- If the method is `public` or `protected`\
      \ and the exception is not documented via a JavaDoc as a `@throws` tag."
    options: []
  - name: "org.openrewrite.java.cleanup.UnwrapRepeatableAnnotations"
    description: "Java 8 introduced the concept of `@Repeatable` annotations, making\
      \ the wrapper annotation unnecessary."
    options: []
  - name: "org.openrewrite.java.cleanup.UpperCaseLiteralSuffixes"
    description: "Using upper case literal suffixes for declaring literals is less\
      \ ambiguous, e.g., `1l` versus `1L`."
    options: []
  - name: "org.openrewrite.java.cleanup.UseAsBuilder"
    description: "When an API has been designed as a builder, use it that way rather\
      \ than as a series of setter calls."
    options:
    - name: "builderCreator"
      type: "String"
      required: false
    - name: "builderType"
      type: "String"
      required: true
    - name: "immutable"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.cleanup.UseCollectionInterfaces"
    description: "Use `Deque`, `List`, `Map`, `ConcurrentMap`, `Queue`, and `Set`\
      \ instead of implemented collections. Replaces the return type of public method\
      \ declarations and the variable type public variable declarations."
    options: []
  - name: "org.openrewrite.java.cleanup.UseDiamondOperator"
    description: "The diamond operator (`<>`) should be used. Java 7 introduced the\
      \ diamond operator (<>) to reduce the verbosity of generics code. For instance,\
      \ instead of having to declare a List's type in both its declaration and its\
      \ constructor, you can now simplify the constructor declaration with `<>`, and\
      \ the compiler will infer the type."
    options: []
  - name: "org.openrewrite.java.cleanup.UseForEachRemoveInsteadOfSetRemoveAll"
    description: "Using `java.util.Collection#forEach(Set::remove)` rather than `java.util.Set#removeAll(java.util.Collection)`\
      \ may improve performance due to a possible O(n^2) complexity."
    options: []
  - name: "org.openrewrite.java.cleanup.UseJavaStyleArrayDeclarations"
    description: "Change C-Style array declarations `int i[];` to `int[] i;`."
    options: []
  - name: "org.openrewrite.java.cleanup.UseLambdaForFunctionalInterface"
    description: "Instead of anonymous class declarations, use a lambda where possible."
    options: []
  - name: "org.openrewrite.java.cleanup.UseListSort"
    description: "The `java.util.Collections#sort(..)` implementation defers to the\
      \ `java.util.List#sort(Comparator)`, replaced it with the `java.util.List#sort(Comparator)`\
      \ implementation for better readability."
    options: []
  - name: "org.openrewrite.java.cleanup.UseMapContainsKey"
    description: "`map.keySet().contains(a)` can be simplified to `map.containsKey(a)`."
    options: []
  - name: "org.openrewrite.java.cleanup.UseStandardCharset"
    description: "Replaces `Charset.forName(java.lang.String)` with the equivalent\
      \ `StandardCharset` constant."
    options: []
  - name: "org.openrewrite.java.cleanup.UseStringReplace"
    description: "When `String::replaceAll` is used, the first argument should be\
      \ a real regular expression. If it’s not the case, `String::replace` does exactly\
      \ the same thing as `String::replaceAll` without the performance drawback of\
      \ the regex."
    options: []
  - name: "org.openrewrite.java.cleanup.WhileInsteadOfFor"
    description: "When only the condition expression is defined in a for loop, and\
      \ the initialization and increment expressions are missing, a while loop should\
      \ be used instead to increase readability."
    options: []
  - name: "org.openrewrite.java.cleanup.WriteOctalValuesAsDecimal"
    description: "Developers may not recognize octal values as such, mistaking them\
      \ instead for decimal values."
    options: []
  - name: "org.openrewrite.java.controlflow.ControlFlowVisualization"
    description: "Visualize the control flow of a Java program."
    options:
    - name: "includeDotfile"
      type: "boolean"
      required: true
  - name: "org.openrewrite.java.format.AutoFormat"
    description: "Format Java code using a standard comprehensive set of Java formatting\
      \ recipes."
    options: []
  - name: "org.openrewrite.java.format.BlankLines"
    description: "Add and/or remove blank lines."
    options: []
  - name: "org.openrewrite.java.format.EmptyNewlineAtEndOfFile"
    description: "Some tools work better when files end with an empty line."
    options: []
  - name: "org.openrewrite.java.format.NormalizeFormat"
    description: "Move whitespace to the outermost AST element possible."
    options: []
  - name: "org.openrewrite.java.format.NormalizeLineBreaks"
    description: "Consistently use either Windows style (CRLF) or Linux style (LF)\
      \ line breaks. If no `GeneralFormatStyle` is specified this will use whichever\
      \ style of line endings are more common."
    options: []
  - name: "org.openrewrite.java.format.NormalizeTabsOrSpaces"
    description: "Consistently use either tabs or spaces in indentation."
    options: []
  - name: "org.openrewrite.java.format.RemoveTrailingWhitespace"
    description: "Remove any extra trailing whitespace from the end of each line."
    options: []
  - name: "org.openrewrite.java.format.SingleLineComments"
    description: "Write `// hi` instead of `//hi`."
    options: []
  - name: "org.openrewrite.java.format.Spaces"
    description: "Format whitespace in Java code."
    options: []
  - name: "org.openrewrite.java.format.TabsAndIndents"
    description: "Format tabs and indents in Java code."
    options: []
  - name: "org.openrewrite.java.format.WrappingAndBraces"
    description: "Format line wraps and braces in Java code."
    options: []
  - name: "org.openrewrite.java.recipes.ExecutionContextParameterName"
    description: "Visitors that are parameterized with `ExecutionContext` should use\
      \ the parameter name `ctx`."
    options: []
  - name: "org.openrewrite.java.recipes.PublicGetVisitor"
    description: "It would be a breaking API change to increase the visibility of\
      \ the method by default, but any recipe can increase visibility of the `Recipe`\
      \ class. Making them public makes recipes easier to use in other recipes in\
      \ unexpected ways."
    options: []
  - name: "org.openrewrite.java.recipes.SetDefaultEstimatedEffortPerOccurrence"
    description: "Retrofit recipes with a deafult estimated effort per occurrence."
    options: []
  - name: "org.openrewrite.java.search.FindAnnotations"
    description: "Find all annotations matching the annotation pattern."
    options:
    - name: "annotationPattern"
      type: "String"
      required: true
    - name: "matchMetaAnnotations"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.search.FindDeprecatedClasses"
    description: "Find uses of deprecated classes, optionally ignoring those classes\
      \ that are inside deprecated scopes."
    options:
    - name: "ignoreDeprecatedScopes"
      type: "Boolean"
      required: false
    - name: "matchInherited"
      type: "Boolean"
      required: false
    - name: "typePattern"
      type: "String"
      required: false
  - name: "org.openrewrite.java.search.FindDeprecatedFields"
    description: "Find uses of deprecated fields in any API."
    options:
    - name: "ignoreDeprecatedScopes"
      type: "Boolean"
      required: false
    - name: "typePattern"
      type: "String"
      required: false
  - name: "org.openrewrite.java.search.FindDeprecatedMethods"
    description: "Find uses of deprecated methods in any API."
    options:
    - name: "ignoreDeprecatedScopes"
      type: "Boolean"
      required: false
    - name: "methodPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.java.search.FindDeprecatedUses"
    description: "Find deprecated uses of methods, fields, and types. Optionally ignore\
      \ those classes that are inside deprecated scopes."
    options:
    - name: "ignoreDeprecatedScopes"
      type: "Boolean"
      required: false
    - name: "matchInherited"
      type: "Boolean"
      required: false
    - name: "typePattern"
      type: "String"
      required: false
  - name: "org.openrewrite.java.search.FindEmptyClasses"
    description: "Find empty classes without annotations that do not implement an\
      \ interface or extend a class."
    options: []
  - name: "org.openrewrite.java.search.FindEmptyMethods"
    description: "Find methods with empty bodies and single public no arg constructors."
    options:
    - name: "matchOverrides"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.search.FindFields"
    description: "Find uses of a field."
    options:
    - name: "fieldName"
      type: "String"
      required: true
    - name: "fullyQualifiedTypeName"
      type: "String"
      required: true
  - name: "org.openrewrite.java.search.FindFieldsOfType"
    description: "Finds declared fields matching a particular class name."
    options:
    - name: "fullyQualifiedTypeName"
      type: "String"
      required: true
  - name: "org.openrewrite.java.search.FindFlowBetweenMethods"
    description: "Takes two patterns for the start/end methods to find flow between."
    options:
    - name: "endMatchOverrides"
      type: "Boolean"
      required: false
    - name: "endMethodPattern"
      type: "String"
      required: true
    - name: "flow"
      type: "String"
      required: true
    - name: "startMatchOverrides"
      type: "Boolean"
      required: false
    - name: "startMethodPattern"
      type: "String"
      required: true
    - name: "target"
      type: "String"
      required: true
  - name: "org.openrewrite.java.search.FindImports"
    description: "Locates source files that have imports matching the given type pattern,\
      \ regardless of whether that import is used in the code."
    options:
    - name: "typePattern"
      type: "String"
      required: false
  - name: "org.openrewrite.java.search.FindLiterals"
    description: "Find literals matching a pattern."
    options:
    - name: "pattern"
      type: "String"
      required: true
  - name: "org.openrewrite.java.search.FindMethods"
    description: "Find method usages by pattern."
    options:
    - name: "flow"
      type: "String"
      required: false
    - name: "matchOverrides"
      type: "Boolean"
      required: false
    - name: "methodPattern"
      type: "String"
      required: true
  - name: "org.openrewrite.java.search.FindMissingTypes"
    description: "This is a diagnostic recipe to highlight where ASTs are missing\
      \ type attribution information."
    options: []
  - name: "org.openrewrite.java.search.FindRepeatableAnnotations"
    description: "Java 8 introduced the concept of `@Repeatable` annotations."
    options: []
  - name: "org.openrewrite.java.search.FindSecrets"
    description: "Find secrets stored in plain text in code."
    options: []
  - name: "org.openrewrite.java.search.FindText"
    description: "Find occurrences of regular expression based patterns in comments\
      \ and literals."
    options:
    - name: "patterns"
      type: "List"
      required: true
  - name: "org.openrewrite.java.search.FindTypes"
    description: "Find type references by name."
    options:
    - name: "checkAssignability"
      type: "Boolean"
      required: false
    - name: "fullyQualifiedTypeName"
      type: "String"
      required: true
  - name: "org.openrewrite.java.search.PotentiallyDeadCode"
    description: "Method definitions that are defined in this project and aren't used."
    options: []
  - name: "org.openrewrite.java.search.ResultOfMethodCallIgnored"
    description: "Find locations where the result of the method call is being ignored."
    options:
    - name: "methodPattern"
      type: "String"
      required: true
  - name: "org.openrewrite.java.search.UriCreatedWithHttpScheme"
    description: "This is a sample recipe demonstrating a simple application of local\
      \ data flow analysis."
    options: []
- artifactId: "rewrite-java-security"
  version: "1.18.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.java.security.FindTextDirectionChanges"
    description: "Finds unicode control characters which can change the direction\
      \ text is displayed in. These control characters can alter how source code is\
      \ presented to a human reader without affecting its interpretation by tools\
      \ like compilers. So a malicious patch could pass code review while introducing\
      \ vulnerabilities. Note that text direction-changing unicode control characters\
      \ aren't inherently malicious. These characters can appear for legitimate reasons\
      \ in code written in or dealing with right-to-left languages. See: https://trojansource.codes/"
    options: []
  - name: "org.openrewrite.java.security.JavaSecurityBestPractices"
    description: "Applies security best practices to Java code."
    options: []
  - name: "org.openrewrite.java.security.PartialPathTraversalVulnerability"
    description: "Replaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath()`,\
      \ which is vulnerable to partial path traversal attacks, with the more secure\
      \ `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.\n\
      \nTo demonstrate this vulnerability, consider `\"/usr/outnot\".startsWith(\"\
      /usr/out\")`. The check is bypassed although `/outnot` is not under the `/out`\
      \ directory. It's important to understand that the terminating slash may be\
      \ removed when using various `String` representations of the `File` object.\
      \ For example, on Linux, `println(new File(\"/var\"))` will print `/var`, but\
      \ `println(new File(\"/var\", \"/\")` will print `/var/`; however, `println(new\
      \ File(\"/var\", \"/\").getCanonicalPath())` will print `/var`."
    options: []
  - name: "org.openrewrite.java.security.RegularExpressionDenialOfService"
    description: ""
    options: []
  - name: "org.openrewrite.java.security.SecureRandom"
    description: "Use cryptographically secure Pseudo Random Number Generation in\
      \ the \"main\" source set. Replaces instantiation of `java.util.Random` with\
      \ `java.security.SecureRandom`."
    options: []
  - name: "org.openrewrite.java.security.SecureRandomPrefersDefaultSeed"
    description: "Remove `SecureRandom#setSeed(*)` method invocations having constant\
      \ or predictable arguments."
    options: []
  - name: "org.openrewrite.java.security.SecureTempFileCreation"
    description: "`java.io.File.createTempFile()` has exploitable default file permissions.\
      \ This recipe migrates to the more secure `java.nio.file.Files.createTempFile()`."
    options: []
  - name: "org.openrewrite.java.security.UseFilesCreateTempDirectory"
    description: "Use `Files#createTempDirectory` when the sequence `File#createTempFile(..)`->`File#delete()`->`File#mkdir()`\
      \ is used for creating a temp directory."
    options: []
  - name: "org.openrewrite.java.security.XmlParserXXEVulnerability"
    description: "Avoid exposing dangerous features of the XML parser by setting XMLInputFactory\
      \ `IS_SUPPORTING_EXTERNAL_ENTITIES` and `SUPPORT_DTD` properties to `false`."
    options: []
  - name: "org.openrewrite.java.security.ZipSlip"
    description: "Zip slip is an arbitrary file overwrite critical vulnerability,\
      \ which typically results in remote command execution. A fuller description\
      \ of this vulnerability is available in the [Snyk documentation](https://snyk.io/research/zip-slip-vulnerability)\
      \ on it."
    options:
    - name: "debug"
      type: "boolean"
      required: true
  - name: "org.openrewrite.java.security.marshalling.SecureJacksonDefaultTyping"
    description: "See the [blog post](https://cowtowncoder.medium.com/on-jackson-cves-dont-panic-here-is-what-you-need-to-know-54cd0d6e8062)\
      \ on this subject."
    options: []
  - name: "org.openrewrite.java.security.marshalling.SecureSnakeYamlConstructor"
    description: "See the [paper](https://github.com/mbechler/marshalsec) on this\
      \ subject."
    options: []
  - name: "org.openrewrite.java.security.search.FindJacksonDefaultTypeMapping"
    description: "`ObjectMapper#enableTypeMapping(..)` can lead to vulnerable deserialization."
    options: []
  - name: "org.openrewrite.java.security.search.FindVulnerableJacksonJsonTypeInfo"
    description: "Identify where attackers can deserialize gadgets into a target field."
    options: []
  - name: "org.openrewrite.java.security.spring.CsrfProtection"
    description: "Cross-Site Request Forgery (CSRF) is a type of attack that occurs\
      \ when a malicious web site, email, blog, instant message, or program causes\
      \ a user's web browser to perform an unwanted action on a trusted site when\
      \ the user is authenticated. See the full [OWASP cheatsheet](https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html)."
    options:
    - name: "onlyIfSecurityConfig"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.security.spring.PreventClickjacking"
    description: "The `frame-ancestors` directive can be used in a Content-Security-Policy\
      \ HTTP response header to indicate whether or not a browser should be allowed\
      \ to render a page in a `<frame>` or `<iframe>`. Sites can use this to avoid\
      \ Clickjacking attacks by ensuring that their content is not embedded into other\
      \ sites."
    options:
    - name: "onlyIfSecurityConfig"
      type: "Boolean"
      required: false
- artifactId: "rewrite-jhipster"
  version: "1.13.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.java.jhipster.FixCwe338"
    description: "Use a cryptographically strong pseudo-random number generator (PRNG)."
    options: []
- artifactId: "rewrite-json"
  version: "7.32.1"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.json.ChangeKey"
    description: "Change a JSON mapping entry key leaving the value intact."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "newKey"
      type: "String"
      required: true
    - name: "oldKeyPath"
      type: "String"
      required: true
  - name: "org.openrewrite.json.ChangeValue"
    description: "Change a JSON mapping entry value leaving the key intact."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "oldKeyPath"
      type: "String"
      required: true
    - name: "value"
      type: "String"
      required: true
  - name: "org.openrewrite.json.DeleteKey"
    description: "Delete a JSON mapping entry key."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "keyPath"
      type: "String"
      required: true
  - name: "org.openrewrite.json.search.FindKey"
    description: "Find JSON object members by JsonPath expression."
    options:
    - name: "key"
      type: "String"
      required: true
- artifactId: "rewrite-kubernetes"
  version: "1.24.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.kubernetes.AddConfiguration"
    description: "Add default required configuration when it is missing."
    options:
    - name: "apiVersion"
      type: "String"
      required: false
    - name: "configurationPath"
      type: "String"
      required: true
    - name: "resourceKind"
      type: "String"
      required: true
    - name: "value"
      type: "String"
      required: true
  - name: "org.openrewrite.kubernetes.ImagePullPolicyAlways"
    description: "Ensures the latest version of a tag is deployed each time."
    options: []
  - name: "org.openrewrite.kubernetes.KubernetesBestPractices"
    description: "Applies best practices to Kubernetes manifests."
    options: []
  - name: "org.openrewrite.kubernetes.LifecycleRuleOnStorageBucket"
    description: "When defining a rule, you can specify any set of conditions for\
      \ any action. The following configuration defines a rule to delete all objects\
      \ older than 7 days in a bucket."
    options: []
  - name: "org.openrewrite.kubernetes.LimitContainerCapabilities"
    description: "Limiting the admission of containers with capabilities ensures that\
      \ only a small number of containers have extended capabilities outside the default\
      \ range."
    options: []
  - name: "org.openrewrite.kubernetes.MissingCpuLimits"
    description: "A system without managed quotas could eventually collapse due to\
      \ inadequate resources for the tasks it bares."
    options: []
  - name: "org.openrewrite.kubernetes.MissingCpuRequest"
    description: "If a container is created in a namespace that has a default CPU\
      \ limit, and the container does not specify its own CPU limit, then the container\
      \ is assigned the default CPU limit."
    options: []
  - name: "org.openrewrite.kubernetes.MissingMemoryLimits"
    description: "With no limit set, kubectl allocates more and more memory to the\
      \ container until it runs out."
    options: []
  - name: "org.openrewrite.kubernetes.MissingMemoryRequest"
    description: "A container is guaranteed to have as much memory as it requests,\
      \ but is not allowed to use more memory than the limit set. This configuration\
      \ may save resources and prevent an attack on an exploited container."
    options: []
  - name: "org.openrewrite.kubernetes.MissingPodLivenessProbe"
    description: "The kubelet uses liveness probes to know when to schedule restarts\
      \ for containers. Restarting a container in a deadlock state can help to make\
      \ the application more available, despite bugs."
    options: []
  - name: "org.openrewrite.kubernetes.MissingPodReadinessProbe"
    description: "Using the Readiness Probe ensures teams define what actions need\
      \ to be taken to prevent failure and ensure recovery in case of unexpected errors."
    options: []
  - name: "org.openrewrite.kubernetes.NoHostIPCSharing"
    description: "Preventing sharing of host PID/IPC namespace, networking, and ports\
      \ ensures proper isolation between Docker containers and the underlying host."
    options: []
  - name: "org.openrewrite.kubernetes.NoHostNetworkSharing"
    description: "When using the host network mode for a container, that container’\
      s network stack is not isolated from the Docker host, so the container shares\
      \ the host’s networking namespace and does not get its own IP-address allocation."
    options: []
  - name: "org.openrewrite.kubernetes.NoHostProcessIdSharing"
    description: "Sharing the host process ID namespace breaks the isolation between\
      \ container images and can make processes visible to other containers in the\
      \ pod. This includes all information in the /proc directory, which can sometimes\
      \ include passwords or keys, passed as environment variables."
    options: []
  - name: "org.openrewrite.kubernetes.NoPrivilegeEscalation"
    description: "Does not allow a process to gain more privileges than its parent\
      \ process."
    options: []
  - name: "org.openrewrite.kubernetes.NoPrivilegedContainers"
    description: "Privileged containers are containers that have all of the root capabilities\
      \ of a host machine, allowing access to resources that are not accessible in\
      \ ordinary containers."
    options: []
  - name: "org.openrewrite.kubernetes.NoRootContainers"
    description: "Containers that run as root frequently have more permissions than\
      \ their workload requires which, in case of compromise, could help an attacker\
      \ further their exploits."
    options: []
  - name: "org.openrewrite.kubernetes.ReadOnlyRootFilesystem"
    description: "Using an immutable root filesystem and a verified boot mechanism\
      \ prevents against attackers from \"owning\" the machine through permanent local\
      \ changes."
    options: []
  - name: "org.openrewrite.kubernetes.UpdateContainerImageName"
    description: "Search for image names that match patterns and replace the components\
      \ of the name with new values."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "imageToFind"
      type: "String"
      required: true
    - name: "imageToUpdate"
      type: "String"
      required: false
    - name: "includeInitContainers"
      type: "boolean"
      required: false
    - name: "repoToFind"
      type: "String"
      required: false
    - name: "repoToUpdate"
      type: "String"
      required: false
    - name: "tagToFind"
      type: "String"
      required: false
    - name: "tagToUpdate"
      type: "String"
      required: false
  - name: "org.openrewrite.kubernetes.rbac.AddRuleToRole"
    description: "Add RBAC rules to ClusterRoles or namespaced Roles."
    options:
    - name: "apiGroups"
      type: "Set"
      required: true
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "rbacResourceName"
      type: "String"
      required: true
    - name: "rbacResourceType"
      type: "String"
      required: true
    - name: "resourceNames"
      type: "Set"
      required: false
    - name: "resources"
      type: "Set"
      required: true
    - name: "verbs"
      type: "Set"
      required: true
  - name: "org.openrewrite.kubernetes.resource.CapResourceValueToMaximum"
    description: "Cap resource values that exceed a specific maximum."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "resourceLimit"
      type: "String"
      required: true
    - name: "resourceType"
      type: "String"
      required: true
    - name: "resourceValueType"
      type: "String"
      required: true
  - name: "org.openrewrite.kubernetes.resource.FindExceedsResourceRatio"
    description: "Find resource manifests that have requests to limits ratios beyond\
      \ a specific maximum."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "ratioLimit"
      type: "String"
      required: true
    - name: "resourceType"
      type: "String"
      required: true
  - name: "org.openrewrite.kubernetes.resource.FindExceedsResourceValue"
    description: "Find resource manifests that have limits set beyond a specific maximum."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "resourceLimit"
      type: "String"
      required: true
    - name: "resourceType"
      type: "String"
      required: true
    - name: "resourceValueType"
      type: "String"
      required: true
  - name: "org.openrewrite.kubernetes.search.FindAnnotation"
    description: "Find annotations that optionally match a given regex."
    options:
    - name: "annotationName"
      type: "String"
      required: true
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "value"
      type: "String"
      required: false
  - name: "org.openrewrite.kubernetes.search.FindDisallowedImageTags"
    description: "The set of image tags to find which are considered disallowed."
    options:
    - name: "disallowedTags"
      type: "Set"
      required: true
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "includeInitContainers"
      type: "boolean"
      required: false
  - name: "org.openrewrite.kubernetes.search.FindImage"
    description: "The image name to search for in containers and initContainers."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "imageName"
      type: "String"
      required: true
    - name: "imageTag"
      type: "String"
      required: false
    - name: "includeInitContainers"
      type: "boolean"
      required: false
    - name: "repository"
      type: "String"
      required: false
  - name: "org.openrewrite.kubernetes.search.FindMissingDigest"
    description: "Find instances of a container name that fails to specify a digest."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "includeInitContainers"
      type: "boolean"
      required: false
  - name: "org.openrewrite.kubernetes.search.FindMissingOrInvalidAnnotation"
    description: "Find annotations that optionally match a given value."
    options:
    - name: "annotationName"
      type: "String"
      required: true
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "value"
      type: "String"
      required: false
  - name: "org.openrewrite.kubernetes.search.FindMissingOrInvalidLabel"
    description: "Find labels that optionally match a given regex."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "labelName"
      type: "String"
      required: true
    - name: "value"
      type: "String"
      required: false
  - name: "org.openrewrite.kubernetes.search.FindNonTlsIngress"
    description: "Find Ingress resources that don't disallow HTTP or don't have TLS\
      \ configured."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
  - name: "org.openrewrite.kubernetes.search.FindResourceMissingConfiguration"
    description: "Find Kubernetes resources with missing configuration."
    options:
    - name: "configurationPath"
      type: "String"
      required: true
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "resourceKind"
      type: "String"
      required: false
  - name: "org.openrewrite.kubernetes.services.FindServiceExternalIPs"
    description: "Find any `Service` whose `externalIP` list contains, or does not\
      \ contain, one of a list of IPs."
    options:
    - name: "externalIPs"
      type: "Set"
      required: true
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "findMissing"
      type: "boolean"
      required: false
  - name: "org.openrewrite.kubernetes.services.FindServicesByType"
    description: "Type of Kubernetes `Service` to find."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "serviceType"
      type: "String"
      required: true
  - name: "org.openrewrite.kubernetes.services.UpdateServiceExternalIP"
    description: "Swap out an IP address with another one in `Service` `externalIP`\
      \ settings."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "ipToFind"
      type: "String"
      required: true
    - name: "ipToUpdate"
      type: "String"
      required: true
- artifactId: "rewrite-logging-frameworks"
  version: "1.14.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.java.logging.ParameterizedLogging"
    description: "Transform logging statements using concatenation for messages and\
      \ variables into a parameterized format. For example, `logger.info(\"hi \" +\
      \ userName)` becomes `logger.info(\"hi {}\", userName)`."
    options:
    - name: "methodPattern"
      type: "String"
      required: true
  - name: "org.openrewrite.java.logging.PrintStackTraceToLogError"
    description: "When a logger is present, log exceptions rather than calling `printStackTrace()`."
    options:
    - name: "addLogger"
      type: "Boolean"
      required: false
    - name: "loggerName"
      type: "String"
      required: false
    - name: "loggingFramework"
      type: "String"
      required: false
  - name: "org.openrewrite.java.logging.SystemErrToLogging"
    description: "Replace `System.err` print statements with a logger."
    options:
    - name: "addLogger"
      type: "Boolean"
      required: false
    - name: "loggerName"
      type: "String"
      required: false
    - name: "loggingFramework"
      type: "String"
      required: false
  - name: "org.openrewrite.java.logging.SystemOutToLogging"
    description: "Replace `System.out` print statements with a logger."
    options:
    - name: "addLogger"
      type: "Boolean"
      required: false
    - name: "level"
      type: "String"
      required: false
    - name: "loggerName"
      type: "String"
      required: false
    - name: "loggingFramework"
      type: "String"
      required: false
  - name: "org.openrewrite.java.logging.SystemPrintToLogging"
    description: "Replace `System.out` and `System.err` print statements with a logger."
    options:
    - name: "addLogger"
      type: "Boolean"
      required: false
    - name: "level"
      type: "String"
      required: false
    - name: "loggerName"
      type: "String"
      required: false
    - name: "loggingFramework"
      type: "String"
      required: false
  - name: "org.openrewrite.java.logging.log4j.Log4j1ToLog4j2"
    description: "Migrates Log4j 1.x to Log4j 2.x."
    options: []
  - name: "org.openrewrite.java.logging.log4j.ParameterizedLogging"
    description: "Log4j 2.x supports parameterized logging, which can significantly\
      \ boost logging performance for disabled logging statements."
    options: []
  - name: "org.openrewrite.java.logging.log4j.PrependRandomName"
    description: "To make finding the callsite of a logging statement easier in code\
      \ search."
    options: []
  - name: "org.openrewrite.java.logging.logback.Log4jAppenderToLogback"
    description: "Migrates custom Log4j 2.x Appender components to `logback-classic`.\
      \ This recipe operates on the following assumptions: 1.) The contents of the\
      \ `append()` method remains unchanged. 2.) The `requiresLayout()` method is\
      \ not used in logback and can be removed. 3.) In logback, the `stop()` method\
      \ is the equivalent of log4j's close() method. For more details, see this page\
      \ from logback: [`Migration from log4j`](http://logback.qos.ch/manual/migrationFromLog4j.html)."
    options: []
  - name: "org.openrewrite.java.logging.logback.Log4jLayoutToLogback"
    description: "Migrates custom Log4j 2.x Layout components to `logback-classic`.\
      \ This recipe operates on the following assumptions: 1.) A logback-classic layout\
      \ must extend the `LayoutBase<ILoggingEvent>` class. 2.) log4j's `format()`\
      \ is renamed to `doLayout()` in a logback-classic layout. 3.) LoggingEvent `getRenderedMessage()`\
      \ is converted to LoggingEvent `getMessage()`. 4.) The log4j ignoresThrowable()\
      \ method is not needed and has no equivalent in logback-classic. 5.) The activateOptions()\
      \ method merits further discussion. In log4j, a layout will have its activateOptions()\
      \ method invoked by log4j configurators, that is PropertyConfigurator or DOMConfigurator\
      \ just after all the options of the layout have been set. Thus, the layout will\
      \ have an opportunity to check that its options are coherent and if so, proceed\
      \ to fully initialize itself. 6.) In logback-classic, layouts must implement\
      \ the LifeCycle interface which includes a method called start(). The start()\
      \ method is the equivalent of log4j's activateOptions() method. For more details,\
      \ see this page from logback: [`Migration from log4j`](http://logback.qos.ch/manual/migrationFromLog4j.html)."
    options: []
  - name: "org.openrewrite.java.logging.logback.Log4jToLogback"
    description: "Migrates usage of Apache Log4j 2.x to using `logback` as an SLF4J\
      \ implementation directly. Note, this currently does not modify `log4j.properties`\
      \ files."
    options: []
  - name: "org.openrewrite.java.logging.slf4j.ConvertLogMessageMessageOnlyToLogMessageAndThrowable"
    description: "Convert `Logger#error|warn(throwable#message)` to `Logger#error|warn(<log-message>,\
      \ e)` invocations having only the error's message as the parameter, to a log\
      \ statement with message and throwable"
    options:
    - name: "logMessage"
      type: "String"
      required: false
  - name: "org.openrewrite.java.logging.slf4j.Log4j1ToSlf4j1"
    description: "Transforms usages of Log4j 1.x to leveraging SLF4J 1.x directly.\
      \ Note, this currently does not modify `log4j.properties` files."
    options: []
  - name: "org.openrewrite.java.logging.slf4j.Log4j2ToSlf4j1"
    description: "Transforms usages of Log4j 2.x to leveraging SLF4J 1.x directly.\
      \ Note, this currently does not modify `log4j.properties` files."
    options: []
  - name: "org.openrewrite.java.logging.slf4j.Log4jToSlf4j"
    description: "Migrates usage of Apache Log4j to using SLF4J directly. Use of the\
      \ traditional Log4j to SLF4J bridge can result in loss of performance, as the\
      \ Log4j messages must be formatted before they can be passed to SLF4J. Note,\
      \ this currently does not modify `log4j.properties` files."
    options: []
  - name: "org.openrewrite.java.logging.slf4j.LoggersNamedForEnclosingClass"
    description: "Ensure `LoggerFactory#getLogger(Class)` is called with the enclosing\
      \ class as argument."
    options: []
  - name: "org.openrewrite.java.logging.slf4j.ParameterizedLogging"
    description: "SLF4J supports parameterized logging, which can significantly boost\
      \ logging performance for disabled logging statements."
    options: []
  - name: "org.openrewrite.java.logging.slf4j.Slf4jLogShouldBeConstant"
    description: "Logging statements shouldn't begin with `String#format`, calls to\
      \ `toString()`, etc."
    options: []
- artifactId: "rewrite-maven"
  version: "7.32.1"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.maven.AddCommentToMavenDependency"
    description: "Adds a comment as the first element in a `Maven` dependency."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "commentText"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "xPath"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.AddDependency"
    description: "Add a maven dependency to a `pom.xml` file in the correct scope\
      \ based on where it is used."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "classifier"
      type: "String"
      required: false
    - name: "familyPattern"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
    - name: "onlyIfUsing"
      type: "String"
      required: true
    - name: "optional"
      type: "Boolean"
      required: false
    - name: "releasesOnly"
      type: "Boolean"
      required: false
    - name: "scope"
      type: "String"
      required: false
    - name: "type"
      type: "String"
      required: false
    - name: "version"
      type: "String"
      required: true
    - name: "versionPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.AddManagedDependency"
    description: "Add a managed maven dependency to a pom.xml file."
    options:
    - name: "addToRootPom"
      type: "Boolean"
      required: false
    - name: "artifactId"
      type: "String"
      required: true
    - name: "classifier"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
    - name: "onlyIfUsing"
      type: "String"
      required: false
    - name: "releasesOnly"
      type: "Boolean"
      required: false
    - name: "scope"
      type: "String"
      required: false
    - name: "type"
      type: "String"
      required: false
    - name: "version"
      type: "String"
      required: true
    - name: "versionPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.AddPlugin"
    description: "Add the specified Maven plugin to the pom.xml."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "configuration"
      type: "String"
      required: false
    - name: "dependencies"
      type: "String"
      required: false
    - name: "executions"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
    - name: "version"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.AddPluginDependency"
    description: "Adds the specified dependencies to a Maven plugin. Will not add\
      \ the plugin if it does not already exist in the pom."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "pluginArtifactId"
      type: "String"
      required: true
    - name: "pluginGroupId"
      type: "String"
      required: true
    - name: "version"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.AddProperty"
    description: "Add a new property to the Maven project property."
    options:
    - name: "key"
      type: "String"
      required: true
    - name: "preserveExistingValue"
      type: "Boolean"
      required: false
    - name: "trustParent"
      type: "Boolean"
      required: false
    - name: "value"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.ChangeDependencyClassifier"
    description: "Add or alter the classifier of the specified dependency."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "newClassifier"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.ChangeDependencyGroupIdAndArtifactId"
    description: "Change the groupId, artifactId and/or the version of a specified\
      \ Maven dependency."
    options:
    - name: "newArtifactId"
      type: "String"
      required: false
    - name: "newGroupId"
      type: "String"
      required: false
    - name: "newVersion"
      type: "String"
      required: false
    - name: "oldArtifactId"
      type: "String"
      required: true
    - name: "oldGroupId"
      type: "String"
      required: true
    - name: "overrideManagedVersion"
      type: "Boolean"
      required: false
    - name: "versionPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.ChangeDependencyScope"
    description: "Add or alter the scope of the specified dependency."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "newScope"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.ChangeManagedDependencyGroupIdAndArtifactId"
    description: "Change the groupId, artifactId and optionally the version of a specified\
      \ Maven managed dependency."
    options:
    - name: "newArtifactId"
      type: "String"
      required: true
    - name: "newGroupId"
      type: "String"
      required: true
    - name: "newVersion"
      type: "String"
      required: false
    - name: "oldArtifactId"
      type: "String"
      required: true
    - name: "oldGroupId"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.ChangePackaging"
    description: "Sets the packaging type of Maven projects. Either adds the packaging\
      \ tag if it is missing or changes its context if present."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "packaging"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.ChangeParentPom"
    description: "Change the parent pom of a Maven pom.xml. Identifies the parent\
      \ pom to be changed by its groupId and artifactId."
    options:
    - name: "allowVersionDowngrades"
      type: "boolean"
      required: false
    - name: "newArtifactId"
      type: "String"
      required: false
    - name: "newGroupId"
      type: "String"
      required: false
    - name: "newVersion"
      type: "String"
      required: true
    - name: "oldArtifactId"
      type: "String"
      required: true
    - name: "oldGroupId"
      type: "String"
      required: true
    - name: "versionPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.ChangePluginConfiguration"
    description: "Apply the specified configuration to a Maven plugin. Will not add\
      \ the plugin if it does not already exist in the pom."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "configuration"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.ChangePluginDependencies"
    description: "Applies the specified dependencies to a Maven plugin. Will not add\
      \ the plugin if it does not already exist in the pom."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "dependencies"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.ChangePluginExecutions"
    description: "Apply the specified executions to a Maven plugin. Will not add the\
      \ plugin if it does not already exist in the pom."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "executions"
      type: "String"
      required: false
    - name: "groupId"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.ChangePropertyValue"
    description: "Changes the specified Maven project property value leaving the key\
      \ intact."
    options:
    - name: "addIfMissing"
      type: "Boolean"
      required: false
    - name: "key"
      type: "String"
      required: true
    - name: "newValue"
      type: "String"
      required: true
    - name: "trustParent"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.maven.ExcludeDependency"
    description: "Exclude specified dependency from any dependency that transitively\
      \ includes it."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "scope"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.ManageDependencies"
    description: "Make existing dependencies managed by moving their version to be\
      \ specified in the dependencyManagement section of the POM."
    options:
    - name: "addToRootPom"
      type: "Boolean"
      required: false
    - name: "artifactPattern"
      type: "String"
      required: false
    - name: "groupPattern"
      type: "String"
      required: true
    - name: "skipModelUpdate"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.maven.OrderPomElements"
    description: "Order POM elements according to the [recommended](http://maven.apache.org/developers/conventions/code.html#pom-code-convention)\
      \ order."
    options: []
  - name: "org.openrewrite.maven.RemoveDependency"
    description: "Removes a single dependency from the <dependencies> section of the\
      \ pom.xml."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "scope"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.RemoveExclusion"
    description: "Remove a single exclusion from on a particular dependency."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "exclusionArtifactId"
      type: "String"
      required: true
    - name: "exclusionGroupId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.RemoveManagedDependency"
    description: "Removes a single managed dependency from the <dependencyManagement><dependencies>\
      \ section of the pom.xml."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "scope"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.RemovePlugin"
    description: "Remove the specified Maven plugin from the pom.xml."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.RemoveProperty"
    description: "Removes the specified Maven project property from the pom.xml."
    options:
    - name: "propertyName"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.RemoveRedundantDependencyVersions"
    description: "Remove explicitly-specified dependency versions when a parent POM's\
      \ dependencyManagement specifies the version."
    options:
    - name: "artifactPattern"
      type: "String"
      required: false
    - name: "groupPattern"
      type: "String"
      required: false
    - name: "onlyIfVersionsMatch"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.maven.UpgradeDependencyVersion"
    description: "Upgrade the version of a dependency by specifying a group or group\
      \ and artifact using Node Semver advanced range selectors, allowing more precise\
      \ control over version updates to patch or minor releases."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "newVersion"
      type: "String"
      required: true
    - name: "overrideManagedVersion"
      type: "Boolean"
      required: false
    - name: "versionPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.UpgradeParentVersion"
    description: "Set the parent pom version number according to a node-style semver\
      \ selector or to a specific version number."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "newVersion"
      type: "String"
      required: true
    - name: "versionPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.UpgradePluginVersion"
    description: "Upgrade the version of a plugin using Node Semver advanced range\
      \ selectors, allowing more precise control over version updates to patch or\
      \ minor releases."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
    - name: "newVersion"
      type: "String"
      required: true
    - name: "trustParent"
      type: "Boolean"
      required: false
    - name: "versionPattern"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.cleanup.DependencyManagementDependencyRequiresVersion"
    description: "If they don't have a version, they can't possibly affect dependency\
      \ resolution anywhere, and can be safely removed."
    options: []
  - name: "org.openrewrite.maven.search.DependencyInsight"
    description: "Find direct and transitive dependencies matching a group, artifact,\
      \ and scope. Results include dependencies that either directly match or transitively\
      \ include a matching dependency."
    options:
    - name: "artifactIdPattern"
      type: "String"
      required: true
    - name: "groupIdPattern"
      type: "String"
      required: true
    - name: "scope"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.search.FindDependency"
    description: "Finds first-order dependency uses, i.e. dependencies that are defined\
      \ directly in a project."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.search.FindPlugin"
    description: "Finds a Maven plugin within a pom.xml."
    options:
    - name: "artifactId"
      type: "String"
      required: true
    - name: "groupId"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.search.FindProperties"
    description: "Finds the specified Maven project properties within a pom.xml."
    options:
    - name: "propertyPattern"
      type: "String"
      required: true
  - name: "org.openrewrite.maven.security.UseHttpsForRepositories"
    description: "Use HTTPS for repository urls"
    options: []
  - name: "org.openrewrite.maven.utilities.ListDependencies"
    description: "List all the dependencies in a scope and add to a text file."
    options:
    - name: "scope"
      type: "String"
      required: false
  - name: "org.openrewrite.maven.utilities.PrintMavenAsDot"
    description: "The DOT language format is specified [here](https://graphviz.org/doc/info/lang.html)."
    options: []
- artifactId: "rewrite-micronaut"
  version: "1.18.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.java.micronaut.BeanPropertyCapitalizationStrategy"
    description: "As of Micronaut 3.x property names for getters like `getXForwarded()`\
      \ are de-capitalized from `XForwarded` to `xForwarded`."
    options: []
  - name: "org.openrewrite.java.micronaut.CopyNonInheritedAnnotations"
    description: "As of Micronaut 3.x only [annotations](https://github.com/micronaut-projects/micronaut-core/blob/3.0.x/src/main/docs/guide/appendix/breaks.adoc#annotation-inheritance)\
      \ that are explicitly meta-annotated with `@Inherited` are inherited from parent\
      \ classes and interfaces."
    options: []
  - name: "org.openrewrite.java.micronaut.FixDeprecatedExceptionHandlerConstructors"
    description: "Adds `ErrorResponseProcessor` argument to deprecated no-arg `ExceptionHandler`\
      \ constructors."
    options: []
  - name: "org.openrewrite.java.micronaut.Micronaut2to3Migration"
    description: "This recipe will apply changes required for migrating from Micronaut\
      \ 2 to Micronaut 3."
    options: []
  - name: "org.openrewrite.java.micronaut.OncePerRequestHttpServerFilterToHttpServerFilter"
    description: "Starting in Micronaut 3.0 all filters are executed once per request.\
      \ Directly implement `HttpServerFilter` instead of extending `OncePerRequestHttpServerFilter`\
      \ and replace any usages of `micronaut.once` attributes with a custom attribute\
      \ name."
    options: []
  - name: "org.openrewrite.java.micronaut.ProviderImplementationsToMicronautFactories"
    description: "As of Micronaut 3.x the `@Factory` annotation is required for creating\
      \ beans from `javax.inject.Provider get()` implementations."
    options: []
  - name: "org.openrewrite.java.micronaut.SubclassesReturnedFromFactoriesNotInjectable"
    description: "As of Micronaut 3.x It is no longer possible to inject the internal\
      \ implementation type from beans produced via factories. Factory method return\
      \ types are changed to reflect the resolved return type if the method returns\
      \ a single non-null type that does not match the method declaration return type."
    options: []
  - name: "org.openrewrite.java.micronaut.TypeRequiresIntrospection"
    description: "In Micronaut 2.x a reflection-based strategy was used to retrieve\
      \ that information if the class was not annotated with `@Introspected`. As of\
      \ Micronaut 3.x it is required to annotate classes with `@Introspected` that\
      \ are used in this way."
    options: []
  - name: "org.openrewrite.java.micronaut.UpgradeMicronautGradlePropertiesVersion"
    description: "Set the gradle.properties version number according to a node-style\
      \ semver selector or to a specific version number."
    options:
    - name: "newVersion"
      type: "String"
      required: true
  - name: "org.openrewrite.java.micronaut.UpgradeMicronautMavenPropertyVersion"
    description: "Set the maven micronaut.version property according to a node-style\
      \ semver selector or to a specific version number."
    options:
    - name: "newVersion"
      type: "String"
      required: true
- artifactId: "rewrite-migrate-java"
  version: "1.13.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.java.migrate.AddJDeprScanPlugin"
    description: "JDeprScan scans class files for uses of deprecated APIs."
    options:
    - name: "release"
      type: "String"
      required: false
  - name: "org.openrewrite.java.migrate.AddSuppressionForIllegalReflectionWarningsPlugin"
    description: "Adds a maven jar plugin that's configured to suppress Illegal Reflection\
      \ Warnings."
    options:
    - name: "version"
      type: "String"
      required: false
  - name: "org.openrewrite.java.migrate.ChangeJavaxAnnotationToJakarta"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation. Excludes `javax.annotation.processing`."
    options: []
  - name: "org.openrewrite.java.migrate.Java8toJava11"
    description: "This recipe will apply changes commonly needed when migrating from\
      \ Java 8 to Java 11."
    options: []
  - name: "org.openrewrite.java.migrate.JavaVersion11"
    description: "Change maven.compiler.source and maven.compiler.target values to\
      \ 11."
    options: []
  - name: "org.openrewrite.java.migrate.JavaVersion17"
    description: "Change maven.compiler.source and maven.compiler.target values to\
      \ 17."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxActivationMigrationToJakartaActivation"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxAnnotationMigrationToJakartaAnnotation"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxAnnotationPackageToJakarta"
    description: "Change type of classes in the `javax.annotation` package to jakarta."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxAnnotationSecurityPackageToJakarta"
    description: "Change type of classes in the `javax.annotation.security` package\
      \ to jakarta."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxAnnotationSqlPackageToJakarta"
    description: "Change type of classes in the `javax.annotation.sql` package to\
      \ jakarta."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxBatchMigrationToJakartaBatch"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxDecoratorToJakartaDecorator"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxEjbToJakartaEjb"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxElToJakartaEl"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxEnterpriseToJakartaEnterprise"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxFacesToJakartaFaces"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxInjectMigrationToJakartaInject"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxInterceptorToJakartaInterceptor"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxJmsToJakartaJms"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxJsonToJakartaJson"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxJwsToJakartaJws"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxMailToJakartaMail"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxMigrationToJakarta"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxPeristenceXmlToJakartaPersistenceXml"
    description: ""
    options: []
  - name: "org.openrewrite.java.migrate.JavaxPersistenceToJakartaPersistence"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation"
    options: []
  - name: "org.openrewrite.java.migrate.JavaxResourceToJakartaResource"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxSecurityToJakartaSecurity"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxServletToJakartaServlet"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxTransactionMigrationToJakartaTransaction"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxValidationMigrationToJakartaValidation"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxWebsocketToJakartaWebsocket"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxWsToJakartaWs"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxXmlBindMigrationToJakartaXmlBind"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxXmlSoapToJakartaXmlSoap"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.JavaxXmlWsMigrationToJakartaXmlWs"
    description: "Java EE has been rebranded to Jakarta EE, necessitating a package\
      \ relocation."
    options: []
  - name: "org.openrewrite.java.migrate.UpgradeJava17"
    description: "This recipe will apply changes commonly needed when migrating to\
      \ Java 17, including intermediate versions."
    options: []
  - name: "org.openrewrite.java.migrate.UseJavaUtilBase64"
    description: "The `sun.misc` package became is not intended for use beyond Java\
      \ 9. `java.util.Base64` was introduced in Java 8 for general use."
    options: []
  - name: "org.openrewrite.java.migrate.apache.commons.codec.ApacheBase64ToJavaBase64"
    description: "Migrate `apache.commons.codec.binary.Base64#encodeBase64` to `java.util.Base64.Encoder#encodeBase64`,\
      \ `apache.commons.codec.binary.Base64#encodeBase64String` to `java.util.Base64.Encoder#encodeToString`,\
      \ and `apache.commons.codec.binary.Base64#decodeBase64` to `java.util.Base64.Decoder#decode`"
    options: []
  - name: "org.openrewrite.java.migrate.apache.commons.io.ApacheFileUtilsToJavaFiles"
    description: "Migrate `apache.commons.io.FileUtils` to `java.nio.file.Files`."
    options: []
  - name: "org.openrewrite.java.migrate.apache.commons.io.ApacheIOUtilsUseExplicitCharset"
    description: "This convert deprecated `IOUtils` method invocations with their\
      \ charset specific equivalent, e.g. converts `IOUtils.readLines(inputStream);`\
      \ to `IOUtils.readLines(inputStream, StandardCharsets.UTF_8);`"
    options:
    - name: "encoding"
      type: "String"
      required: false
  - name: "org.openrewrite.java.migrate.apache.commons.io.RelocateApacheCommonsIo"
    description: "The deployment of `org.apache.commons:commons-io` [was a publishing\
      \ mistake around 2012](https://issues.sonatype.org/browse/MVNCENTRAL-244) which\
      \ was corrected by changing the deployment GAV to be located under `commons-io:commons-io`."
    options: []
  - name: "org.openrewrite.java.migrate.apache.commons.io.UseStandardCharsets"
    description: "Migrate `org.apache.commons.io.Charsets` to `java.nio.charset.StandardCharsets`."
    options: []
  - name: "org.openrewrite.java.migrate.apache.commons.io.UseSystemLineSeparator"
    description: "Migrate `IOUtils.LINE_SEPARATOR` to `System.lineSeparator()`."
    options: []
  - name: "org.openrewrite.java.migrate.cobertura.RemoveCoberturaMavenPlugin"
    description: "This recipe will remove Cobertura, as it is not compatible with\
      \ Java 11."
    options: []
  - name: "org.openrewrite.java.migrate.concurrent.JavaConcurrentAPIs"
    description: "Certain Java concurrent APIs have become deprecated and their usages\
      \ changed, necessitating usage changes."
    options: []
  - name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicBooleanWeakCompareAndSetToWeakCompareAndSetPlain"
    description: "`AtomicBoolean#weakCompareAndSet(boolean, boolean)` was deprecated\
      \ in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicIntegerArrayWeakCompareAndSetToWeakCompareAndSetPlain"
    description: "`AtomicIntegerArray#weakCompareAndSet(int, int, int)` was deprecated\
      \ in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicIntegerWeakCompareAndSetToWeakCompareAndSetPlain"
    description: "`AtomicInteger#weakCompareAndSet(int, int)` was deprecated in Java\
      \ 9."
    options: []
  - name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicLongArrayWeakCompareAndSetToWeakCompareAndSetPlain"
    description: "`AtomicLongArray#weakCompareAndSet(int, long, long)` was deprecated\
      \ in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicLongWeakCompareAndSetToWeakCompareAndSetPlain"
    description: "`AtomicLong#weakCompareAndSet(long, long)` was deprecated in Java\
      \ 9."
    options: []
  - name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicReferenceArrayWeakCompareAndSetToWeakCompareAndSetPlain"
    description: "`AtomicReferenceArray#weakCompareAndSet(int, T, T)` was deprecated\
      \ in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.concurrent.MigrateAtomicReferenceWeakCompareAndSetToWeakCompareAndSetPlain"
    description: "`AtomicReference#weakCompareAndSet(T, T)` was deprecated in Java\
      \ 9."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuava"
    description: "Guava filled in important gaps in the Java standard library and\
      \ still does. But at least some of Guava's API surface area is covered by the\
      \ Java standard library now, and some projects may be able to remove Guava altogether\
      \ if they migrate to standard library for these functions."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaAtomicsNewReference"
    description: "Prefer the Java standard library over third-party usage of Guava\
      \ in simple cases like this."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaCreateTempDir"
    description: "Replaces Guava `Files#createTempDir()` with Java `Files#createTempDirectory(..)`.\
      \ Transformations are limited to scopes throwing or catching `java.io.IOException`."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaDirectExecutor"
    description: "`Executor` is a SAM-compatible interface, so `Runnable::run` is\
      \ just as succinct as `MoreExecutors.directExecutor()` but without the third-party\
      \ library requirement."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaImmutableListOf"
    description: "Replaces `ImmutableList.of(..)` if the returned type is immediately\
      \ down-cast."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaImmutableMapOf"
    description: "Replaces `ImmutableMap.of(..)` if the returned type is immediately\
      \ down-cast."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaImmutableSetOf"
    description: "Replaces `ImmutableSet.of(..)` if the returned type is immediately\
      \ down-cast.\n  Java 9 introduced `List#of(..)`, `Map#of(..)`, `Set#of(..)`\
      \ which is similar to `ImmutableList#of(..)`, `ImmutableMap#of(..)`, `ImmutableSet#of(..)`,\
      \ but has a subtle difference.\n  As per the Java 9 documentation, [`Set.of`\
      \ provides an unspecified iteration order on the set of elements and is subject\
      \ to change](https://docs.oracle.com/javase/9/docs/api/java/util/Set.html),\
      \ whereas [Guava `ImmutableSet` preserves the order from construction time](https://github.com/google/guava/wiki/ImmutableCollectionsExplained#how).\n\
      \  This is worth pointing out in case your usage calls for iteration order being\
      \ important."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaListsNewArrayList"
    description: "Prefer the Java standard library over third-party usage of Guava\
      \ in simple cases like this."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaListsNewCopyOnWriteArrayList"
    description: "Prefer the Java standard library over third-party usage of Guava\
      \ in simple cases like this."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaListsNewLinkedList"
    description: "Prefer the Java standard library over third-party usage of Guava\
      \ in simple cases like this."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaMapsNewLinkedHashMap"
    description: "Prefer the Java standard library over third-party usage of Guava\
      \ in simple cases like this."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaSetsNewConcurrentHashSet"
    description: "Prefer the Java standard library over third-party usage of Guava\
      \ in simple cases like this."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaSetsNewHashSet"
    description: "Prefer the Java standard library over third-party usage of Guava\
      \ in simple cases like this."
    options: []
  - name: "org.openrewrite.java.migrate.guava.NoGuavaSetsNewLinkedHashSet"
    description: "Prefer the Java standard library over third-party usage of Guava\
      \ in simple cases like this."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferCharCompare"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferIntegerCompare"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferIntegerCompareUnsigned"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferIntegerDivideUnsigned"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferIntegerParseUnsignedInt"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferIntegerRemainderUnsigned"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferJavaUtilCollectionsSynchronizedNavigableMap"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferJavaUtilCollectionsUnmodifiableNavigableMap"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferJavaUtilFunction"
    description: "Guava's `Function` extends `java.util.function.Function`."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferJavaUtilObjectsEquals"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferJavaUtilObjectsHashCode"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferJavaUtilPredicate"
    description: "Guava's `Predicate` extends `java.util.function.Predicate`."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferJavaUtilSupplier"
    description: "Guava's `Supplier` extends `java.util.function.Supplier`."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferLongCompare"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferLongCompareUnsigned"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferLongDivideUnsigned"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferLongParseUnsignedLong"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferLongRemainderUnsigned"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferMathAddExact"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferMathMultiplyExact"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferMathSubtractExact"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.guava.PreferShortCompare"
    description: "This method exists in the Java standard library now."
    options: []
  - name: "org.openrewrite.java.migrate.jacoco.UpgradeJaCoCoMavenPluginVersion"
    description: "This recipe will upgrade the JaCoCo Maven plugin to a more recent\
      \ version compatible with Java 11."
    options: []
  - name: "org.openrewrite.java.migrate.javax.AddInjectDependencies"
    description: "This recipe will add the necessary Inject dependencies for those\
      \ projects migrating to Java 11."
    options: []
  - name: "org.openrewrite.java.migrate.javax.AddJaxbDependencies"
    description: "This recipe will add the necessary JAXB dependencies for those projects\
      \ migrating to Java 11."
    options: []
  - name: "org.openrewrite.java.migrate.javax.AddJaxbRuntime"
    description: "This recipe will add a JAXB run-time dependency to any maven project\
      \ that has a transitive dependency on JAXB."
    options:
    - name: "runtime"
      type: "String"
      required: true
  - name: "org.openrewrite.java.migrate.javax.AddJaxwsDependencies"
    description: "This recipe will add the necessary JAX-WS dependencies for those\
      \ projects migrating to Java 11."
    options: []
  - name: "org.openrewrite.java.migrate.javax.AddJaxwsRuntime"
    description: "This recipe will add a JAX-WS run-time dependency to any maven project\
      \ that has a transitive dependency on JAX-WS APIs."
    options: []
  - name: "org.openrewrite.java.migrate.javax.JavaxLangModelUtil"
    description: "Certain `javax.lang.model.util` APIs have become deprecated and\
      \ their usages changed, necessitating usage changes."
    options: []
  - name: "org.openrewrite.java.migrate.javax.JavaxManagementMonitorAPIs"
    description: "Certain `javax.management.monitor` APIs have become deprecated and\
      \ their usages changed, necessitating usage changes."
    options: []
  - name: "org.openrewrite.java.migrate.javax.JavaxXmlStreamAPIs"
    description: "Certain `javax.xml.stream` APIs have become deprecated and their\
      \ usages changed, necessitating usage changes."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateAbstractAnnotationValueVisitor6To9"
    description: "`AbstractAnnotationValueVisitor6` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateAbstractElementVisitor6To9"
    description: "`AbstractElementVisitor6` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateAbstractTypeVisitor6To9"
    description: "`AbstractTypeVisitor6` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateCounterMonitorSetThreshholdToSetInitThreshold"
    description: "`CounterMonitor#setThreshhold` has been deprecated in JMX 1.2."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateElementKindVisitor6To9"
    description: "`ElementKindVisitor6` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateElementScanner6To9"
    description: "`ElementScanner6` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateSimpleAnnotationValueVisitor6To9"
    description: "`SimpleAnnotationValueVisitor6` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateSimpleElementVisitor6To9"
    description: "`SimpleElementVisitor6` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateSimpleTypeVisitor6To9"
    description: "`SimpleTypeVisitor6` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateTypeKindVisitor6To9"
    description: "`TypeKindVisitor6` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateXMLEventFactoryNewInstanceToNewFactory"
    description: "`javax.xml.stream.XMLEventFactory#newInstance` has been deprecated\
      \ in Java 7."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateXMLInputFactoryNewInstanceToNewFactory"
    description: "`javax.xml.stream.XMLInputFactory#newInstance` has been deprecated\
      \ Java 7."
    options: []
  - name: "org.openrewrite.java.migrate.javax.MigrateXMLOutputFactoryNewInstanceToNewFactory"
    description: "`javax.xml.stream.XMLOutputFactory#newInstance` has been deprecated\
      \ Java 7."
    options: []
  - name: "org.openrewrite.java.migrate.javax.ReplaceJavaxJaxbWithJakarta"
    description: "This recipe will replace the legacy `javax-api` artifact with the\
      \ Jakarta EE equivalent."
    options: []
  - name: "org.openrewrite.java.migrate.javax.ReplaceJavaxJaxwsWithJakarta"
    description: "This recipe will replace the legacy javax `jaxws-api` artifact with\
      \ the Jakarta EE equivalent. The jakarta JAX-WS API 2.3.x is part of JakartaEE\
      \ 8 and still uses `javax` packaging."
    options: []
  - name: "org.openrewrite.java.migrate.lang.JavaLangAPIs"
    description: "Certain Java lang APIs have become deprecated and their usages changed,\
      \ necessitating usage changes."
    options: []
  - name: "org.openrewrite.java.migrate.lang.MigrateCharacterIsJavaLetterOrDigitToIsJavaIdentifierPart"
    description: "`Character#isJavaLetterOrDigit(char)` was deprecated in Java 1.1."
    options: []
  - name: "org.openrewrite.java.migrate.lang.MigrateCharacterIsJavaLetterToIsJavaIdentifierStart"
    description: "`Character#isJavaLetter(char)` was deprecated in Java 1.1."
    options: []
  - name: "org.openrewrite.java.migrate.lang.MigrateCharacterIsSpaceToIsWhitespace"
    description: "`Character#isSpace(char)` was deprecated in Java 1.1."
    options: []
  - name: "org.openrewrite.java.migrate.lang.MigrateClassLoaderDefineClass"
    description: "`ClassLoader#defineClass(byte[], int, int)` was deprecated in Java\
      \ 1.1."
    options: []
  - name: "org.openrewrite.java.migrate.lang.MigrateClassNewInstanceToGetDeclaredConstructorNewInstance"
    description: "`Class#newInstance()` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.lang.MigrateRuntimeVersionMajorToFeature"
    description: "`Runtime.Version#major()` was deprecated in Java 10."
    options: []
  - name: "org.openrewrite.java.migrate.lang.MigrateRuntimeVersionMinorToInterim"
    description: "`Runtime.Version#minor()` was deprecated in Java 10."
    options: []
  - name: "org.openrewrite.java.migrate.lang.MigrateRuntimeVersionSecurityToUpdate"
    description: "`Runtime.Version#security()` was deprecated in Java 10."
    options: []
  - name: "org.openrewrite.java.migrate.lang.MigrateSecurityManagerMulticast"
    description: "`SecurityManager#checkMulticast(InetAddress, byte)` was deprecated\
      \ in Java 1.1."
    options: []
  - name: "org.openrewrite.java.migrate.lang.StringFormatted"
    description: "Call `String#formatted(Object...)` on first argument to `String#format(String,\
      \ Object...)`."
    options: []
  - name: "org.openrewrite.java.migrate.logging.JavaLoggingAPIs"
    description: "Certain Java logging APIs have become deprecated and their usages\
      \ changed, necessitating usage changes."
    options: []
  - name: "org.openrewrite.java.migrate.logging.MigrateGetLoggingMXBeanToGetPlatformMXBean"
    description: "`LogManager#getLoggingMXBean()` was deprecated in Java 9."
    options: []
  - name: "org.openrewrite.java.migrate.logging.MigrateInterfaceLoggingMXBeanToPlatformLoggingMXBean"
    description: "`java.util.logging.LoggingMXBean` has been deprecated."
    options: []
  - name: "org.openrewrite.java.migrate.logging.MigrateLogRecordSetMillisToSetInstant"
    description: "`LogRecord#setMillis(long)` has been deprecated."
    options: []
  - name: "org.openrewrite.java.migrate.logging.MigrateLoggerGlobalToGetGlobal"
    description: "The preferred way to get the global logger object is via the call\
      \ `Logger#getGlobal()`."
    options: []
  - name: "org.openrewrite.java.migrate.logging.MigrateLoggerLogrbToUseResourceBundle"
    description: "`java.util.logging.Logger#logrb(.., String bundleName, ..)` has\
      \ been deprecated."
    options: []
  - name: "org.openrewrite.java.migrate.lombok.LombokValToFinalVar"
    description: "Replace `lombok.val` with `final var` on projects using Java 11\
      \ or higher."
    options: []
  - name: "org.openrewrite.java.migrate.metrics.SimplifyMicrometerMeterTags"
    description: "Use the simplest method to add new tags."
    options: []
  - name: "org.openrewrite.java.migrate.net.JavaNetAPIs"
    description: "Certain Java networking APIs have become deprecated and their usages\
      \ changed, necessitating usage changes."
    options: []
  - name: "org.openrewrite.java.migrate.net.MigrateHttpURLConnectionHttpServerErrorToHttpInternalError"
    description: "`java.net.HttpURLConnection.HTTP_SERVER_ERROR` has been deprecated."
    options: []
  - name: "org.openrewrite.java.migrate.net.MigrateMulticastSocketGetTTLToGetTimeToLive"
    description: "`java.net.MulticastSocket#getTTL()` has been deprecated."
    options: []
  - name: "org.openrewrite.java.migrate.net.MigrateMulticastSocketSetTTLToSetTimeToLive"
    description: "`java.net.MulticastSocket#setTTL(byte)` has been deprecated."
    options: []
  - name: "org.openrewrite.java.migrate.net.MigrateURLDecoderDecode"
    description: "`java.net.URLDecoder#decode(String)` is platform-dependent. It's\
      \ advised to specify an encoding."
    options: []
  - name: "org.openrewrite.java.migrate.net.MigrateURLEncoderEncode"
    description: "`java.net.URLEncoder#encode(String)` is platform-dependent. It's\
      \ advised to specify an encoding."
    options: []
  - name: "org.openrewrite.java.migrate.search.AboutJavaVersion"
    description: "A diagnostic for studying the applicability of Java version constraints."
    options:
    - name: "whenUsesType"
      type: "String"
      required: false
  - name: "org.openrewrite.java.migrate.sql.JavaSqlAPIs"
    description: "Certain Java sql APIs have become deprecated and their usages changed,\
      \ necessitating usage changes."
    options: []
  - name: "org.openrewrite.java.migrate.sql.MigrateDriverManagerSetLogStream"
    description: "`DriverManager#setLogStream(java.io.PrintStream)` was deprecated\
      \ in Java 1.2."
    options: []
  - name: "org.openrewrite.java.migrate.util.JavaUtilAPIs"
    description: "Certain java util APIs have been introduced and are favored over\
      \ previous APIs."
    options: []
  - name: "org.openrewrite.java.migrate.util.MigrateCollectionsSingletonList"
    description: "Replaces `Collections.singletonList(<args>)))` with `List.Of(<args>)`."
    options: []
  - name: "org.openrewrite.java.migrate.util.MigrateCollectionsSingletonMap"
    description: "Replaces `Collections.singletonMap(<args>)))` with `Map.Of(<args>)`."
    options: []
  - name: "org.openrewrite.java.migrate.util.MigrateCollectionsSingletonSet"
    description: "Replaces `Collections.singleton(<args>)))` with `Set.Of(<args>)`."
    options: []
  - name: "org.openrewrite.java.migrate.util.MigrateCollectionsUnmodifiableList"
    description: "Replaces `unmodifiableList(java.util.Arrays asList(<args>))` with\
      \ `List.Of(<args>)`."
    options: []
  - name: "org.openrewrite.java.migrate.util.MigrateCollectionsUnmodifiableSet"
    description: "Replaces `unmodifiableSet(java.util.Set(java.util.Arrays asList(<args>)))`\
      \ with `Set.Of(<args>)`."
    options: []
  - name: "org.openrewrite.java.migrate.util.OptionalNotEmptyToIsPresent"
    description: "Replace negated Optional.isEmpty() calls with Optional.isPresent()\
      \ in Java 11 and above."
    options: []
  - name: "org.openrewrite.java.migrate.util.OptionalNotPresentToIsEmpty"
    description: "Replace negated Optional.isPresent() calls with Optional.isEmpty()\
      \ in Java 11 and above."
    options: []
  - name: "org.openrewrite.java.migrate.util.UseEnumSetOf"
    description: "Replaces `Set of(..)` with `EnumSet of(..)` if the arguments are\
      \ enums."
    options: []
  - name: "org.openrewrite.java.migrate.util.UseMapOf"
    description: "This succinct syntax was introduced in Java 10."
    options: []
  - name: "org.openrewrite.java.migrate.wro4j.UpgradeWro4jMavenPluginVersion"
    description: "This recipe will upgrade Wro4j to a more recent version compatible\
      \ with Java 11."
    options: []
- artifactId: "rewrite-properties"
  version: "7.32.1"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.properties.AddProperty"
    description: "Adds a new property to a property file at the bottom of the file\
      \ if it's missing. Whitespace before and after the `=` must be included in the\
      \ property and value."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "property"
      type: "String"
      required: true
    - name: "value"
      type: "String"
      required: true
  - name: "org.openrewrite.properties.ChangePropertyKey"
    description: "Change a property key leaving the value intact."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "newPropertyKey"
      type: "String"
      required: true
    - name: "oldPropertyKey"
      type: "String"
      required: true
    - name: "relaxedBinding"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.properties.ChangePropertyValue"
    description: "Change a property value leaving the key intact."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "newValue"
      type: "String"
      required: true
    - name: "oldValue"
      type: "String"
      required: false
    - name: "propertyKey"
      type: "String"
      required: true
    - name: "relaxedBinding"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.properties.DeleteProperty"
    description: "Deletes key/value pairs from properties files."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "propertyKey"
      type: "String"
      required: true
    - name: "relaxedBinding"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.properties.search.FindProperties"
    description: "Finds occurrences of a property key."
    options:
    - name: "propertyKey"
      type: "String"
      required: true
    - name: "relaxedBinding"
      type: "Boolean"
      required: false
- artifactId: "rewrite-quarkus"
  version: "1.13.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.java.quarkus.ConfigPropertiesToConfigMapping"
    description: "Migrate Quarkus configuration classes annotated with `@ConfigProperties`\
      \ to the equivalent Smallrye `@ConfigMapping`."
    options: []
  - name: "org.openrewrite.java.quarkus.ConfigureQuarkusMavenPluginWithReasonableDefaults"
    description: "Configures the `quarkus-maven-plugin` with reasonable defaults,\
      \ such as default activated `goals` and `<extensions>` configuration."
    options: []
  - name: "org.openrewrite.java.quarkus.MigrateQuarkusMavenPluginNativeImageGoal"
    description: "Migrates the `quarkus-maven-plugin` deprecated `native-image` goal.\
      \ If the `native-image` goal needs to be removed, this adds `<quarkus.package.type>native</quarkus.package.type>`\
      \ to the `native` profile `properties` section, given the `native` profile exists\
      \ in the `pom.xml`."
    options: []
  - name: "org.openrewrite.java.quarkus.MultiTransformHotStreamToMultiHotStream"
    description: "Replace Mutiny API usages of `multi.transform().toHotStream()` with\
      \ `multi.toHotStream()`."
    options: []
  - name: "org.openrewrite.java.quarkus.Quarkus1to1_13Migration"
    description: "Migrates Quarkus 1.11 to 1.13."
    options: []
  - name: "org.openrewrite.java.quarkus.quarkus2.GrpcServiceAnnotationToGrpcClient"
    description: "The `@GrpcService` annotation is replaced with `@GrpcClient` in\
      \ Quarkus 2.x. Removes the optional `@GrpcClient.value()` unless the service\
      \ name is different from the name of annotated element."
    options: []
  - name: "org.openrewrite.java.quarkus.quarkus2.Quarkus1to2Migration"
    description: "Migrates Quarkus 1.x to 2.x."
    options: []
  - name: "org.openrewrite.java.quarkus.quarkus2.RemoveAvroMavenPlugin"
    description: "Removes the `avro-maven-plugin` if the `quarkus-maven-plugin` is\
      \ found in the project's `pom.xml`. Avro has been integrated with the Quarkus\
      \ code generation mechanism. This replaces the need to use the Avro plugin."
    options: []
  - name: "org.openrewrite.java.quarkus.quarkus2.UseIdentifierOnDefaultKafkaBroker"
    description: "Use `@io.smallrye.common.annotation.Identifier` on default kafka\
      \ broker configuration."
    options: []
  - name: "org.openrewrite.java.quarkus.quarkus2.UsePanacheEntityBaseStaticMethods"
    description: "The `getEntityManager()` and the `flush()` methods of `PanacheEntityBase`\
      \ are now static methods."
    options: []
  - name: "org.openrewrite.java.quarkus.quarkus2.UsePanacheEntityBaseUniT"
    description: "The `persist()` and `persistAndFlush()` methods now return an `Uni<T\
      \ extends PanacheEntityBase>` instead of an `Uni<Void>` to allow chaining the\
      \ methods."
    options: []
  - name: "org.openrewrite.java.quarkus.quarkus2.UseReactivePanacheMongoEntityBaseUniT"
    description: "The `persist()`, `update()`, and `persistOrUpdate()` methods now\
      \ return a `Uni<T extends ReactivePanacheMongoEntityBase>` instead of a `Uni<Void>`\
      \ to allow chaining the methods."
    options: []
- artifactId: "rewrite-spring"
  version: "4.29.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.java.spring.BeanMethodsNotPublic"
    description: "Remove public modifier from `@Bean` methods. They no longer have\
      \ to be public visibility to be usable by Spring."
    options: []
  - name: "org.openrewrite.java.spring.ExpandProperties"
    description: "Expand YAML properties to not use the dot syntax shortcut."
    options: []
  - name: "org.openrewrite.java.spring.ImplicitWebAnnotationNames"
    description: "Removes implicit web annotation names."
    options: []
  - name: "org.openrewrite.java.spring.NoAutowiredOnConstructor"
    description: "Spring can infer an autowired constructor when there is a single\
      \ constructor on the bean. This recipe removes unneeded `@Autowired` annotations\
      \ on constructors."
    options: []
  - name: "org.openrewrite.java.spring.NoRequestMappingAnnotation"
    description: "Replace method declaration `@RequestMapping` annotations with `@GetMapping`,\
      \ `@PostMapping`, etc. when possible."
    options: []
  - name: "org.openrewrite.java.spring.SeparateApplicationYamlByProfile"
    description: "The Spring team's recommendation is to separate profile properties\
      \ into their own YAML files now."
    options: []
  - name: "org.openrewrite.java.spring.UpdateApiManifest"
    description: "Keep a consolidated manifest of the API endpoints that this application\
      \ exposes up-to-date."
    options: []
  - name: "org.openrewrite.java.spring.YamlPropertiesToKebabCase"
    description: "Normalize Spring YAML properties to use lowercase and hyphen-separated\
      \ syntax. For example, changing `spring.main.showBanner` to `spring.main.show-banner`.\
      \ With [Spring's relaxed binding](https://docs.spring.io/spring-boot/docs/2.5.6/reference/html/features.html#features.external-config.typesafe-configuration-properties.relaxed-binding),\
      \ `kebab-case` may be used in properties files and still be converted to configuration\
      \ beans. Note, an exception to this is the case of `@Value`, which is match-sensitive.\
      \ For example, `@Value(\"${anExampleValue}\")` will not match `an-example-value`.\
      \ [The Spring reference documentation recommends using `kebab-case` for properties\
      \ where possible.](https://docs.spring.io/spring-boot/docs/2.5.6/reference/html/features.html#features.external-config.typesafe-configuration-properties.relaxed-binding)"
    options: []
  - name: "org.openrewrite.java.spring.boot2.ConditionalOnBeanAnyNestedCondition"
    description: "Migrate multi-condition `@ConditionalOnBean` annotations to `AnyNestedCondition`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.DatabaseComponentAndBeanInitializationOrdering"
    description: "Beans of certain well-known types, such as JdbcTemplate, will be\
      \ ordered so that they are initialized after the database has been initialized.\
      \ If you have a bean that works with the DataSource directly, annotate its class\
      \ or @Bean method with @DependsOnDatabaseInitialization to ensure that it too\
      \ is initialized after the database has been initialized."
    options: []
  - name: "org.openrewrite.java.spring.boot2.GetErrorAttributes"
    description: "`ErrorAttributes#getErrorAttributes(WebRequest, boolean)` was deprecated\
      \ in Spring Boot 2.3."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MergeBootstrapYamlWithApplicationYaml"
    description: "In Spring Boot 2.4, support for `bootstrap.yml` was removed. It's\
      \ properties should be merged with `application.yml`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateAbstractHealthIndicatorToPingHealthIndicator"
    description: "`org.springframework.boot.actuate.health.AbstractHealthIndicator`\
      \ was deprecated in 2.2."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateActuatorMediaTypeToApiVersion"
    description: "Spring-Boot-Actuator `ActuatorMediaType` was deprecated in 2.5 in\
      \ favor of `ApiVersion#getProducedMimeType()`. Replace `MediaType.parseMediaType(ActuatorMediaType.Vx_JSON)`\
      \ with `MediaType.asMediaType(ApiVersion.Vx.getProducedMimeType())`"
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateConfigurationPropertiesBindingPostProcessorValidatorBeanName"
    description: "Replaces field and static access of `ConfigurationPropertiesBindingPostProcessor#VALIDATOR_BEAN_NAME`\
      \ with `EnableConfigurationProperties#VALIDATOR_BEAN_NAME`. Deprecated in 2.2.x."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateDatabaseCredentials"
    description: "If you currently define a `spring.flyway.url` or `spring.liquibase.url`\
      \ you may need to provide additional username and password properties. In earlier\
      \ versions of Spring Boot, these settings were derived from `spring.datasource`\
      \ properties but this turned out to be problematic for people that provided\
      \ their own `DataSource` beans."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateDiskSpaceHealthIndicatorConstructor"
    description: "`DiskSpaceHealthIndicator(File, long)` was deprecated in Spring\
      \ Data 2.1 for removal in 2.2."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateErrorControllerPackageName"
    description: "`org.springframework.boot.autoconfigure.web.ErrorController` was\
      \ deprecated in 1.x."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateErrorPropertiesIncludeStackTraceConstants"
    description: "`ErrorProperties#IncludeStacktrace.ON_TRACE_PARAM` was deprecated\
      \ in 2.3.x and removed in 2.5.0."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateHsqlEmbeddedDatabaseConnection"
    description: "Spring-Boot `EmbeddedDatabaseConnection.HSQL` was deprecated in\
      \ favor of `EmbeddedDatabaseConnection.HSQLDB` in 2.4."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateHttpMessageConvertersPackageName"
    description: "`org.springframework.boot.autoconfigure.web.HttpMessageConverters`\
      \ was deprecated in 1.x."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateLocalServerPortAnnotation"
    description: "Updates the package and adds the necessary dependency if `LocalServerPort`\
      \ is in use. The package of `LocalServerPort` was changed in Spring Boot 2.0,\
      \ necessitating changes."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateLoggingSystemPropertyConstants"
    description: "Replaces field and static access of deprecated fields in `LoggingSystemProperties`\
      \ with the recommendations from `LogbackLoggingSystemProperties`. Deprecated\
      \ in 2.4.x and removed in 2.6.0."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateMultipartConfigFactory"
    description: "Methods to set DataSize with primitive arguments were deprecated\
      \ in 2.1 and removed in 2.2."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateNotBlankPackageName"
    description: "`org.hibernate.validator.constraints.NotBlank` was deprecated in\
      \ 1.x."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateNotEmptyPackageName"
    description: "`org.hibernate.validator.constraints.NotEmpty` was deprecated in\
      \ 1.x."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateRestClientBuilderCustomizerPackageName"
    description: "`org.springframework.boot.autoconfigure.elasticsearch.rest.RestClientBuilderCustomizer`\
      \ was deprecated in 2.3."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateRestTemplateBuilderBasicAuthorization"
    description: "`RestTemplateBuilder#basicAuthorization` was deprecated in 2.1."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateRestTemplateBuilderTimeoutByInt"
    description: "`RestTemplateBuilder#setConnectTimeout(int)` and `RestTemplateBuilder#setReadTimeout(int)`\
      \ were deprecated in Spring Boot 2.1."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateSpringBootServletInitializerPackageName"
    description: "`org.springframework.boot.web.support.SpringBootServletInitializer`\
      \ was deprecated in 1.4.x."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateUndertowServletWebServerFactoryIsEagerInitFilters"
    description: "`org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory#isEagerInitFilters`\
      \ was deprecated in 2.4 and are removed in 2.6."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateUndertowServletWebServerFactorySetEagerInitFilters"
    description: "`org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory#setEagerInitFilters`\
      \ was deprecated in 2.4 and are removed in 2.6."
    options: []
  - name: "org.openrewrite.java.spring.boot2.MigrateWebTestClientBuilderCustomizerPackageName"
    description: "`org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientBuilderCustomizer`\
      \ was deprecated in 2.2."
    options: []
  - name: "org.openrewrite.java.spring.boot2.OutputCaptureExtension"
    description: "Use the JUnit Jupiter extension instead of JUnit 4 rule."
    options: []
  - name: "org.openrewrite.java.spring.boot2.RemoveObsoleteSpringRunners"
    description: "Remove obsolete classpath runners."
    options: []
  - name: "org.openrewrite.java.spring.boot2.ReplaceDeprecatedEnvironmentTestUtils"
    description: "Replaces any references to the deprecated `EnvironmentTestUtils`\
      \ with `TestPropertyValues` and the appropriate functionality."
    options: []
  - name: "org.openrewrite.java.spring.boot2.RestTemplateBuilderRequestFactory"
    description: "Migrate `RestTemplateBuilder#requestFactory` calls to use a `Supplier`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SamlRelyingPartyPropertyApplicationPropertiesMove"
    description: "Renames spring.security.saml2.relyingparty.registration.(any).identityprovider\
      \ to spring.security.saml2.relyingparty.registration.(any).assertingparty."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBoot1To2Migration"
    description: "Migrates Spring Boot 1.x to latest version of 2.x, updating tests\
      \ to JUnit 5, and applying 2.x best practices."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBoot2BestPractices"
    description: "Applies best practices to Spring Boot 2 applications."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBoot2JUnit4to5Migration"
    description: "Migrates Spring Boot 2.x projects having JUnit 4.x tests to JUnit\
      \ Jupiter."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBoot2To3Migration"
    description: "Migrates Spring Boot 2.x to latest version of 3.x"
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBootMavenPluginMigrateAgentToAgents"
    description: "Migrate the `spring-boot.run.agent` Maven plugin configuration key\
      \ to `spring-boot.run.agents`. Deprecated in 2.2.x."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_0"
    description: "Migrate properties found in `application.properties` and `application.yml`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_1"
    description: "Migrate properties found in `application.properties` and `application.yml`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_2"
    description: "Migrate properties found in `application.properties` and `application.yml`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_3"
    description: "Migrate properties found in `application.properties` and `application.yml`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_4"
    description: "Migrate properties found in `application.properties` and `application.yml`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_5"
    description: "Migrate properties found in `application.properties` and `application.yml`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_6"
    description: "Migrate properties found in `application.properties` and `application.yml`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.SpringBootProperties_2_7"
    description: "Migrate properties found in `application.properties` and `application.yml`."
    options: []
  - name: "org.openrewrite.java.spring.boot2.UnnecessarySpringExtension"
    description: "`@SpringBootTest` and all test slice annotations already applies\
      \ `@SpringExtension` as of Spring Boot 2.1.0."
    options: []
  - name: "org.openrewrite.java.spring.boot2.UnnecessarySpringRunWith"
    description: "Remove `@RunWith` annotations on Spring tests."
    options: []
  - name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_0"
    description: "Upgrade to Spring Boot 2.0 from prior 1.x version."
    options: []
  - name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_1"
    description: "Upgrade to Spring Boot 2.1 from any prior 2.x version."
    options: []
  - name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_2"
    description: "Upgrade to Spring Boot 2.2 from any prior 2.x version."
    options: []
  - name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_3"
    description: "Upgrade to Spring Boot 2.3 from any prior 2.x version."
    options: []
  - name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_4"
    description: "Upgrade to Spring Boot 2.4 from any prior 2.x version."
    options: []
  - name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_5"
    description: "Upgrade to Spring Boot 2.5 from any prior 2.x version."
    options: []
  - name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_6"
    description: "Upgrade to Spring Boot 2.6 from any prior 2.x version."
    options: []
  - name: "org.openrewrite.java.spring.boot2.UpgradeSpringBoot_2_7"
    description: "Upgrade to Spring Boot 2.7 from any prior 2.x version."
    options: []
  - name: "org.openrewrite.java.spring.boot2.WebSecurityConfigurerAdapter"
    description: ""
    options: []
  - name: "org.openrewrite.java.spring.boot2.search.CustomizingJooqDefaultConfiguration"
    description: "To streamline the customization of jOOQ’s `DefaultConfiguration`,\
      \ a bean that implements `DefaultConfigurationCustomizer` can now be defined.\
      \ This customizer callback should be used in favour of defining one or more\
      \ `*Provider` beans, the support for which has now been deprecated. See [Spring\
      \ Boot 2.5 jOOQ customization](https://docs.spring.io/spring-boot/docs/2.5.x/reference/htmlsingle/#features.sql.jooq.customizing)."
    options: []
  - name: "org.openrewrite.java.spring.boot2.search.IntegrationSchedulerPoolRecipe"
    description: "Spring Integration now reuses an available TaskScheduler rather\
      \ than configuring its own. In a typical application setup relying on the auto-configuration,\
      \ this means that Spring Integration uses the auto-configured task scheduler\
      \ that has a pool size of 1. To restore Spring Integration’s default of 10 threads,\
      \ use the `spring.task.scheduling.pool.size` property."
    options: []
  - name: "org.openrewrite.java.spring.boot2.search.LoggingShutdownHooks"
    description: "Spring Boot registers a logging shutdown hook by default for JAR-based\
      \ applications to ensure that logging resources are released when the JVM exits.\
      \ If your application is deployed as a WAR then the shutdown hook is not registered\
      \ since the servlet container usually handles logging concerns.\n\nMost applications\
      \ will want the shutdown hook. However, if your application has complex context\
      \ hierarchies, then you may need to disable it. You can use the `logging.register-shutdown-hook`\
      \ property to do that."
    options: []
  - name: "org.openrewrite.java.spring.boot2.search.MessagesInTheDefaultErrorView"
    description: "As of Spring Boot 2.5 the `message` attribute in the default error\
      \ view was removed rather than blanked when it is not shown.\n`spring-webmvc`\
      \ or `spring-webflux` projects that parse the error response JSON may need to\
      \ deal with the missing item\n([release notes](https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.5-Release-Notes#messages-in-the-default-error-view)).\n\
      You can still use the `server.error.include-message` property if you want messages\
      \ to be included.\n"
    options: []
  - name: "org.openrewrite.java.spring.boot2.search.UpgradeRequirementsSpringBoot_2_5"
    description: "Identify changes needed to upgrade to Spring Boot 2.5.\n"
    options: []
  - name: "org.openrewrite.java.spring.boot3.MavenPomUpgrade"
    description: "Upgrade Maven Pom to Spring Boot 3.0 from prior 2.x version."
    options: []
  - name: "org.openrewrite.java.spring.boot3.PreciseBeanType"
    description: "Replace Bean method return types with concrete types being returned.\
      \ This is required for Spring 6 AOT"
    options: []
  - name: "org.openrewrite.java.spring.boot3.RemoveConstructorBindingAnnotation"
    description: "As of Boot 3.0 @ConstructorBinding is no longer needed at the type\
      \ level on @ConfigurationProperties classes and should be removed."
    options: []
  - name: "org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_0"
    description: "Upgrade to Spring Boot 3.0 from prior 2.x version."
    options: []
  - name: "org.openrewrite.java.spring.cve.Spring4Shell"
    description: "See the [blog post](https://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement#status)\
      \ on the issue. This recipe can be further refined as more information becomes\
      \ available."
    options: []
  - name: "org.openrewrite.java.spring.data.MigrateJpaSort"
    description: "Equivalent constructors in `JpaSort` were deprecated in Spring Data\
      \ 2.3."
    options: []
  - name: "org.openrewrite.java.spring.data.MigrateQuerydslJpaRepository"
    description: "`QuerydslJpaRepository<T, ID extends Serializable>` was deprecated\
      \ in Spring Data 2.1."
    options: []
  - name: "org.openrewrite.java.spring.data.UpgradeSpringData_2_3"
    description: "Upgrade to Spring Data to 2.3 from any prior version."
    options: []
  - name: "org.openrewrite.java.spring.data.UpgradeSpringData_2_5"
    description: "Upgrade to Spring Data to 2.5 from any prior version."
    options: []
  - name: "org.openrewrite.java.spring.data.UseJpaRepositoryDeleteAllInBatch"
    description: "`JpaRepository#deleteInBatch(Iterable)` was deprecated in 2.5."
    options: []
  - name: "org.openrewrite.java.spring.data.UseJpaRepositoryGetById"
    description: "`JpaRepository#getOne(ID)` was deprecated in 2.5."
    options: []
  - name: "org.openrewrite.java.spring.framework.EnvironmentAcceptsProfiles"
    description: "`Environment#acceptsProfiles(String...)` was deprecated in Spring\
      \ Framework 5.1."
    options: []
  - name: "org.openrewrite.java.spring.framework.JdbcTemplateObjectArrayArgToVarArgs"
    description: "`JdbcTemplate` signatures with `Object[]` arguments are deprecated,\
      \ in favor of their existing varargs equivalents."
    options: []
  - name: "org.openrewrite.java.spring.framework.MigrateInstantiationAwareBeanPostProcessorAdapter"
    description: "As of Spring-Framework 5.3 `InstantiationAwareBeanPostProcessorAdapter`\
      \ is deprecated in favor of the existing default methods in `SmartInstantiationAwareBeanPostProcessor`."
    options: []
  - name: "org.openrewrite.java.spring.framework.MigrateUtf8MediaTypes"
    description: "Spring-Web MediaTypes `APPLICATION_JSON_UTF8` and `APPLICATION_PROBLEM_JSON_UTF8`\
      \ were deprecated in 5.2."
    options: []
  - name: "org.openrewrite.java.spring.framework.UpgradeSpringFrameworkDependencies"
    description: "Upgrade spring-framework 5.x Maven dependencies using a Node Semver\
      \ advanced range selector."
    options:
    - name: "newVersion"
      type: "String"
      required: true
  - name: "org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_1"
    description: "Upgrade to Spring Framework to 5.1 from any prior version."
    options: []
  - name: "org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_2"
    description: "Upgrade to Spring Framework to 5.2 from any prior version."
    options: []
  - name: "org.openrewrite.java.spring.framework.UpgradeSpringFramework_5_3"
    description: "Upgrade to Spring Framework to 5.3 from any prior version."
    options: []
  - name: "org.openrewrite.java.spring.framework.UseObjectUtilsIsEmpty"
    description: "`StringUtils#isEmpty(Object)` was deprecated in 5.3."
    options: []
  - name: "org.openrewrite.maven.spring.UpgradeExplicitSpringBootDependencies"
    description: "Upgrades un-managed spring-boot project dependencies according to\
      \ the specified spring-boot version"
    options:
    - name: "fromVersion"
      type: "String"
      required: true
    - name: "toVersion"
      type: "String"
      required: true
- artifactId: "rewrite-terraform"
  version: "1.13.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.terraform.AddConfiguration"
    description: "If the configuration has a different value, leave it alone. If it\
      \ is missing, add it."
    options:
    - name: "content"
      type: "String"
      required: true
    - name: "resourceName"
      type: "String"
      required: true
  - name: "org.openrewrite.terraform.SecureRandom"
    description: ""
    options:
    - name: "byteLength"
      type: "Integer"
      required: false
  - name: "org.openrewrite.terraform.aws.AWSBestPractices"
    description: "Securely operate on Amazon Web Services."
    options: []
  - name: "org.openrewrite.terraform.aws.DisableInstanceMetadataServiceV1"
    description: "As a request/response method IMDSv1 is prone to local misconfigurations."
    options: []
  - name: "org.openrewrite.terraform.aws.EnableApiGatewayCaching"
    description: "Enable caching for all methods of API Gateway."
    options: []
  - name: "org.openrewrite.terraform.aws.EnableDynamoDbPITR"
    description: "DynamoDB Point-In-Time Recovery (PITR) is an automatic backup service\
      \ for DynamoDB table data that helps protect your DynamoDB tables from accidental\
      \ write or delete operations."
    options: []
  - name: "org.openrewrite.terraform.aws.EnableECRScanOnPush"
    description: "ECR Image Scanning assesses and identifies operating system vulnerabilities.\
      \ Using automated image scans you can ensure container image vulnerabilities\
      \ are found before getting pushed to production."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptAuroraClusters"
    description: "Native Aurora encryption helps protect your cloud applications and\
      \ fulfils compliance requirements for data-at-rest encryption."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptCodeBuild"
    description: "Build artifacts, such as a cache, logs, exported raw test report\
      \ data files, and build results, are encrypted by default using CMKs for Amazon\
      \ S3 that are managed by the AWS Key Management Service."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptDAXStorage"
    description: "DAX encryption at rest automatically integrates with AWS KMS for\
      \ managing the single service default key used to encrypt clusters."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptDocumentDB"
    description: "The encryption feature available for Amazon DocumentDB clusters\
      \ provides an additional layer of data protection by helping secure your data\
      \ against unauthorized access to the underlying storage."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptEBSSnapshots"
    description: "EBS snapshots should be encrypted, as they often include sensitive\
      \ information, customer PII or CPNI."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptEBSVolumeLaunchConfiguration"
    description: "EBS volumes allow you to create encrypted launch configurations\
      \ when creating EC2 instances and auto scaling. When the entire EBS volume is\
      \ encrypted, data stored at rest on the volume, disk I/O, snapshots created\
      \ from the volume, and data in-transit between EBS and EC2 are all encrypted."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptEBSVolumes"
    description: "Encrypting EBS volumes ensures that replicated copies of your images\
      \ are secure even if they are accidentally exposed. AWS EBS encryption uses\
      \ AWS KMS customer master keys (CMK) when creating encrypted volumes and snapshots.\
      \ Storing EBS volumes in their encrypted state reduces the risk of data exposure\
      \ or data loss."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptEFSVolumesInECSTaskDefinitionsInTransit"
    description: "Enable attached EFS definitions in ECS tasks to use encryption in\
      \ transit."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptElastiCacheRedisAtRest"
    description: "ElastiCache for Redis offers default encryption at rest as a service."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptElastiCacheRedisInTransit"
    description: "ElastiCache for Redis offers optional encryption in transit. In-transit\
      \ encryption provides an additional layer of data protection when transferring\
      \ data over standard HTTPS protocol."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptNeptuneStorage"
    description: "Encryption of Neptune storage protects data and metadata against\
      \ unauthorized access."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptRDSClusters"
    description: "Native RDS encryption helps protect your cloud applications and\
      \ fulfils compliance requirements for data-at-rest encryption."
    options: []
  - name: "org.openrewrite.terraform.aws.EncryptRedshift"
    description: "Redshift clusters should be securely encrypted at rest."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSCMKRotationIsEnabled"
    description: "Ensure AWS CMK rotation is enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSEFSWithEncryptionForDataAtRestIsEnabled"
    description: "Ensure AWS EFS with encryption for data at rest is enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSEKSClusterEndpointAccessIsPubliclyDisabled"
    description: "Ensure AWS EKS cluster endpoint access is publicly disabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSElasticsearchDomainEncryptionForDataAtRestIsEnabled"
    description: "Ensure AWS Elasticsearch domain encryption for data at rest is enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSElasticsearchDomainsHaveEnforceHTTPSEnabled"
    description: "Ensure AWS Elasticsearch domains have `EnforceHTTPS` enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSElasticsearchHasNodeToNodeEncryptionEnabled"
    description: "Ensure AWS Elasticsearch has node-to-node encryption enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSIAMPasswordPolicyHasAMinimumOf14Characters"
    description: "Ensure AWS IAM password policy has a minimum of 14 characters."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSLambdaFunctionIsConfiguredForFunctionLevelConcurrentExecutionLimit"
    description: "Ensure AWS Lambda function is configured for function-level concurrent\
      \ execution limit."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSLambdaFunctionsHaveTracingEnabled"
    description: "Ensure AWS Lambda functions have tracing enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSRDSDatabaseInstanceIsNotPubliclyAccessible"
    description: "Ensure AWS RDS database instance is not publicly accessible."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAWSS3ObjectVersioningIsEnabled"
    description: "Ensure AWS S3 object versioning is enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureAmazonEKSControlPlaneLoggingEnabledForAllLogTypes"
    description: "Ensure Amazon EKS control plane logging enabled for all log types."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureCloudTrailLogFileValidationIsEnabled"
    description: "Ensure CloudTrail log file validation is enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureDataStoredInAnS3BucketIsSecurelyEncryptedAtRest"
    description: "Ensure data stored in an S3 bucket is securely encrypted at rest."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureDetailedMonitoringForEC2InstancesIsEnabled"
    description: "Ensure detailed monitoring for EC2 instances is enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureEC2IsEBSOptimized"
    description: "Ensure EC2 is EBS optimized."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureECRRepositoriesAreEncrypted"
    description: "Ensure ECR repositories are encrypted."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureEnhancedMonitoringForAmazonRDSInstancesIsEnabled"
    description: "Ensure enhanced monitoring for Amazon RDS instances is enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyExpiresPasswordsWithin90DaysOrLess"
    description: "Ensure IAM password policy expires passwords within 90 days or less."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyPreventsPasswordReuse"
    description: "Ensure IAM password policy prevents password reuse."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneLowercaseLetter"
    description: "Ensure IAM password policy requires at least one lowercase letter."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneNumber"
    description: "Ensure IAM password policy requires at least one number."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneSymbol"
    description: "Ensure IAM password policy requires at least one symbol."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureIAMPasswordPolicyRequiresAtLeastOneUppercaseLetter"
    description: "Ensure IAM password policy requires at least one uppercase letter."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureKinesisStreamIsSecurelyEncrypted"
    description: "Ensure Kinesis Stream is securely encrypted."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureRDSDatabaseHasIAMAuthenticationEnabled"
    description: "Ensure RDS database has IAM authentication enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureRDSInstancesHaveMultiAZEnabled"
    description: "Ensure RDS instances have Multi-AZ enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureRespectiveLogsOfAmazonRDSAreEnabled"
    description: "Ensure respective logs of Amazon RDS are enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureTheS3BucketHasAccessLoggingEnabled"
    description: "Ensure the S3 bucket has access logging enabled."
    options: []
  - name: "org.openrewrite.terraform.aws.EnsureVPCSubnetsDoNotAssignPublicIPByDefault"
    description: "Ensure VPC subnets do not assign public IP by default."
    options: []
  - name: "org.openrewrite.terraform.aws.ImmutableECRTags"
    description: "Amazon ECR supports immutable tags, preventing image tags from being\
      \ overwritten. In the past, ECR tags could have been overwritten, this could\
      \ be overcome by requiring users to uniquely identify an image using a naming\
      \ convention."
    options: []
  - name: "org.openrewrite.terraform.aws.UseHttpsForCloudfrontDistribution"
    description: "Secure communication by default."
    options: []
  - name: "org.openrewrite.terraform.azure.AzureBestPractices"
    description: "Securely operate on Microsoft Azure."
    options: []
  - name: "org.openrewrite.terraform.azure.DisableKubernetesDashboard"
    description: "Disabling the dashboard eliminates it as an attack vector. The dashboard\
      \ add-on is disabled by default for all new clusters created on Kubernetes 1.18\
      \ or greater."
    options: []
  - name: "org.openrewrite.terraform.azure.EnableAzureStorageAccountTrustedMicrosoftServicesAccess"
    description: "Certain Microsoft services that interact with storage accounts operate\
      \ from networks that cannot be granted access through network rules. Using this\
      \ configuration, you can allow the set of trusted Microsoft services to bypass\
      \ those network rules."
    options: []
  - name: "org.openrewrite.terraform.azure.EnableAzureStorageSecureTransferRequired"
    description: "Microsoft recommends requiring secure transfer for all storage accounts."
    options: []
  - name: "org.openrewrite.terraform.azure.EnableGeoRedundantBackupsOnPostgreSQLServer"
    description: "Ensure PostgreSQL server enables geo-redundant backups."
    options: []
  - name: "org.openrewrite.terraform.azure.EncryptAzureVMDataDiskWithADECMK"
    description: "Ensure Azure VM data disk is encrypted with ADE/CMK."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAKSPoliciesAddOn"
    description: "Azure Policy Add-on for Kubernetes service (AKS) extends Gatekeeper\
      \ v3, an admission controller webhook for Open Policy Agent (OPA), to apply\
      \ at-scale enforcements and safeguards on your clusters in a centralized, consistent\
      \ manner."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAKVSecretsHaveAnExpirationDateSet"
    description: "Ensure AKV secrets have an expiration date set."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureASecurityContactPhoneNumberIsPresent"
    description: "Ensure a security contact phone number is present."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureActivityLogRetentionIsSetTo365DaysOrGreater"
    description: "Ensure activity log retention is set to 365 days or greater."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAllKeysHaveAnExpirationDate"
    description: "Ensure all keys have an expiration date."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAppServiceEnablesDetailedErrorMessages"
    description: "Ensure app service enables detailed error messages."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAppServiceEnablesFailedRequestTracing"
    description: "Ensure app service enables failed request tracing."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAppServiceEnablesHTTPLogging"
    description: "Ensure app service enables HTTP logging."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAppServicesUseAzureFiles"
    description: "Ensure app services use Azure files."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAzureAppServiceWebAppRedirectsHTTPToHTTPS"
    description: "Ensure Azure App Service Web app redirects HTTP to HTTPS."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAzureApplicationGatewayHasWAFEnabled"
    description: "Ensure Azure application gateway has WAF enabled."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAzureKeyVaultIsRecoverable"
    description: "Ensure Azure key vault is recoverable."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAzureNetworkWatcherNSGFlowLogsRetentionIsGreaterThan90Days"
    description: "Ensure Azure Network Watcher NSG flow logs retention is greater\
      \ than 90 days."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAzurePostgreSQLDatabaseServerWithSSLConnectionIsEnabled"
    description: "Ensure Azure PostgreSQL database server with SSL connection is enabled."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAzureSQLServerAuditLogRetentionIsGreaterThan90Days"
    description: "Ensure Azure SQL server audit log retention is greater than 90 days."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAzureSQLServerSendAlertsToFieldValueIsSet"
    description: "Ensure Azure SQL server send alerts to field value is set."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureAzureSQLServerThreatDetectionAlertsAreEnabledForAllThreatTypes"
    description: "Ensure Azure SQL Server threat detection alerts are enabled for\
      \ all threat types."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureFTPDeploymentsAreDisabled"
    description: "Ensure FTP Deployments are disabled."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureKeyVaultAllowsFirewallRulesSettings"
    description: "Ensure key vault allows firewall rules settings."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureKeyVaultEnablesPurgeProtection"
    description: "Ensure key vault enables purge protection."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureKeyVaultKeyIsBackedByHSM"
    description: "Ensure key vault key is backed by HSM."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureKeyVaultSecretsHaveContentTypeSet"
    description: "Ensure key vault secrets have `content_type` set."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureLogProfileIsConfiguredToCaptureAllActivities"
    description: "Ensure log profile is configured to capture all activities."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureMSSQLServersHaveEmailServiceAndCoAdministratorsEnabled"
    description: "Ensure MSSQL servers have email service and co-administrators enabled."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureManagedIdentityProviderIsEnabledForAppServices"
    description: "Ensure managed identity provider is enabled for app services."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureMySQLIsUsingTheLatestVersionOfTLSEncryption"
    description: "Ensure MySQL is using the latest version of TLS encryption."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureMySQLServerDatabasesHaveEnforceSSLConnectionEnabled"
    description: "Ensure MySQL server databases have Enforce SSL connection enabled."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureMySQLServerDisablesPublicNetworkAccess"
    description: "Ensure MySQL server disables public network access."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureMySQLServerEnablesGeoRedundantBackups"
    description: "Ensure MySQL server enables geo-redundant backups."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureMySQLServerEnablesThreatDetectionPolicy"
    description: "Ensure MySQL server enables Threat Detection policy."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsurePostgreSQLServerDisablesPublicNetworkAccess"
    description: "Ensure PostgreSQL server disables public network access."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsurePostgreSQLServerEnablesInfrastructureEncryption"
    description: "Ensure PostgreSQL server enables infrastructure encryption."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsurePostgreSQLServerEnablesThreatDetectionPolicy"
    description: "Ensure PostgreSQL server enables Threat Detection policy."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsurePublicNetworkAccessEnabledIsSetToFalseForMySQLServers"
    description: "Ensure public network access enabled is set to False for mySQL servers."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureSendEmailNotificationForHighSeverityAlertsIsEnabled"
    description: "Ensure Send email notification for high severity alerts is enabled."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureSendEmailNotificationForHighSeverityAlertsToAdminsIsEnabled"
    description: "Ensure Send email notification for high severity alerts to admins\
      \ is enabled."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureStandardPricingTierIsSelected"
    description: "Ensure standard pricing tier is selected."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureStorageAccountUsesLatestTLSVersion"
    description: "Communication between an Azure Storage account and a client application\
      \ is encrypted using Transport Layer Security (TLS). Microsoft recommends using\
      \ the latest version of TLS for all your Microsoft Azure App Service web applications."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureTheStorageContainerStoringActivityLogsIsNotPubliclyAccessible"
    description: "Ensure the storage container storing activity logs is not publicly\
      \ accessible."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureWebAppHasIncomingClientCertificatesEnabled"
    description: "Ensure Web App has incoming client certificates enabled."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureWebAppUsesTheLatestVersionOfHTTP"
    description: "Ensure Web App uses the latest version of HTTP."
    options: []
  - name: "org.openrewrite.terraform.azure.EnsureWebAppUsesTheLatestVersionOfTLSEncryption"
    description: "Ensure Web App uses the latest version of TLS encryption."
    options: []
  - name: "org.openrewrite.terraform.azure.SetAzureStorageAccountDefaultNetworkAccessToDeny"
    description: "Ensure Azure Storage Account default network access is set to Deny."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnablePodSecurityPolicyControllerOnGKEClusters"
    description: "Ensure `PodSecurityPolicy` controller is enabled on Google Kubernetes\
      \ Engine (GKE) clusters."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnableVPCFlowLogsAndIntranodeVisibility"
    description: "Enable VPC flow logs and intranode visibility."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnableVPCFlowLogsForSubnetworks"
    description: "Ensure GCP VPC flow logs for subnets are enabled. Flow Logs capture\
      \ information on IP traffic moving through network interfaces. This information\
      \ can be used to monitor anomalous traffic and provide security insights."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsureBinaryAuthorizationIsUsed"
    description: "Ensure binary authorization is used."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsureComputeInstancesLaunchWithShieldedVMEnabled"
    description: "Ensure compute instances launch with shielded VM enabled."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsureGCPCloudStorageBucketWithUniformBucketLevelAccessAreEnabled"
    description: "Ensure GCP cloud storage bucket with uniform bucket-level access\
      \ are enabled."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsureGCPKubernetesClusterNodeAutoRepairConfigurationIsEnabled"
    description: "Ensure GCP Kubernetes cluster node auto-repair configuration is\
      \ enabled."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsureGCPKubernetesEngineClustersHaveLegacyComputeEngineMetadataEndpointsDisabled"
    description: "Ensure GCP Kubernetes engine clusters have legacy compute engine\
      \ metadata endpoints disabled."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsureGCPVMInstancesHaveBlockProjectWideSSHKeysFeatureEnabled"
    description: "Ensure GCP VM instances have block project-wide SSH keys feature\
      \ enabled."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsureIPForwardingOnInstancesIsDisabled"
    description: "Ensure IP forwarding on instances is disabled."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsurePrivateClusterIsEnabledWhenCreatingKubernetesClusters"
    description: "Ensure private cluster is enabled when creating Kubernetes clusters."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsureSecureBootForShieldedGKENodesIsEnabled"
    description: "Ensure secure boot for shielded GKE nodes is enabled."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsureShieldedGKENodesAreEnabled"
    description: "Ensure shielded GKE nodes are enabled."
    options: []
  - name: "org.openrewrite.terraform.gcp.EnsureTheGKEMetadataServerIsEnabled"
    description: "Ensure the GKE metadata server is enabled."
    options: []
  - name: "org.openrewrite.terraform.gcp.GCPBestPractices"
    description: "Securely operate on Google Cloud Platform."
    options: []
  - name: "org.openrewrite.terraform.search.FindResource"
    description: "Find a Terraform resource by resource type."
    options:
    - name: "resourceName"
      type: "String"
      required: true
- artifactId: "rewrite-testing-frameworks"
  version: "1.30.0"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.java.testing.assertj.Assertj"
    description: "Migrates JUnit asserts to AssertJ and applies best practices to\
      \ assertions."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitAssertArrayEqualsToAssertThat"
    description: "Convert JUnit-style `assertArrayEquals()` to assertJ's `assertThat().contains()`\
      \ equivalents."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitAssertEqualsToAssertThat"
    description: "Convert JUnit-style `assertEquals()` to AssertJ's `assertThat().isEqualTo()`."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitAssertFalseToAssertThat"
    description: "Convert JUnit-style `assertFalse()` to AssertJ's `assertThat().isFalse()`."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitAssertNotEqualsToAssertThat"
    description: "Convert JUnit-style `assertNotEquals()` to AssertJ's `assertThat().isNotEqualTo()`."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitAssertNotNullToAssertThat"
    description: "Convert JUnit-style `assertNotNull()` to AssertJ's `assertThat().isNotNull()`."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitAssertNullToAssertThat"
    description: "Convert JUnit-style `assertNull()` to AssertJ's `assertThat().isNull()`."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitAssertSameToAssertThat"
    description: "Convert JUnit-style `assertSame()` to AssertJ's `assertThat().isSameAs()`."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitAssertThrowsToAssertExceptionType"
    description: "Convert `JUnit#AssertThrows` to `AssertJ#assertThatExceptionOfType`\
      \ to allow for chained assertions on the thrown exception."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitAssertTrueToAssertThat"
    description: "Convert JUnit-style `assertTrue()` to AssertJ's `assertThat().isTrue()`."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitFailToAssertJFail"
    description: "Convert JUnit-style `fail()` to AssertJ's `fail()`."
    options: []
  - name: "org.openrewrite.java.testing.assertj.JUnitToAssertj"
    description: "AssertJ provides a rich set of assertions, truly helpful error messages,\
      \ improves test code readability."
    options: []
  - name: "org.openrewrite.java.testing.assertj.StaticImports"
    description: "Consistently use a static import rather than inlining the `Assertions`\
      \ class name in tests."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.AssertEqualsNullToAssertNull"
    description: "Using `assertNull(a)` is simpler and more clear."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.AssertFalseEqualsToAssertNotEquals"
    description: "Using `assertNotEquals(a,b)` is simpler and more clear."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.AssertFalseNegationToAssertTrue"
    description: "Using `assertTrue` is simpler and more clear."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.AssertFalseNullToAssertNotNull"
    description: "Using `assertNotNull(a)` is simpler and more clear."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.AssertTrueComparisonToAssertEquals"
    description: "Using `assertEquals(a,b)` is simpler and more clear."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.AssertTrueEqualsToAssertEquals"
    description: "Using `assertEquals(a,b)` is simpler and more clear."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.AssertTrueNegationToAssertFalse"
    description: "Using `assertFalse` is simpler and more clear."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.AssertTrueNullToAssertNull"
    description: "Using `assertNull(a)` is simpler and more clear."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.BestPractices"
    description: "Applies best practices to tests."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.RemoveEmptyTests"
    description: "Removes empty methods with a `@Test` annotation if the body does\
      \ not have comments."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.RemoveTestPrefix"
    description: "Remove `test` from methods with `@Test`, `@ParameterizedTest`, `@RepeatedTest`\
      \ or `@TestFactory`. They no longer have to prefix test to be usable by JUnit\
      \ 5."
    options: []
  - name: "org.openrewrite.java.testing.cleanup.TestsShouldIncludeAssertions"
    description: "For tests not having any assertions, wrap the statements with JUnit\
      \ Jupiter's `Assertions#assertThrowDoesNotThrow(..)`."
    options:
    - name: "additionalAsserts"
      type: "String"
      required: false
  - name: "org.openrewrite.java.testing.cleanup.TestsShouldNotBePublic"
    description: "Remove `public` and optionally `protected` modifiers from methods\
      \ with `@Test`, `@ParameterizedTest`, `@RepeatedTest`, `@TestFactory`, `@BeforeEach`\
      \ or `@AfterEach`. They no longer have to be public visibility to be usable\
      \ by JUnit 5."
    options:
    - name: "removeProtectedModifiers"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.java.testing.cucumber.CucumberAnnotationToSuite"
    description: "Replace @Cucumber with @Suite and @SelectClasspathResource(\"cucumber/annotated/class/package\"\
      )."
    options: []
  - name: "org.openrewrite.java.testing.cucumber.CucumberJava8HookDefinitionToCucumberJava"
    description: "Replace LamdbaGlue hook definitions with new annotated methods with\
      \ the same body"
    options: []
  - name: "org.openrewrite.java.testing.cucumber.CucumberJava8StepDefinitionToCucumberJava"
    description: "Replace StepDefinitionBody methods with StepDefinitionAnnotations\
      \ on new methods with the same body"
    options: []
  - name: "org.openrewrite.java.testing.cucumber.CucumberJava8ToJava"
    description: "Migrates Cucumber-Java8 step definitions and LambdaGlue hooks to\
      \ Cucumber-Java annotated methods."
    options: []
  - name: "org.openrewrite.java.testing.cucumber.CucumberToJunitPlatformSuite"
    description: "Migrates Cucumber tests to Junit Test Suites."
    options: []
  - name: "org.openrewrite.java.testing.cucumber.DropSummaryPrinter"
    description: "Replace SummaryPrinter with Plugin, if not already present."
    options: []
  - name: "org.openrewrite.java.testing.cucumber.RegexToCucumberExpression"
    description: "Strip regex prefix and suffix from step annotation expressions arguments\
      \ where possible."
    options: []
  - name: "org.openrewrite.java.testing.cucumber.UpgradeCucumber2x"
    description: "Upgrade to Cucumber-JVM 2.x from any previous version."
    options: []
  - name: "org.openrewrite.java.testing.cucumber.UpgradeCucumber5x"
    description: "Upgrade to Cucumber-JVM 5.x from any previous version."
    options: []
  - name: "org.openrewrite.java.testing.cucumber.UpgradeCucumber7x"
    description: "Upgrade to Cucumber-JVM 7.x from any previous version."
    options: []
  - name: "org.openrewrite.java.testing.hamcrest.AddHamcrestIfUsed"
    description: "JUnit Jupiter does not include hamcrest as a transitive dependency.\
      \ If needed, add a direct dependency."
    options: []
  - name: "org.openrewrite.java.testing.junit5.AddMissingNested"
    description: "Adds `@Nested` to inner classes that contain JUnit 5 tests."
    options: []
  - name: "org.openrewrite.java.testing.junit5.AssertToAssertions"
    description: "Change JUnit 4's `org.junit.Assert` into JUnit Jupiter's `org.junit.jupiter.api.Assertions`."
    options: []
  - name: "org.openrewrite.java.testing.junit5.CategoryToTag"
    description: "Transforms the JUnit 4 `@Category`, which can list multiple categories,\
      \ into one `@Tag` annotation per category listed."
    options: []
  - name: "org.openrewrite.java.testing.junit5.CleanupAssertions"
    description: "Simplifies JUnit Jupiter assertions to their most-direct equivalents"
    options: []
  - name: "org.openrewrite.java.testing.junit5.CleanupJUnitImports"
    description: "Removes unused `org.junit` import symbols."
    options: []
  - name: "org.openrewrite.java.testing.junit5.EnclosedToNested"
    description: "Removes the `Enclosed` specification from a class, and adds `Nested`\
      \ to its inner classes"
    options: []
  - name: "org.openrewrite.java.testing.junit5.ExpectedExceptionToAssertThrows"
    description: "Replace usages of JUnit 4's `@Rule ExpectedException` with JUnit\
      \ 5's `Assertions.assertThrows()`."
    options: []
  - name: "org.openrewrite.java.testing.junit5.IgnoreToDisabled"
    description: "Migrates JUnit 4.x `@Ignore` to JUnit Jupiter `@Disabled`."
    options: []
  - name: "org.openrewrite.java.testing.junit5.JUnit4to5Migration"
    description: "Migrates JUnit 4.x tests to JUnit Jupiter."
    options: []
  - name: "org.openrewrite.java.testing.junit5.JUnit5BestPractices"
    description: "Applies best practices to tests."
    options: []
  - name: "org.openrewrite.java.testing.junit5.JUnitParamsRunnerToParameterized"
    description: "Convert Pragmatists Parameterized test to the JUnit Jupiter ParameterizedTest\
      \ equivalent."
    options: []
  - name: "org.openrewrite.java.testing.junit5.LifecycleNonPrivate"
    description: "Make JUnit 5's `@AfterAll`, `@AfterEach`, `@BeforeAll` and `@BeforeEach`\
      \ non private."
    options: []
  - name: "org.openrewrite.java.testing.junit5.MigrateJUnitTestCase"
    description: "Convert JUnit 4 `TestCase` to JUnit Jupiter."
    options: []
  - name: "org.openrewrite.java.testing.junit5.MockitoJUnitToMockitoExtension"
    description: "Replaces `MockitoJUnit` rules with `MockitoExtension`."
    options: []
  - name: "org.openrewrite.java.testing.junit5.ParameterizedRunnerToParameterized"
    description: "Convert JUnit4 parameterized runner the JUnit Jupiter parameterized\
      \ test equivalent."
    options: []
  - name: "org.openrewrite.java.testing.junit5.RemoveObsoleteRunners"
    description: "Some JUnit4 `@RunWith` annotations do not require replacement with\
      \ an equivalent JUnit Jupiter `@ExtendsWith` annotation. This can be used to\
      \ remove those runners that either do not have a JUnit Jupiter equivalent or\
      \ do not require a replacement as part of JUnit 4 to 5 migration."
    options:
    - name: "obsoleteRunners"
      type: "List"
      required: true
  - name: "org.openrewrite.java.testing.junit5.RunnerToExtension"
    description: "Replace runners with the JUnit Jupiter extension equivalent."
    options:
    - name: "extension"
      type: "String"
      required: true
    - name: "runners"
      type: "List"
      required: true
  - name: "org.openrewrite.java.testing.junit5.StaticImports"
    description: "Always use a static import for assertion methods."
    options: []
  - name: "org.openrewrite.java.testing.junit5.TempDirNonFinal"
    description: "Make JUnit 5's `org.junit.jupiter.api.io.TempDir` fields non final."
    options: []
  - name: "org.openrewrite.java.testing.junit5.TemporaryFolderToTempDir"
    description: "Translates JUnit4's `org.junit.rules.TemporaryFolder` into JUnit\
      \ 5's `org.junit.jupiter.api.io.TempDir`."
    options: []
  - name: "org.openrewrite.java.testing.junit5.TestRuleToTestInfo"
    description: "Replace usages of JUnit 4's `@Rule TestName` with JUnit 5's TestInfo."
    options: []
  - name: "org.openrewrite.java.testing.junit5.UpdateBeforeAfterAnnotations"
    description: "Replace JUnit 4's `@Before`, `@BeforeClass`, `@After`, and `@AfterClass`\
      \ annotations with their JUnit Jupiter equivalents."
    options: []
  - name: "org.openrewrite.java.testing.junit5.UpdateMockWebServer"
    description: "Replace usages of okhttp3 3.x @Rule MockWebServer with 4.x MockWebServer."
    options: []
  - name: "org.openrewrite.java.testing.junit5.UpdateTestAnnotation"
    description: "Update usages of JUnit 4's `@org.junit.Test` annotation to JUnit5's\
      \ `org.junit.jupiter.api.Test` annotation."
    options: []
  - name: "org.openrewrite.java.testing.junit5.UseHamcrestAssertThat"
    description: "JUnit 4's `Assert#assertThat(..)` This method was deprecated in\
      \ JUnit 4 and removed in JUnit Jupiter."
    options: []
  - name: "org.openrewrite.java.testing.junit5.UseMockitoExtension"
    description: "Migrate uses of `@RunWith(MockitoJUnitRunner.class)` (and similar\
      \ annotations) to `@ExtendWith(MockitoExtension.class)`."
    options: []
  - name: "org.openrewrite.java.testing.junit5.UseTestMethodOrder"
    description: "JUnit optionally allows test method execution order to be specified.\
      \ This Recipe replaces JUnit4 test execution ordering annotations with JUnit5\
      \ replacements."
    options: []
  - name: "org.openrewrite.java.testing.junit5.UseWiremockExtension"
    description: "As of 2.31.0, wiremock [supports JUnit 5](http://wiremock.org/docs/junit-jupiter/)\
      \ via an extension."
    options: []
  - name: "org.openrewrite.java.testing.junit5.VertxUnitToVertxJunit5"
    description: "Migrates Vertx `@RunWith` `VertxUnitRunner` to the JUnit Jupiter\
      \ `@ExtendWith` `VertxExtension`."
    options: []
  - name: "org.openrewrite.java.testing.mockito.CleanupMockitoImports"
    description: "Removes unused `org.mockito` import symbols, unless its possible\
      \ they are associated with method invocations having null or unknown type information."
    options: []
  - name: "org.openrewrite.java.testing.mockito.MockUtilsToStatic"
    description: "Best-effort attempt to remove Mockito `MockUtil` instances."
    options: []
  - name: "org.openrewrite.java.testing.mockito.Mockito1to3Migration"
    description: "Upgrade Mockito from 1.x to 3.x."
    options: []
  - name: "org.openrewrite.java.testing.mockito.Mockito1to4Migration"
    description: "Upgrade Mockito from 1.x to 4.x."
    options: []
  - name: "org.openrewrite.java.testing.mockito.MockitoJUnitRunnerSilentToExtension"
    description: "Replace `@RunWith(MockitoJUnitRunner.Silent.class)` with `@ExtendWith(MockitoExtension.class)`\
      \ and `@MockitoSettings(strictness = Strictness.LENIENT)`."
    options: []
- artifactId: "rewrite-xml"
  version: "7.32.1"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.xml.AddCommentToXmlTag"
    description: "Adds a comment as the first element in a `XML` tag."
    options:
    - name: "commentText"
      type: "String"
      required: true
    - name: "xPath"
      type: "String"
      required: true
  - name: "org.openrewrite.xml.ChangeTagAttribute"
    description: "Alters XML Attribute value within specified element."
    options:
    - name: "attributeName"
      type: "String"
      required: true
    - name: "elementName"
      type: "String"
      required: true
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "newValue"
      type: "String"
      required: true
    - name: "oldValue"
      type: "String"
      required: false
  - name: "org.openrewrite.xml.ChangeTagName"
    description: "Alters the name of XML tags matching the provided expression."
    options:
    - name: "elementName"
      type: "String"
      required: true
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "newName"
      type: "String"
      required: true
  - name: "org.openrewrite.xml.RemoveTrailingWhitespace"
    description: "Remove any extra trailing whitespace from the end of each line."
    options: []
  - name: "org.openrewrite.xml.format.AutoFormat"
    description: "Indents XML using the most common indentation size and tabs or space\
      \ choice in use in the file."
    options: []
  - name: "org.openrewrite.xml.format.LineBreaks"
    description: "Add line breaks at appropriate places between XML syntax elements."
    options: []
  - name: "org.openrewrite.xml.format.NormalizeFormat"
    description: "Move whitespace to the outermost AST element possible."
    options: []
  - name: "org.openrewrite.xml.format.NormalizeLineBreaks"
    description: "Consistently use either Windows style (CRLF) or Linux style (LF)\
      \ line breaks. If no `GeneralFormatStyle` is specified this will use whichever\
      \ style of line endings are more common."
    options: []
  - name: "org.openrewrite.xml.format.NormalizeTabsOrSpaces"
    description: "Consistently use either tabs or spaces in indentation."
    options: []
  - name: "org.openrewrite.xml.format.TabsAndIndents"
    description: "Format tabs and indents in XML code."
    options: []
  - name: "org.openrewrite.xml.search.FindTags"
    description: "Find XML tags by XPath expression."
    options:
    - name: "xPath"
      type: "String"
      required: true
  - name: "org.openrewrite.xml.security.DateBoundSuppressions"
    description: "Adds an expiration date to all OWASP suppressions in order to ensure\
      \ that they are periodically reviewed. For use with the OWASP `dependency-check`\
      \ tool. More details: https://jeremylong.github.io/DependencyCheck/general/suppression.html"
    options:
    - name: "untilDate"
      type: "String"
      required: false
  - name: "org.openrewrite.xml.security.RemoveSuppressions"
    description: "Remove all OWASP suppressions with a suppression end date in the\
      \ past, as these are no longer valid. For use with the OWASP `dependency-check`\
      \ tool. More details on OWASP suppression files: https://jeremylong.github.io/DependencyCheck/general/suppression.html"
    options: []
- artifactId: "rewrite-yaml"
  version: "7.32.1"
  markdownRecipeDescriptors:
  - name: "org.openrewrite.yaml.ChangeKey"
    description: "Change a YAML mapping entry key leaving the value intact."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "newKey"
      type: "String"
      required: true
    - name: "oldKeyPath"
      type: "String"
      required: true
  - name: "org.openrewrite.yaml.ChangePropertyKey"
    description: "Change a YAML property key leaving the value intact. Nested YAML\
      \ mappings are interpreted as dot separated property names, i.e. as Spring Boot\
      \ interprets application.yml files."
    options:
    - name: "except"
      type: "List"
      required: false
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "newPropertyKey"
      type: "String"
      required: true
    - name: "oldPropertyKey"
      type: "String"
      required: true
    - name: "relaxedBinding"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.yaml.ChangeValue"
    description: "Change a YAML mapping entry value leaving the key intact."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "oldKeyPath"
      type: "String"
      required: true
    - name: "value"
      type: "String"
      required: true
  - name: "org.openrewrite.yaml.CoalesceProperties"
    description: "Simplify nested map hierarchies into their simplest dot separated\
      \ property form, i.e. as Spring Boot interprets application.yml files."
    options: []
  - name: "org.openrewrite.yaml.CopyValue"
    description: "Copies a YAML value from one key to another. The existing key/value\
      \ pair remains unaffected by this change. If either the source or destination\
      \ key path does not exist, no value will be copied. Furthermore, copies are\
      \ limited to scalar values, not whole YAML blocks."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "newKey"
      type: "String"
      required: true
    - name: "oldKeyPath"
      type: "String"
      required: true
  - name: "org.openrewrite.yaml.DeleteKey"
    description: "Delete a YAML mapping entry key."
    options:
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "keyPath"
      type: "String"
      required: true
  - name: "org.openrewrite.yaml.DeleteProperty"
    description: "Delete a YAML property. Nested YAML mappings are interpreted as\
      \ dot separated property names, i.e.  as Spring Boot interprets application.yml\
      \ files like `a.b.c.d` or `a.b.c:d`."
    options:
    - name: "coalesce"
      type: "Boolean"
      required: false
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "propertyKey"
      type: "String"
      required: true
    - name: "relaxedBinding"
      type: "Boolean"
      required: false
  - name: "org.openrewrite.yaml.MergeYaml"
    description: "Merge a YAML snippet with an existing YAML document."
    options:
    - name: "acceptTheirs"
      type: "Boolean"
      required: false
    - name: "fileMatcher"
      type: "String"
      required: false
    - name: "key"
      type: "String"
      required: true
    - name: "objectIdentifyingProperty"
      type: "String"
      required: false
    - name: "yaml"
      type: "String"
      required: true
  - name: "org.openrewrite.yaml.cleanup.RemoveUnused"
    description: "Remove YAML mapping and sequence keys that have no value."
    options: []
  - name: "org.openrewrite.yaml.format.Indents"
    description: "Format tabs and indents in YAML."
    options: []
  - name: "org.openrewrite.yaml.search.FindKey"
    description: "Find YAML entries by JsonPath expression."
    options:
    - name: "key"
      type: "String"
      required: true
  - name: "org.openrewrite.yaml.search.FindProperty"
    description: "Find a YAML property. Nested YAML mappings are interpreted as dot\
      \ separated property names, i.e.  as Spring Boot interprets `application.yml`\
      \ files."
    options:
    - name: "propertyKey"
      type: "String"
      required: true
    - name: "relaxedBinding"
      type: "Boolean"
      required: false
